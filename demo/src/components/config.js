// This file contains all the config for the natural language interface

module.exports = 
{
  "operators": [
    "(([query|what]) [([equal|is] (([number]) <plus> ([number])))])",
    "(([query|what]) [([equal|is] ([position]))])",
    "(([query|what]) [([equal|is] (<the|the> ([propertyConcept])))])",
    "(([query|quelle,quel]) [([equal|est] (<la|la> ([propertyConcept])))])",
    "((<la> ([propertyConcept])) [([property|de] ([tankConcept]))])",
    "((<the> ([propertyConcept])) [([property|of] ([tankConcept]))])",
    "([move] (([tankConcept|tank]) [([to] ([buildingConcept|building]))]))",
    "([move] (([tankConcept|tank]) [([to] ([tankConcept|tank]))]))",
    "([move] ((<all> ([tankConcept|tank])) [([to] ([tankConcept|tank]))]))",
    "([move] ((<all> (<the> ([tankConcept|tank]))) [([to] ([tankConcept|tank]))]))",
    "(([tankConcept]) [(([tankConcept]) [conj|and] ([tankConcept]))])",
    "([stop] ([tankConcept|tank]))",
    "([stop] (<all> (<the> ([tankConcept|tank]))) )",
    "([create] (<aEnglish|a> ([tankConcept|tank])))",
    "([create] (<aEnglish|a> ([buildingConcept])))",
    "([create] (<count> ([tankConcept|tanks])))",
    "([destroy] ([tankConcept|tank]))",
    "([destroy] (<all> (<the> ([tankConcept]))))",
    "([destroy] (<all> (<the> ([buildingConcept]))))",
    "([call] ([tankConcept|tank]) (joe))",
    "([appeller] ([tankConcept|char]) francois)",
    "([deplacez] ([tankConcept|char]) ([vers] batiment))",
    "([bougez] ([tankConcept]) ([aFrench|a] batiment))",
    "(([tankConcept|char]) [conj|et] ([tankConcept]))",
    "([arreter] ([tankConcept|char]))",
    "([detruire] ([tankConcept|char]))",
    "([position])",
    "(([i]) [wantMcDonalds|want] ([food]) ([fromM|from] ([mcdonalds])))",
    "(([i]) [wantWhitespot|want] ([food]) ([fromW|from] ([whitespot])))",
    "(<count> ([food]))",
    "(<aEnglish> ([food]))",
    "(([food]) <conj> ([food]))",
  ],
  "bridges": [
    {"id": "all", "level": 0, "bridge": "{ ...after, number: 'all' }"},
    {"id": "the", "level": 0, "bridge": "{ ...after, concept: true }"},
    {"id": "la", "level": 0, "bridge": "{ ...after, concept: true }"},
    {"id": "query", "level": 0, "bridge": "{ marker: 'query', isQuery: true }"},
    {"id": "property", "level": 0, "bridge": "{ object: after[0], ...next(operator) }"},
    {"id": "property", "level": 1, "bridge": "{ value: objects.tanks[operator.object['id']][before[0].name], marker: operator(objects.types[before[0].name].id, objects.types[before[0].name].level), propertyName: before[0].name, object:operator.object.id, isProperty: true }"},
    {"id": "equalProperty", "level": 1, "bridge": "{ ...next(operator), objects: append(before[0], operator.objects) }"},
    {"id": "equal", "level": 0, "bridge": "{ objects: after[0], ...next(operator) }"},
    {"id": "equal", "level": 1, "bridge": "{ ...next(operator), objects: append(before[0], operator.objects) }"},
    {"id": "plus", "level": 0, "bridge": "{ ...next(operator), value: add(before, after), marker: before[0].marker }"},
    {"id": "conj", "level": 0, "selector": {"match": "same", "type": "infix", "passthrough": true}, "bridge": "{ ...next(operator), value: append(before, after) }"},
    {"id": "conj", "level": 1, "selector": {"match": "same", "type": "postfix", "passthrough": true}, "bridge": "{ ...operator, value: append(before, operator.value) }"},
    {"id": "propertyConcept", "level": 0, "bridge": "{ ...next(operator) }"},
    {"id": "tankConcept", "level": 0, "bridge": "{ ...next(operator) }"},
    {"id": "buildingConcept", "level": 0, "bridge": "{ ...next(operator) }"},
    {"id": "to", "level": 0, "selector": {"type": "prefix"}, "bridge": "{ ...next(operator), destination: after[0] }"},
    {"id": "to", "level": 1, "bridge": "{ ...next(operator), thing: before[0] }"},
    {"id": "move", "level": 0, "bridge": "{ ...after, ...next(operator) }"},
    {"id": "move", "level": 1, "bridge": "{ action: 'move', marker: 'move', thing: operator.thing, place: operator.destination }"},
    {"id": "stop", "level": 0, "bridge": "{ thing: after[0], ...next(operator) }"},
    {"id": "stop", "level": 1, "bridge": "{ action: 'stop', marker: 'stop', thing: operator.thing }"},
    {"id": "position", "level": 0, "bridge": "{ ...next(operator), ...after }"},
    {"id": "number", "level": 0, "bridge": "{ ...next(operator), ...after }"},
    {"id": "count", "level": 0, "bridge": "{ ...operator, ...after, number: operator.value }"},
    {"id": "aEnglish", "level": 0, "selector": {"type": "prefix"}, "bridge": "{ ...after, number: 1 }"},
    {"id": "create", "level": 0, "selector": {"type": "prefix"}, "bridge": "{ klass: after[0], ...next(operator) }"},
    {"id": "create", "level": 1, "bridge": "{ action: 'create', marker: 'create', klass: operator.klass }"},
    {"id": "destroy", "level": 0, "bridge": "{ name: after[0], ...next(operator) }"},
    {"id": "destroy", "level": 1, "bridge": "{ action: 'destroy', marker: 'destroy', name: operator.name }"},
    {"id": "call", "level": 0, "bridge": "{ ...next(operator), thing: after[0], name: after[1] }"},
    {"id": "call", "level": 1, "bridge": "{ marker: 'alias', thing: operator.thing, name: operator.name }"},
    {"id": "vers", "level": 0, "bridge": "{ ...next(operator), after: after[0] }"},
    {"id": "aFrench", "level": 0, "bridge": "{ ...next(operator), after: after[0] }"},
    {"id": "deplacez", "level": 0, "bridge": "{ ...squish(after), thing: after[0], ...next(operator) }"},
    {"id": "deplacez", "level": 1, "bridge": "{ action: 'move', marker: 'move', thing: operator.thing, place: operator.vers }"},
    {"id": "bougez", "level": 0, "bridge": "{ ...squish(after), thing: after[0], ...next(operator) }"},
    {"id": "bougez", "level": 1, "bridge": "{ action: 'move', marker: 'move', thing: operator.thing, place: operator.aFrench }"},
    {"id": "appeller", "level": 0, "bridge": "{ ...next(operator), thing: after[0], name: after[1] }"},
    {"id": "appeller", "level": 1, "bridge": "{ marker: 'alias', thing: operator.thing, name: operator.name }"},
    {"id": "arreter", "level": 0, "bridge": "{ thing: after[0], ...next(operator) }"},
    {"id": "arreter", "level": 1, "bridge": "{ action: 'stop', marker: 'stop', thing: operator.thing }"},
    {"id": "detruire", "level": 0, "bridge": "{ name: after[0], ...next(operator) }"},
    {"id": "detruire", "level": 1, "bridge": "{ action: 'destroy', marker: 'destroy', name: operator.name }"},
    {"id": "food", "level": 0, "bridge": "{ ...next(operator) }"},
    {"id": "mcdonalds", "level": 0, "bridge": "{ ...next(operator) }"},
    {"id": "whitespot", "level": 0, "bridge": "{ ...next(operator) }"},
    {"id": "i", "level": 0, "bridge": "{ ...next(operator) }"},
    {"id": "wantMcDonalds", "level": 0, "bridge": "{ ...next(operator), action: 'order', items: after[0], store: after[1].from }"},
    {"id": "wantWhitespot", "level": 0, "bridge": "{ ...next(operator), action: 'order', items: after[0], store: after[1].from }"},
    {"id": "fromM", "level": 0, "bridge": "{ ...next(operator), from: after[0] }"},
    {"id": "fromW", "level": 0, "bridge": "{ ...next(operator), from: after[0] }"},
  ],
  "priorities": [
    [["la", 0], ["position", 0]],
    [["equal", 0], ["property", 0]],
    [["equal", 1], ["property", 0]],
    [["equal", 0], ["property", 1]],
    [["equal", 1], ["property", 1]],
    [["query", 0], ["property", 0]],
    [["query", 0], ["property", 1]],
    [["move", 0], ["to", 0]],
    [["move", 0], ["vers", 0]],
    [["deplacez", 0], ["to", 0]],
    [["deplacez", 0], ["vers", 0]],
    [["deplacez", 0], ["move", 0], ["vers", 0]],
    [["deplacez", 0], ["move", 0], ["to", 0]],
    [["deplacez", 0], ["move", 0], ["vers", 0], ["to", 0]],
  ],
  "words": {
    "+": [{"id": "plus"}],
    " ([0-9]+)": [{"id": "number", "initial": "{ value: int(group[0]) }"}, {"id": "count", "initial": "{ value: int(group[0]) }"}],
    "plus": [{"id": "plus"}],
    "tanks": [{"id": "tankConcept"}],
    "buildings": [{"id": "buildingConcept"}],
    " tank([0-9]+)": [{"id": "tankConcept", "initial": "{ id: concat('tank', group[0]) }"}],
    " char([0-9]+)": [{"id": "tankConcept", "initial": "{ id: concat('tank', group[0]) }"}],
    " building([0-9]+)": [{"id": "buildingConcept", "initial": "{ id: concat('building', group[0]) }"}],
    " batiment([0-9]+)": [{"id": "buildingConcept", "initial": "{ id: concat('building', group[0]) }"}],
    "et": [{"id": "conj"}],
    "speed": [{"id": "propertyConcept", "initial": {"name": "velocity"}}],
    "vitesse": [{"id": "propertyConcept", "initial": {"name": "velocity"}}],
    "position": [{"id": "propertyConcept", "initial": {"name": "position"}}],
    "cheeseburger": [{"id": "food", "initial": {"name": "cheeseburger"}}],
    "cheeseburgers": [{"id": "food", "initial": {"name": "cheeseburger"}}],
    "fries": [{"id": "food", "initial": {"name": "fries"}}],
  },
  "generators": [
    [{"marker": "tankConcept", "number": {">": 0}}, "${number} ${word}"],
    [{"marker": "tankConcept", "number": null}, "${id}"],
    [{"marker": "tankConcept", "number": "all"}, "all ${word}"],
    [{"marker": "buildingConcept", "number": {">": 0}}, "${number} ${word}"],
    [{"marker": "buildingConcept", "number": null}, "${id}"],
    [{"marker": "buildingConcept", "number": "all"}, "all ${word}"],
    [{"marker": "number"}, "${value}"],
    [{"isProperty": true}, "the ${propertyName} of ${object} is ${value}"],
    [{"marker": "equal"}, "${objects[1]}"],
    [{"marker": "conj"}, "${join(value, \"and\")}"],
    [{"marker": "move"}, "move ${thing} to ${place}"],
    [{"marker": "wantWhitespot"}, "order for ${items} from ${store}"],
    [{"marker": "wantMcDonalds"}, "order for ${items} from ${store}"],
    [{"marker": "food", "number": {">": 0}}, "${number} ${name}"],
    [{"marker": "food", "number": null}, "${name}"],
    [{"marker": "whitespot"}, "Whitespot"],
    [{"marker": "mcdonalds"}, "McDonalds"],
    [{"marker": "create"}, "create ${klass}"],
    [{"marker": "destroy"}, "destroy ${name}"],
    [{"marker": "alias"}, "call ${thing} ${name}"],
    [{"marker": "commander"}, "commander"],
    [{"marker": "commandeur"}, "commandeur"],
    [{"marker": "cia"}, "CIA"],
    [{"marker": "stop"}, "stop ${thing}"],
    [{"marker": "destroy"}, "destroy ${name}"],
  ],
  "flatten": [
    "conj",
  ],
  "queries": [
    "the speed of tank1",
    "what is the speed of tank1 and tank2",
    "what is 1 + 1 + 1 and 20 + 30",
    "move tank1 and tank2 to building2 and tank3 and tank4 to building3",
    "move tank1 to building1 deplacez char1 vers char2",
    "move tank1 to building2 tank2 to building1 and tank3 to building3",
    "i want 2 fries and a cheeseburger from mcdonalds",
    "i want a cheeseburger and fries from whitespot",
    "create 4 tanks",
    "move all the tanks to building3",
    "move all tanks to building3",
    "move tank1 to tank2",
    "quel est 1 + 1",
    "what is 1 + 1",
    "quelle est la position de char1",
    "quelle est la vitesse de char1",
    "what is the position of tank1",
    "what is the speed of tank1",
    "deplacez char1 et char2 vers batiment1",
    "move tank1 and tank2 to building2",
    "create a tank",
    "create a building",
    "destroy tank1",
    "move tank1 to tank2",
    "move tank1 and tank2 to building1",
    "deplacez char1 vers char2",
    "deplacez char1 et char2 vers batiment1",
    "move tank1 to building1",
    "deplacez char1 vers batiment1",
    "deplacez char1 vers batiment1 move tank1 to tank2",
    "call tank1 commander",
    "appeller char1 commandeur",
    "call building1 cia",
    "appeller batiment1 cia",
    "move commander to cia",
    "deplacez commandeur vers cia",
    "stop tank1",
    "arreter char1",
    "bougez char1 a batiment1",
    "3 cheeseburgers and 2 fries",
    "2 fries and a cheeseburger",
    "a cheeseburger and fries",
    "a cheeseburger",
    "1 cheeseburger",
    "i want fries and a cheeseburger from mcdonalds",
    "destroy all the buildings",
    "stop all the tanks",
    "destroy all the tanks",
    "i want fries from mcdonalds",
    "i want cheeseburger and fries from whitespot",
  ],
};