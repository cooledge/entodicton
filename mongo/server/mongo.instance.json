{
  "configs": [
    {
      "query": "column23 is a column",
      "isFragment": true
    },
    {
      "query": "modifier23 modifies collection",
      "isFragment": true
    },
    "reportable is a concept",
    "be brief",
    "pie, bar and line modify graph",
    "pie, bar and line modify chart",
    {
      "name": "mongo",
      "operators": [
        "([graphAction|graph] (column/*))",
        "([clear|clear,reset,restart])",
        "([reportable])",
        "([forTable|for] (table/*))",
        "([sortByColumns|sort,order] (table/*)? ([sortBy|by] ([column])))",
        "([groupByColumns|group,grouped] ([groupBy|by] ([column])))",
        "(([recordCount|number,count]) [ofDbProperty|of] (reportable/* || column/*))",
        "([make] ([report]))",
        "([makeGraph|make] (graph/* || chart/*) ([makeGraphOf|of]) (column/*))",
        "([state])",
        "([changeState|make] ([reportElement]) (table/*)? (state/*))",
        "([collection])",
        "([reportElementProperty])",
        "([reportElementContext])",
        "((reportElement/*) [contextOfReportElement|of] (reportElementContext/*))",
        "((reportElement/* && !@<color_colors && !@<case) [compoundReportElement] (reportElement/* && !@<color_colors && !@<case))",
        "([background])",
        "([header])",
        "([table])",
        "([column])",
        "([case])",
        "([uppercase])",
        "([lowercase])",
        "([show] (reportable/*))",
        "([showCollection|show] (collection/*))",
        "([showReport|show] (report/*))",
        "([showColumn|show,add,include,change,update,select] (column/*) ([columnAddedTo|to,on] (collection/* || table/*))?)",
        "([capitalize] ([reportElement]))",
        "([sales|])",
        "([thisReportElement|this] (reportElement/*))"
      ],
      "hierarchy": [
        [
          "color_colors",
          "state"
        ],
        [
          "case",
          "state"
        ],
        [
          "color_colors",
          "reportElement"
        ],
        [
          "case",
          "reportElement"
        ],
        [
          "graph",
          "moveable"
        ],
        [
          "graph",
          "orderable"
        ],
        [
          "chart",
          "moveable"
        ],
        [
          "chart",
          "orderable"
        ]
      ],
      "semantics": [
        {
          "match": "({context}) => context.frameOfReference && context.evaluate",
          "apply": "({context}) => {\n        const value = mentions({ context: { marker: 'table' }, frameOfReference: currentReport })\n        context.evalue = value\n      }"
        },
        {
          "match": "({context}) => ['table', 'graph', 'chart'].includes(context.marker) && context.evaluate",
          "apply": "async ({context, toContext, values, api, gp, mentions, verbatim}) => {\n        const currentReport = api.current()\n        let selectedTables\n        console.log(JSON.stringify(context, null, 2))\n        let items\n        if (context.marker == 'table') {\n          items = image.getTables(currentReport.imageSpec)\n        } else {\n          items = image.getGraphs(currentReport.imageSpec)\n        }\n        if (context.ordinal) {\n          const ordinals = values(context.ordinal)\n          const getTable = (ordinal) => {\n            let item\n            if (ordinal < 0) {\n              item = items[items.length + ordinal]\n            } else {\n              item = items[ordinal-1]\n            }\n            return item\n          }\n          selectedTables = ordinals.map( (ordinal) => getTable(ordinal.value) ).filter( (item) => item )\n        } else if (context.pullFromContext) {\n          // handle graph/chart being the same thing\n          const args = { context: { marker: context.marker }, frameOfReference: currentReport }\n          defaultTable = mentions(args)\n          if (defaultTable) {\n            selectedTables = defaultTable.value.imageSpec\n          } else {\n            selectedTables = items[items.length-1]\n          }\n        }\n\n        console.log('selectedTable', JSON.stringify(selectedTables, null, 2))\n        if (!_.isEmpty(selectedTables)) {\n          context.evalue = {\n            marker: context.marker, \n            report: currentReport,\n            value: toContext(selectedTables)\n          }\n        } else {\n          if (!context.silent) {\n            verbatim(`${await gp(context)} does not exist`)\n          }\n        }\n      }"
        },
        {
          "match": "({context}) => context.marker == 'move' && !context.evaluate",
          "where": "/home/dev/code/entodicton/mongo/server/mongo.js:566",
          "apply": "async ({context, api, values, e}) => {\n        const table = (await e(context.moveable)).evalue\n        if (table) {\n          console.log('table', JSON.stringify(table, null, 2))\n          const direction = context.direction.value\n          let distance = context.direction.steps?.value || 1\n          if (direction == 'up') {\n            distance *= -1\n          }\n          for (const moved of values(table.value)) {\n            image.moveUpOrDown(table.report.imageSpec, moved, distance)\n          }\n        }\n        api.show(table.report)\n      }"
        },
        {
          "match": "({context}) => context.marker == 'call' && context.nameable.marker == 'table'",
          "apply": "async ({context, mentioned, api, values, e}) => {\n        const table = (await e(context.nameable)).evalue\n        if (table) {\n          table.value.marker = 'table'\n          mentioned({ context: table.value, frameOfReference: table.report })\n          const name = context.name.map((n) => n.text).join(' ')\n          table.value.value[0].title = name\n        }\n        api.show(table.report)\n      }"
        }
      ],
      "bridges": [
        {
          "id": "collection"
        },
        {
          "id": "reportElementContext"
        },
        {
          "id": "contextOfReportElement",
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...before[0], root: before[0], of: operator, frameOfReference: after[0], generate: ['root', 'of', 'frameOfReference'] }"
        },
        {
          "id": "makeGraphOf",
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...next(operator) }"
        },
        {
          "id": "makeGraph",
          "isA": [
            "verb"
          ],
          "bridge": "{ ...next(operator), type: after[0], of: after[1], columns: after[2], operator: operator, generate: ['operator', 'type', 'of', 'columns'] }",
          "semantic": "async ({context, api}) => {\n        await api.graph(context.columns.text, context.columns, context.type.marker.split('_')[0])\n      }"
        },
        {
          "id": "forTable",
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...next(operator), table: after[0], postModifiers: ['table'] }",
          "semantic": "async ({context, e, mentioned}) => {\n        const destination = (await e(context.table)).evalue\n        if (destination) {\n          destination.value.marker = 'table'\n          mentioned({ context: destination.value, frameOfReference: destination.report })\n        }\n      }"
        },
        {
          "id": "graphAction",
          "isA": [
            "verb"
          ],
          "bridge": "{ ...next(operator), columns: after[0] }",
          "generatorp": "async ({context, word, g}) => `${context.word} ${await g(context.columns)}`",
          "semantic": "async ({context, api, values}) => {\n        await api.graph(context.columns.text, context.columns)\n      }"
        },
        {
          "id": "clear",
          "isA": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }",
          "semantic": "({context, api}) => {\n        api.clear()\n      }"
        },
        {
          "id": "recordCount",
          "isA": [
            "column",
            "theAble"
          ],
          "bridge": "{ ...next(operator) }"
        },
        {
          "id": "ofDbProperty",
          "isA": [
            "preposition"
          ],
          "generatorp": "({context, g}) => `number of ${g(field)}`",
          "bridge": "{ ...next(before[0]), of: operator, count: true, field: after[0], number: after[0].number, postModifiers: ['of', 'field'] }"
        },
        {
          "id": "sortBy",
          "localHierarchy": [
            [
              "column",
              "unknown"
            ]
          ],
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...next(operator), field: after[0], postModifiers: ['field'] }"
        },
        {
          "id": "groupBy",
          "localHierarchy": [
            [
              "column",
              "unknown"
            ]
          ],
          "isA": [
            "preposition"
          ],
          "generatorp": "async ({context, g}) => `${context.word} ${await g(context.field)}`",
          "bridge": "{ ...next(operator), field: after[0] }"
        },
        {
          "id": "sortByColumns",
          "optional": {
            "1": "{ marker: 'table', pullFromContext: true }"
          },
          "isA": [
            "verb"
          ],
          "bridge": "{ ...next(operator), table: after[0], field: after[1], postModifiers: ['field'] }",
          "semantic": "async ({context, e, api, values}) => {\n        const currentReport= api.current()\n        const defaultTable = (await e({...context.table, silent: true})).evalue\n        const fields = helpers.propertyToArray(context.field.field)\n        if (defaultTable) {\n          const paths = []\n          for (const table of values(defaultTable.value)) {\n            if (!paths.find( (path) => _.isEqual(path, table.dataSpecPath))) {\n              paths.push(table.dataSpecPath)\n            }\n          }\n          for (const path of paths) {\n            const dataSpec = data.getValue(currentReport.dataSpec, path)\n            report.addSort(dataSpec, fields)\n          }\n        } else {\n          report.addSort(currentReport.dataSpec, fields)\n        }\n        api.show(currentReport)\n      }"
        },
        {
          "id": "groupByColumns",
          "isA": [
            "verb"
          ],
          "bridge": "{ ...next(operator), field: after[0], postModifiers: ['field'] }",
          "semantic": "({context, api}) => {\n        const currentReport= api.current()\n        const fields = helpers.propertyToArray(context.field.field)\n        // account for name errors like saying genre but the field is genres\n        const dataSpecPath = [0]\n        const dataSpec = data.getValue(currentReport.dataSpec, dataSpecPath)\n        report.addGroup(dataSpec, fields.map((field) => field.word))\n        for (const imageSpec of image.getImageSpecs(currentReport.imageSpec, dataSpecPath)) {\n          image.addGroup(api, dataSpecPath, imageSpec, fields.map((field) => { return { name: field.word, collection: dataSpec.collectionName } }))\n        }\n        api.show(currentReport)\n      }"
        },
        {
          "id": "column",
          "isA": [
            "countable",
            "comparable"
          ],
          "words": [
            {
              "word": "column",
              "number": "one"
            },
            {
              "word": "columns",
              "number": "many"
            },
            {
              "word": "field",
              "number": "one"
            },
            {
              "word": "fields",
              "number": "many"
            },
            {
              "word": "property",
              "number": "one"
            },
            {
              "word": "properties",
              "number": "many"
            }
          ]
        },
        {
          "id": "case",
          "words": [
            {
              "word": "case",
              "number": "one"
            },
            {
              "word": "cases",
              "number": "many"
            }
          ],
          "isA": [
            "reportElementProperty"
          ]
        },
        {
          "id": "uppercase",
          "words": [
            {
              "word": "upper",
              "number": "one",
              "value": "uppercase"
            },
            {
              "word": "uppers",
              "number": "many",
              "value": "uppercase"
            }
          ],
          "isA": [
            "case"
          ]
        },
        {
          "id": "lowercase",
          "words": [
            {
              "word": "lower",
              "number": "one",
              "value": "lowercase"
            },
            {
              "word": "lowers",
              "number": "many",
              "value": "lowercase"
            }
          ],
          "isA": [
            "case"
          ]
        },
        {
          "id": "reportElementProperty"
        },
        {
          "id": "compoundReportElement",
          "convolution": true,
          "isA": [
            "reportElement",
            "theAble"
          ],
          "bridge": "{ ...next(operator), reportElements: append(default(before[0].reportElements, [before[0]]), default(after[0].reportElements, [after[0]])) }",
          "generatorp": "({context, gs}) => gs(context.reportElements)"
        },
        {
          "id": "make",
          "bridge": "{ ...next(operator), report: after[0] }",
          "parents": [
            "verb"
          ],
          "generatorp": "async ({context, g}) => `make ${await g(context.report)}`",
          "semantic": "({context, km, api}) => {\n        api.newReport()\n      }"
        },
        {
          "id": "state",
          "bridge": "{ ...next(operator) }"
        },
        {
          "id": "thisReportElement",
          "parents": [
            "articlePOS"
          ],
          "bridge": "{ ...next(after[0]), modifiers: append(['this'], after[0].modifiers), this: operator }"
        },
        {
          "id": "changeState",
          "bridge": "{ ...next(operator), reportElement: after[0], table: after[1], newState: after[2] }",
          "optional": {
            "2": "{ marker: 'table', pullFromContext: true }"
          },
          "parents": [
            "verb"
          ],
          "generatorp": "async ({context, g}) => `make ${await g(context.reportElement)} ${await g(context.newState)}`",
          "semantic": "async ({e, values, context, km, api, isA}) => {\n        const getProperty = (reportElements, state) => {\n          let property;\n          for (const re of reportElements) {\n            if (isA(re.marker, 'reportElementProperty')) {\n              if (re.marker == 'background') {\n                property = 'background-color' \n                break;\n              } if (isA(re.marker, 'case')) {\n                property = 'text-transform' \n                break;\n              } if (re.marker == 'color') {\n                property = 'color' \n                break;\n              }\n            }\n          }\n          if (!property) {\n            if (isA(state.marker, 'color_colors')) {\n              return 'color'\n            }\n            if (isA(state.marker, 'case')) {\n              return 'text-transform'\n            }\n          }\n          return property\n        }\n        const currentReport = api.current()\n        const counts = image.count(currentReport.imageSpec)\n        console.log('currentReport-----------------', JSON.stringify(currentReport, null, 2))\n        console.log('counts-----------------', JSON.stringify(counts, null, 2))\n        if (context.selected) {\n          image.selecting(null, currentReport.imageSpec)\n          const reportElements = getReportElements(currentReport.select.reportElement)\n          const property = getProperty(reportElements, context.newState)\n          currentReport.addRule(`${context.selected.selected.className} ${stateToCSS(isA, property, context.newState)}`)\n        } else {\n          const reportElements = getReportElements(context.reportElement)\n          const lastContext = reportElements.slice(-1)[0]\n          const isPlural = lastContext.number == 'many'\n          const state = context.newState\n          const property = getProperty(reportElements, state)\n          const css = stateToCSS(isA, property, state)\n\n          let tables = []\n          if (context.reportElement.frameOfReference) {\n            console.log(\"for\", JSON.stringify(await e(context.reportElement.frameOfReference).evalue, null, 2))\n            const mentioned = await e(context.reportElement.frameOfReference)\n            tables = values(await mentioned.evalue.value || [])\n            console.log('tables', JSON.stringify(tables, null, 2))\n          }\n\n          if (tables.length > 0) {\n            for (const table of tables) {\n              const selector = image.selector(table, reportElements)\n              if (css) {\n                if (state.negated) {\n                  currentReport.removeRule(`${selector} ${css}`)\n                } else {\n                  currentReport.addRule(`${selector} ${css}`)\n                }\n              }\n            }\n          } else if (isPlural || image.countSelected(currentReport.imageSpec, reportElements) == 1) {\n          // } else if (context.reportElement.modifier_selected) {\n            // make sure the state exactely matches correct CSS because the delete \"make the header not blue' needs that\n            // const table = (await e(context.table)).evalue\n            const selector = image.selector(currentReport.imageSpec, reportElements)\n            if (css) {\n              if (state.negated) {\n                currentReport.removeRule(`${selector} ${css}`)\n              } else {\n                currentReport.addRule(`${selector} ${css}`)\n              }\n            }\n          } else {\n            image.selecting('header', currentReport.imageSpec)\n            if (!currentReport.imageSpec.rules) {\n              currentReport.imageSpec.rules = []\n            }\n            currentReport.imageSpec.rules.push(`.highlight ${css}`)\n            currentReport.select = context\n          }\n        }\n        api.show(currentReport)\n      }"
        },
        {
          "id": "capitalize",
          "parents": [
            "verb"
          ],
          "bridge": "{ ...next(operator), element: after[0] }",
          "generatorp": "async ({context, gp}) => `${context.word} ${await gp(context.element)}`",
          "semantic": "({context, mentions, api}) => {\n        const report = api.current()\n        if (context.element.marker == 'header') {\n          report.imageSpec.capitalizeHeader = true\n          if (report.imageSpec.explicit) {\n            report.imageSpec.rows.forEach( (row) => {\n              row.forEach( (column) => {\n                column.capitalizeHeader = true\n              })\n            })\n          }\n          api.show(report)\n        } else if (context.element.marker == 'this') {\n          if (context.selected) {\n            console.log('the user selected', context.selected)\n            const imageSpec = report.imageSpec\n            report.addRule(`.${context.selected.selected} { text-transform: capitalize; }`)\n            imageSpec.headers.selecting = null\n            imageSpec.headers.columns.forEach( (column) => column.selecting = null )\n            api.show(report)\n          } else {\n            /*\n            const headerIds = []\n            for (let ctr = 0; ctr < report.imageSpec.headers.length; ++ctr) {\n              headerIds.push(['report', 0, 'header', ctr])\n            }\n            */\n            if (report.imageSpec.headers) {\n              report.imageSpec.headers.columns.forEach( (column, index) => {\n                column.selecting = [{ id: `column_${index}`, name: 'X', className: `column_${index}` }]\n              })\n              report.imageSpec.headers.selecting = [{ id: 'header', name: 'X', className: 'header' }]\n            }\n            /*\n            report.imageSpec.selecting = {\n              headers: {\n                each: headerIds,\n                all: [0, 'header'],\n              },\n            }\n            */\n            report.select = context\n            console.log(\"after capitalize\", JSON.stringify(report, null, 2))\n            api.show(report)\n          }\n        }\n      }"
        },
        {
          "id": "this",
          "parents": [
            "reportElement"
          ]
        },
        {
          "id": "reportElement"
        },
        {
          "id": "header",
          "words": [
            {
              "word": "header",
              "number": "one"
            },
            {
              "word": "headers",
              "number": "many"
            }
          ],
          "parents": [
            "theAble",
            "reportElement"
          ]
        },
        {
          "id": "background",
          "words": [
            {
              "word": "background",
              "number": "one"
            },
            {
              "word": "backgrounds",
              "number": "many"
            }
          ],
          "parents": [
            "theAble",
            "reportElement",
            "reportElementProperty"
          ]
        },
        {
          "id": "table",
          "words": [
            {
              "word": "table",
              "number": "one"
            },
            {
              "word": "tables",
              "number": "many"
            }
          ],
          "isA": [
            "orderable",
            "reportElementContext",
            "moveable"
          ],
          "parents": [
            "theAble",
            "reportElement",
            "nameable"
          ]
        },
        {
          "id": "report",
          "parents": [
            "theAble",
            "nameable"
          ]
        },
        {
          "id": "columnAddedTo",
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...next(operator), postModifiers: ['destination'], destination: after[0] }"
        },
        {
          "id": "showColumn",
          "optional": {
            "2": "{ marker: 'undefined' }"
          },
          "bridge": "{ ...next(operator), show: after[0], to: after[1] }",
          "parents": [
            "verb"
          ],
          "generatorp": "async ({context, g}) => {\n        if (context.to && context.to.marker !== 'undefined') {\n          return `${context.word} ${await g(context.show)} ${await g(context.to)}`\n        } else {\n          return `${context.word} ${await g(context.show)}`\n        }\n      }",
          "semantic": "async ({e, mentions, values, context, kms, api, objects}) => {\n        let currentReport = api.current()\n        if (context.chosens) {\n          const chosens = context.chosens[0]\n          // chosens.serverResponse.chooseFields.dataSpecPath\n          // report.updateColumns(currentReport, currentReport.dataSpec.dbName, currentReport.dataSpec.collectionName, context.chosens[0])\n          report.updateColumnsNew(currentReport, chosens)\n          api.show(currentReport)\n        } else if (context.show.quantity?.value == 'all') {\n          // dataSpec[0] -> select report to update greg98\n          const dataSpecPath = [0]\n          const dataSpec = data.getValue(currentReport.dataSpec, dataSpecPath)\n          const { dbName, collectionName, fields } = dataSpec\n          // '{\"chosen\":\"select\",\"choices\":[{\"text\":\"_id\",\"id\":\"_id\"},{\"text\":\"name\",\"id\":\"name\",\"selected\":true,\"counter\":1},{\"text\":\"email\",\"id\":\"email\",\"selected\":true,\"counter\":2},{\"text\":\"password\",\"id\":\"password\"}]}'\n          const choices = []\n          let counter = 1\n          for (const field of fields) {\n            choices.push({ text: field.name, id: field.name, counter, selected: true })\n            counter += 1\n          }\n          // report.updateColumns(currentReport, dataSpec.dbName, dataSpec.collectionName, { 'chosen': 'select', choices })\n          report.updateColumnsNew(currentReport, { 'chosen': 'select', choices, serverResponse: { chooseFields: { dataSpecPath } } })\n          api.show(currentReport)\n        } else if (context.show.more || (context.show.marker == 'column' && !context.show.path)) {\n          console.log('currentReport', JSON.stringify(currentReport, null, 2))\n          // dataSpec[0] -> select report to update greg98\n          const { dbName, collectionName, fields } = currentReport.dataSpec[0]\n          await api.showFieldsResponse([0], dbName, collectionName, fields, currentReport)\n          context.chosens = [] // for callback\n          currentReport.showCollection = context\n        } else if (context.show.less) {\n        } else if (context.show.marker == 'recordCount') {\n          // dataSpec[0] -> select report to update greg98\n          const fieldNames = api.addRecordCountsToDataSpec(currentReport.dataSpec[0], context.show.field).map( (f) => f.field )\n          report.addColumns(currentReport.dataSpec, currentReport.imageSpec, currentReport.dataSpec.dbName, currentReport.dataSpec.collectionName, fieldNames)\n          api.show(currentReport)\n        } else {\n          let dataSpecPath\n\n          // TODO add a the email column called contact\n          let defaultTable\n          if (context.to && context.to.marker == 'columnAddedTo') {\n            console.log(\"context.to.destination\", JSON.stringify(context.to.destination, null, 2))\n            const destination = (await e(context.to.destination)).evalue\n            console.log(\"destination\", JSON.stringify(destination, null, 2))\n            // TODO handle not found\n            defaultTable = destination\n            // currentReport = destination.report\n            // dataSpecPath = destination.value.field\n          } else {\n            // const table = mentions({ context: { marker: 'table' }, banana: 23, frameOfReference: currentReport })\n            const args = { context: { marker: 'table' }, frameOfReference: currentReport }\n            defaultTable = mentions(args)\n            if (defaultTable) {\n              console.log(JSON.stringify(defaultTable, null, 2))\n              // currentReport = defaultTable.frameOfReference\n              // greg55\n              // defaultTable = defaultTable.table.imageSpec\n            } else {\n              dataSpecPath = Array.isArray(currentReport.dataSpec) ? [0] : []\n            }\n          }\n\n          // TODO pick a better name for this\n          const someFunction = async (context, defaultTable, currentReport, dataSpecPath) => {\n            let dataSpec\n            if (!dataSpecPath) {\n              dataSpecPath = defaultTable.imageSpec.dataSpecPath\n              dataSpec = defaultTable.dataSpec\n              debugger\n            } else {\n              dataSpec = data.getValue(currentReport.dataSpec, dataSpecPath)\n            }\n            let database = dataSpec.dbName\n            let collection = dataSpec.collectionName\n\n            const columns = values(context.show)\n            let columnNames = []\n\n            let hasArray = false\n            if (database) {\n              columnNames = [context.show.path[0]]\n            } else {\n              ({ database, collection, columnNames } = await api.determineCollection(columns))\n              debugger // no chagne current\n              currentReport = await api.newReportSpec(database, collection)\n              dataSpecPath = []\n              dataSpec = currentReport.dataSpec\n\n              hasArray = false\n              for (const columnName of columnNames) {\n                hasArray = currentReport.dataSpec.fields.find( (field) => field.name == columnName ).isArray\n                if (hasArray) {\n                  break\n                }\n              }\n            }\n            if (hasArray) {\n              await api.setDataSpec(dataSpec, database, collection, columnNames)\n              console.log(JSON.stringify(dataSpec, null, 2))\n              report.addGroup(dataSpec, columnNames)\n              console.log(JSON.stringify(dataSpec, null, 2))\n              image.addGroup(api, dataSpecPath, currentReport.imageSpec, columnNames.map((columnName) => { return { name: columnName, collection: collection } }))\n            } else {\n              dataSpec.usedFields.push(...columnNames)\n              if (defaultTable) {\n                debugger\n                console.log(JSON.stringify(defaultTable, null, 2))\n                image.addColumns(defaultTable.imageSpec || defaultTable, dataSpecPath, columnNames)\n              } else {\n                for (const imageSpec of image.getImageSpecs(currentReport.imageSpec, dataSpecPath)) {\n                  // report.addColumns(dataSpec, imageSpec, database, collection, columnNames) \n                  image.addColumns(imageSpec, dataSpecPath, columnNames)\n                }\n              }\n            }\n            return currentReport\n          }\n\n          if (defaultTable) {\n            // greg55\n            for (const value of values(defaultTable.value)) {\n              console.log(\"value\", JSON.stringify(value, null, 2))\n              currentReport = await someFunction(context, value, currentReport, value.dataSpecPath)\n            }\n          } else {\n            currentReport = await someFunction(context, defaultTable, currentReport, dataSpecPath)\n          }\n          api.show(currentReport)\n        }\n      }"
        },
        {
          "id": "showReport",
          "bridge": "{ ...next(operator), show: after[0] }",
          "parents": [
            "verb"
          ],
          "generatorp": "async ({context, g}) => `show ${await g(context.show)}`",
          "semantic": "async ({context, kms, api}) => {\n        const name = context.show.value\n        const report = kms.nameable.api.get({ marker: 'report' }, name)\n        api.setCurrent(report)\n        api.show(report)\n      }"
        },
        {
          "id": "showCollection",
          "bridge": "{ ...next(operator), show: after[0] }",
          "parents": [
            "verb"
          ],
          "generatorp": "async ({context, g}) => `show ${await g(context.show)}`",
          "semantic": "async ({context, isA, km, mentions, api, flatten}) => {\n        console.log(\"in show collection\")\n        let currentReport = api.newReport()\n        if (context.chosens) {\n          console.log('in chosen', JSON.stringify(context.chosens))\n          /*\n              < in chosen {\n              <   chosen: 'select',\n              <   choices: [\n              <     { text: '_id', id: '_id' },\n              <     { text: 'name', id: 'name', selected: true },\n              <     { text: 'email', id: 'email', selected: true },\n              <     { text: 'password', id: 'password' }\n              <   ]\n          */\n          const reportable = context.reportables[context.chosens.length-1]\n          const chosen = context.chosens[context.chosens.length-1]\n          const database = reportable.database\n          const collection = reportable.collection\n\n          report.updateColumns(api, currentReport, database, collection, chosen)\n\n          api.show(currentReport)\n        } else {\n          const reportables = []\n          for (const modifier of context.show.modifiers) {\n            if (isA(context.show[modifier].marker, 'reportable')) {\n              reportables.push(context.show[modifier])\n            }\n          }\n          context.reportables = reportables // save for callback\n          const reportable = reportables[0]\n          const fields = await getFields(reportable.database, reportable.collection)\n          await api.showFieldsResponse([0], reportable.database, reportable.collection, fields)\n          context.chosens = [] // for callback\n          currentReport.showCollection = context\n        }\n      }"
        },
        {
          "id": "show",
          "bridge": "{ ...next(operator), show: after[0] }",
          "parents": [
            "verb"
          ],
          "generatorp": "async ({context, g}) => `show ${await g(context.show)}`",
          "semantic": "async ({context, km, mentions, mentioned, api, flatten, gp}) => {\n        const toArray = (context) => {\n          if (context.isList) {\n            return context.value\n          } else {\n            return [context]\n          }\n        }\n\n        const properties = toArray(context.show)\n\n        // split by table\n        const components = {}\n        for (const property of properties) {\n          if (!components[property.database]) {\n            components[property.database] = {}\n          }\n          const dbs = components[property.database]\n          if (!dbs[property.collection]) {\n            dbs[property.collection] = []\n          }\n          const collection = dbs[property.collection]\n          collection.push(property)\n        }\n\n        const dataSpecs = []\n        const imageSpecs = []\n        // const currentReport = api.newReport()\n        const currentReport = api.current()\n        for (const dbName in components) {\n          for (const collectionName in components[dbName]) {\n            const properties = components[dbName][collectionName]\n            const columns = []\n            for (const column of properties) {\n              columns.push({ text: await gp(column), id: column.path[0] })\n            }\n\n            const subReport = await api.newReportSpec(dbName, collectionName, columns, properties)\n            report.addReport(api, currentReport, subReport)\n            // greg55\n            if (true) {\n              mentioned({ \n                context: { marker: 'table', value: subReport },\n                frameOfReference: currentReport \n              })\n            }\n          }\n        }\n\n        api.setCurrent(currentReport)\n        api.show(currentReport)\n      }"
        },
        {
          "id": "sales",
          "parents": [
            "reportable",
            "theAble"
          ],
          "words": [
            {
              "word": "sales",
              "database": "mongo_test_database",
              "collection": "sales",
              "path": [
                "sales"
              ]
            }
          ]
        }
      ],
      "priorities": [
        {
          "context": [
            [
              "column",
              1
            ],
            [
              "list",
              0
            ],
            [
              "recordCount",
              0
            ]
          ],
          "choose": [
            2
          ]
        },
        {
          "context": [
            [
              "column",
              1
            ],
            [
              "list",
              0
            ],
            [
              "recordCount",
              1
            ],
            [
              "ofDbProperty",
              0
            ]
          ],
          "ordered": true,
          "choose": [
            3
          ]
        },
        {
          "context": [
            [
              "sortOrdering",
              0
            ],
            [
              "list",
              0
            ]
          ],
          "choose": [
            0
          ]
        },
        {
          "context": [
            [
              "show",
              0
            ],
            [
              "list",
              0
            ]
          ],
          "choose": [
            1
          ]
        },
        {
          "context": [
            [
              "sortBy",
              0
            ],
            [
              "column",
              0
            ],
            [
              "list",
              0
            ],
            [
              "column",
              0
            ],
            [
              "ascending",
              0
            ]
          ],
          "ordered": true,
          "choose": [
            4
          ]
        }
      ]
    },
    "selected modifies reportElement",
    {
      "apply": "async ({objects, addWords, config, s, fragments}) => {\n      const fragment = fragments(\"modifier23 modifies collection\")\n      const id = 'airbnb'\n      const word = 'airbnb'\n      const database = 'sample_airbnb'\n      const collection = 'listingsAndReviews'\n      const field = 'name'\n      const collections = [\n        { id: 'airbnb', word: 'airbnb', database: 'sample_airbnb', collection: 'listingsAndReviews', field: 'name', },\n\n        { id: 'comment', word: 'comment', database: 'sample_mflix', collection: 'comments', field: 'name', },\n        { id: 'user', word: 'user', database: 'sample_mflix', collection: 'users', field: 'name', },\n        { id: 'movie', word: 'movie', database: 'sample_mflix', collection: 'movies', field: 'title', },\n        // { id: 'customers', word: 'customers', database: 'sample_customers', collection: 'listingsAndReviews', field: 'name', },\n      ]\n\n      const addCollection = async ({ id, word, database, collection, field }) => {\n        config.addOperator(`([${id}])`)\n        config.addBridge(\n          { \n            id,\n            parents: ['theAble', 'reportable'], \n            words: helpers.words(word, { database, collection, path: [field] }),\n          },\n        )\n\n        const wordDef = {\n          collection,\n          database,\n          marker: id,\n          number: \"one\",\n          path: [ field ],\n          text: word,\n          word,\n        }\n\n        const mappings = [{\n          where: where(),\n          match: ({context}) => context.value == 'modifier23',\n          apply: ({context, cleanAssign}) => cleanAssign(context, wordDef),\n        }]\n        const instantiation = await fragment.instantiate(mappings)\n        await s(instantiation)\n        for (const { name } of await getFields(database, collection)) {\n          const word = name.replace(/_/g, \" \")\n          if (!objects.columnToCollection[name]) {\n            objects.columnToCollection[name] = []\n          }\n          objects.columnToCollection[name].push({ database, collection })\n\n          addWords('column', word, { id: 'column', path: [name] })\n          // config.addWord(word, { id: 'column', path: ['${f}'] })\n        }\n      }\n      objects.columnToCollection = {}\n      for (const collection of collections) {\n        await addCollection(collection)\n      }\n    }"
    }
  ],
  "resultss": [
    {
      "hierarchy": [
        [
          "a",
          "articlePOS",
          false
        ],
        [
          "action",
          "action",
          false
        ],
        [
          "adjective",
          "adjective",
          false
        ],
        [
          "all",
          "quantifier",
          false
        ],
        [
          "aqua_colors",
          "blue_colors",
          false
        ],
        [
          "aqua_colors",
          "hierarchyAble",
          false
        ],
        [
          "aqua_colors",
          "isEdee",
          false
        ],
        [
          "aqua_colors",
          "isEder",
          false
        ],
        [
          "aqua_colors",
          "object",
          false
        ],
        [
          "aqua_colors",
          "property",
          false
        ],
        [
          "aqua_colors",
          "queryable",
          false
        ],
        [
          "aqua_colors",
          "theAble",
          false
        ],
        [
          "aquamarine_colors",
          "blue_colors",
          false
        ],
        [
          "aquamarine_colors",
          "hierarchyAble",
          false
        ],
        [
          "aquamarine_colors",
          "isEdee",
          false
        ],
        [
          "aquamarine_colors",
          "isEder",
          false
        ],
        [
          "aquamarine_colors",
          "object",
          false
        ],
        [
          "aquamarine_colors",
          "property",
          false
        ],
        [
          "aquamarine_colors",
          "queryable",
          false
        ],
        [
          "aquamarine_colors",
          "theAble",
          false
        ],
        [
          "articlePOS",
          "articlePOS",
          false
        ],
        [
          "ascending",
          "hierarchyAble",
          false
        ],
        [
          "ascending",
          "isEdee",
          false
        ],
        [
          "ascending",
          "isEder",
          false
        ],
        [
          "ascending",
          "object",
          false
        ],
        [
          "ascending",
          "property",
          false
        ],
        [
          "ascending",
          "queryable",
          false
        ],
        [
          "ascending",
          "sort_ordering",
          false
        ],
        [
          "ascending",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "hierarchyAble",
          false
        ],
        [
          "azure_colors",
          "isEdee",
          false
        ],
        [
          "azure_colors",
          "isEder",
          false
        ],
        [
          "azure_colors",
          "object",
          false
        ],
        [
          "azure_colors",
          "property",
          false
        ],
        [
          "azure_colors",
          "queryable",
          false
        ],
        [
          "azure_colors",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "white_colors",
          false
        ],
        [
          "beige_colors",
          "hierarchyAble",
          false
        ],
        [
          "beige_colors",
          "isEdee",
          false
        ],
        [
          "beige_colors",
          "isEder",
          false
        ],
        [
          "beige_colors",
          "object",
          false
        ],
        [
          "beige_colors",
          "property",
          false
        ],
        [
          "beige_colors",
          "queryable",
          false
        ],
        [
          "beige_colors",
          "theAble",
          false
        ],
        [
          "beige_colors",
          "white_colors",
          false
        ],
        [
          "between",
          "preposition",
          false
        ],
        [
          "black_colors",
          "gray_colors",
          false
        ],
        [
          "black_colors",
          "hierarchyAble",
          false
        ],
        [
          "black_colors",
          "isEdee",
          false
        ],
        [
          "black_colors",
          "isEder",
          false
        ],
        [
          "black_colors",
          "object",
          false
        ],
        [
          "black_colors",
          "property",
          false
        ],
        [
          "black_colors",
          "queryable",
          false
        ],
        [
          "black_colors",
          "theAble",
          false
        ],
        [
          "blue_colors",
          "color_colors",
          false
        ],
        [
          "blue_colors",
          "hierarchyAble",
          false
        ],
        [
          "blue_colors",
          "isEdee",
          false
        ],
        [
          "blue_colors",
          "isEder",
          false
        ],
        [
          "blue_colors",
          "object",
          false
        ],
        [
          "blue_colors",
          "property",
          false
        ],
        [
          "blue_colors",
          "queryable",
          false
        ],
        [
          "blue_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors",
          "color_colors_modifier",
          false
        ],
        [
          "brightness_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors",
          "object",
          false
        ],
        [
          "brightness_colors",
          "property",
          false
        ],
        [
          "brightness_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "adjective",
          true
        ],
        [
          "brightness_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "brightness_colors_color_colors",
          "concept",
          false
        ],
        [
          "brightness_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors_color_colors",
          "object",
          false
        ],
        [
          "brightness_colors_color_colors",
          "property",
          false
        ],
        [
          "brightness_colors_color_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors_color_colors",
          "theAble",
          false
        ],
        [
          "brown_colors",
          "color_colors",
          false
        ],
        [
          "brown_colors",
          "hierarchyAble",
          false
        ],
        [
          "brown_colors",
          "isEdee",
          false
        ],
        [
          "brown_colors",
          "isEder",
          false
        ],
        [
          "brown_colors",
          "object",
          false
        ],
        [
          "brown_colors",
          "property",
          false
        ],
        [
          "brown_colors",
          "queryable",
          false
        ],
        [
          "brown_colors",
          "theAble",
          false
        ],
        [
          "call",
          "verb",
          false
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion",
          false
        ],
        [
          "canBeQuestion",
          "canBeQuestion",
          false
        ],
        [
          "cancel",
          "verb",
          false
        ],
        [
          "chartruese_colors",
          "green_colors",
          false
        ],
        [
          "chartruese_colors",
          "hierarchyAble",
          false
        ],
        [
          "chartruese_colors",
          "isEdee",
          false
        ],
        [
          "chartruese_colors",
          "isEder",
          false
        ],
        [
          "chartruese_colors",
          "object",
          false
        ],
        [
          "chartruese_colors",
          "property",
          false
        ],
        [
          "chartruese_colors",
          "queryable",
          false
        ],
        [
          "chartruese_colors",
          "theAble",
          false
        ],
        [
          "color_colors",
          "concept",
          false
        ],
        [
          "color_colors",
          "hierarchyAble",
          false
        ],
        [
          "color_colors",
          "isEdee",
          false
        ],
        [
          "color_colors",
          "isEder",
          false
        ],
        [
          "color_colors",
          "object",
          false
        ],
        [
          "color_colors",
          "property",
          false
        ],
        [
          "color_colors",
          "queryable",
          false
        ],
        [
          "color_colors",
          "theAble",
          false
        ],
        [
          "color_colors_modifier",
          "color_colors_modifier",
          false
        ],
        [
          "concept",
          "queryable",
          false
        ],
        [
          "concept",
          "theAble",
          false
        ],
        [
          "condition",
          "condition",
          false
        ],
        [
          "countable",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "isEdee",
          false
        ],
        [
          "crimson_colors",
          "isEder",
          false
        ],
        [
          "crimson_colors",
          "object",
          false
        ],
        [
          "crimson_colors",
          "property",
          false
        ],
        [
          "crimson_colors",
          "queryable",
          false
        ],
        [
          "crimson_colors",
          "red_colors",
          false
        ],
        [
          "crimson_colors",
          "theAble",
          false
        ],
        [
          "cyan_colors",
          "blue_colors",
          false
        ],
        [
          "cyan_colors",
          "hierarchyAble",
          false
        ],
        [
          "cyan_colors",
          "isEdee",
          false
        ],
        [
          "cyan_colors",
          "isEder",
          false
        ],
        [
          "cyan_colors",
          "object",
          false
        ],
        [
          "cyan_colors",
          "property",
          false
        ],
        [
          "cyan_colors",
          "queryable",
          false
        ],
        [
          "cyan_colors",
          "theAble",
          false
        ],
        [
          "dark_colors",
          "brightness_colors",
          false
        ],
        [
          "dark_colors",
          "hierarchyAble",
          false
        ],
        [
          "dark_colors",
          "isEdee",
          false
        ],
        [
          "dark_colors",
          "isEder",
          false
        ],
        [
          "dark_colors",
          "object",
          false
        ],
        [
          "dark_colors",
          "property",
          false
        ],
        [
          "dark_colors",
          "queryable",
          false
        ],
        [
          "dark_colors",
          "theAble",
          false
        ],
        [
          "descending",
          "hierarchyAble",
          false
        ],
        [
          "descending",
          "isEdee",
          false
        ],
        [
          "descending",
          "isEder",
          false
        ],
        [
          "descending",
          "object",
          false
        ],
        [
          "descending",
          "property",
          false
        ],
        [
          "descending",
          "queryable",
          false
        ],
        [
          "descending",
          "sort_ordering",
          false
        ],
        [
          "descending",
          "theAble",
          false
        ],
        [
          "direction",
          "direction",
          false
        ],
        [
          "divideByExpression",
          "mathematicalExpression",
          false
        ],
        [
          "divideByOperator",
          "mathematical_operator",
          false
        ],
        [
          "doubleQuote",
          "queryable",
          false
        ],
        [
          "down",
          "direction",
          false
        ],
        [
          "evaluate",
          "verb",
          false
        ],
        [
          "gold_colors",
          "hierarchyAble",
          false
        ],
        [
          "gold_colors",
          "isEdee",
          false
        ],
        [
          "gold_colors",
          "isEder",
          false
        ],
        [
          "gold_colors",
          "object",
          false
        ],
        [
          "gold_colors",
          "property",
          false
        ],
        [
          "gold_colors",
          "queryable",
          false
        ],
        [
          "gold_colors",
          "theAble",
          false
        ],
        [
          "gold_colors",
          "yellow_colors",
          false
        ],
        [
          "gray_colors",
          "color_colors",
          false
        ],
        [
          "gray_colors",
          "hierarchyAble",
          false
        ],
        [
          "gray_colors",
          "isEdee",
          false
        ],
        [
          "gray_colors",
          "isEder",
          false
        ],
        [
          "gray_colors",
          "object",
          false
        ],
        [
          "gray_colors",
          "property",
          false
        ],
        [
          "gray_colors",
          "queryable",
          false
        ],
        [
          "gray_colors",
          "theAble",
          false
        ],
        [
          "green_colors",
          "color_colors",
          false
        ],
        [
          "green_colors",
          "hierarchyAble",
          false
        ],
        [
          "green_colors",
          "isEdee",
          false
        ],
        [
          "green_colors",
          "isEder",
          false
        ],
        [
          "green_colors",
          "object",
          false
        ],
        [
          "green_colors",
          "property",
          false
        ],
        [
          "green_colors",
          "queryable",
          false
        ],
        [
          "green_colors",
          "theAble",
          false
        ],
        [
          "hasCountOfPieces",
          "countable",
          false
        ],
        [
          "have",
          "canBeDoQuestion",
          false
        ],
        [
          "have",
          "canBeQuestion",
          false
        ],
        [
          "hex_colors",
          "color_colors_modifier",
          false
        ],
        [
          "hex_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors",
          "isEder",
          false
        ],
        [
          "hex_colors",
          "object",
          false
        ],
        [
          "hex_colors",
          "property",
          false
        ],
        [
          "hex_colors",
          "queryable",
          false
        ],
        [
          "hex_colors",
          "theAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "adjective",
          true
        ],
        [
          "hex_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "hex_colors_color_colors",
          "concept",
          false
        ],
        [
          "hex_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEder",
          false
        ],
        [
          "hex_colors_color_colors",
          "object",
          false
        ],
        [
          "hex_colors_color_colors",
          "property",
          false
        ],
        [
          "hex_colors_color_colors",
          "queryable",
          false
        ],
        [
          "hex_colors_color_colors",
          "theAble",
          false
        ],
        [
          "hierarchyAble",
          "queryable",
          false
        ],
        [
          "highest",
          "condition",
          false
        ],
        [
          "ifAble",
          "ifAble",
          false
        ],
        [
          "indigo_colors",
          "hierarchyAble",
          false
        ],
        [
          "indigo_colors",
          "isEdee",
          false
        ],
        [
          "indigo_colors",
          "isEder",
          false
        ],
        [
          "indigo_colors",
          "object",
          false
        ],
        [
          "indigo_colors",
          "property",
          false
        ],
        [
          "indigo_colors",
          "purple_colors",
          false
        ],
        [
          "indigo_colors",
          "queryable",
          false
        ],
        [
          "indigo_colors",
          "theAble",
          false
        ],
        [
          "is",
          "canBeQuestion",
          false
        ],
        [
          "is",
          "verb",
          false
        ],
        [
          "isEdee",
          "isEdee",
          false
        ],
        [
          "isEder",
          "isEder",
          false
        ],
        [
          "it",
          "pronoun",
          false
        ],
        [
          "it",
          "queryable",
          false
        ],
        [
          "it",
          "thisitthat",
          false
        ],
        [
          "it",
          "toAble",
          false
        ],
        [
          "ivory_colors",
          "hierarchyAble",
          false
        ],
        [
          "ivory_colors",
          "isEdee",
          false
        ],
        [
          "ivory_colors",
          "isEder",
          false
        ],
        [
          "ivory_colors",
          "object",
          false
        ],
        [
          "ivory_colors",
          "property",
          false
        ],
        [
          "ivory_colors",
          "queryable",
          false
        ],
        [
          "ivory_colors",
          "theAble",
          false
        ],
        [
          "ivory_colors",
          "white_colors",
          false
        ],
        [
          "khaki_colors",
          "hierarchyAble",
          false
        ],
        [
          "khaki_colors",
          "isEdee",
          false
        ],
        [
          "khaki_colors",
          "isEder",
          false
        ],
        [
          "khaki_colors",
          "object",
          false
        ],
        [
          "khaki_colors",
          "property",
          false
        ],
        [
          "khaki_colors",
          "queryable",
          false
        ],
        [
          "khaki_colors",
          "theAble",
          false
        ],
        [
          "khaki_colors",
          "yellow_colors",
          false
        ],
        [
          "lavender_colors",
          "hierarchyAble",
          false
        ],
        [
          "lavender_colors",
          "isEdee",
          false
        ],
        [
          "lavender_colors",
          "isEder",
          false
        ],
        [
          "lavender_colors",
          "object",
          false
        ],
        [
          "lavender_colors",
          "property",
          false
        ],
        [
          "lavender_colors",
          "purple_colors",
          false
        ],
        [
          "lavender_colors",
          "queryable",
          false
        ],
        [
          "lavender_colors",
          "theAble",
          false
        ],
        [
          "left",
          "direction",
          false
        ],
        [
          "light_colors",
          "brightness_colors",
          false
        ],
        [
          "light_colors",
          "hierarchyAble",
          false
        ],
        [
          "light_colors",
          "isEdee",
          false
        ],
        [
          "light_colors",
          "isEder",
          false
        ],
        [
          "light_colors",
          "object",
          false
        ],
        [
          "light_colors",
          "property",
          false
        ],
        [
          "light_colors",
          "queryable",
          false
        ],
        [
          "light_colors",
          "theAble",
          false
        ],
        [
          "lime_colors",
          "green_colors",
          false
        ],
        [
          "lime_colors",
          "hierarchyAble",
          false
        ],
        [
          "lime_colors",
          "isEdee",
          false
        ],
        [
          "lime_colors",
          "isEder",
          false
        ],
        [
          "lime_colors",
          "object",
          false
        ],
        [
          "lime_colors",
          "property",
          false
        ],
        [
          "lime_colors",
          "queryable",
          false
        ],
        [
          "lime_colors",
          "theAble",
          false
        ],
        [
          "listening",
          "action",
          false
        ],
        [
          "lowest",
          "condition",
          false
        ],
        [
          "magenta_colors",
          "hierarchyAble",
          false
        ],
        [
          "magenta_colors",
          "isEdee",
          false
        ],
        [
          "magenta_colors",
          "isEder",
          false
        ],
        [
          "magenta_colors",
          "object",
          false
        ],
        [
          "magenta_colors",
          "property",
          false
        ],
        [
          "magenta_colors",
          "purple_colors",
          false
        ],
        [
          "magenta_colors",
          "queryable",
          false
        ],
        [
          "magenta_colors",
          "theAble",
          false
        ],
        [
          "maroon_colors",
          "brown_colors",
          false
        ],
        [
          "maroon_colors",
          "hierarchyAble",
          false
        ],
        [
          "maroon_colors",
          "isEdee",
          false
        ],
        [
          "maroon_colors",
          "isEder",
          false
        ],
        [
          "maroon_colors",
          "object",
          false
        ],
        [
          "maroon_colors",
          "property",
          false
        ],
        [
          "maroon_colors",
          "queryable",
          false
        ],
        [
          "maroon_colors",
          "theAble",
          false
        ],
        [
          "mathematical",
          "hierarchyAble",
          false
        ],
        [
          "mathematical",
          "isEdee",
          false
        ],
        [
          "mathematical",
          "isEder",
          false
        ],
        [
          "mathematical",
          "object",
          false
        ],
        [
          "mathematical",
          "operator_modifier",
          false
        ],
        [
          "mathematical",
          "property",
          false
        ],
        [
          "mathematical",
          "queryable",
          false
        ],
        [
          "mathematical",
          "theAble",
          false
        ],
        [
          "mathematicalExpression",
          "concept",
          false
        ],
        [
          "mathematicalExpression",
          "number",
          false
        ],
        [
          "mathematical_operator",
          "adjective",
          true
        ],
        [
          "mathematical_operator",
          "concept",
          false
        ],
        [
          "mathematical_operator",
          "hierarchyAble",
          false
        ],
        [
          "mathematical_operator",
          "isEdee",
          false
        ],
        [
          "mathematical_operator",
          "isEder",
          false
        ],
        [
          "mathematical_operator",
          "object",
          false
        ],
        [
          "mathematical_operator",
          "operator",
          false
        ],
        [
          "mathematical_operator",
          "property",
          false
        ],
        [
          "mathematical_operator",
          "queryable",
          false
        ],
        [
          "mathematical_operator",
          "theAble",
          false
        ],
        [
          "memorable",
          "theAble",
          false
        ],
        [
          "minusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "minusOperator",
          "mathematical_operator",
          false
        ],
        [
          "modifies",
          "verb",
          false
        ],
        [
          "move",
          "verb",
          false
        ],
        [
          "moveAmount",
          "preposition",
          false
        ],
        [
          "navy_colors",
          "blue_colors",
          false
        ],
        [
          "navy_colors",
          "hierarchyAble",
          false
        ],
        [
          "navy_colors",
          "isEdee",
          false
        ],
        [
          "navy_colors",
          "isEder",
          false
        ],
        [
          "navy_colors",
          "object",
          false
        ],
        [
          "navy_colors",
          "property",
          false
        ],
        [
          "navy_colors",
          "queryable",
          false
        ],
        [
          "navy_colors",
          "theAble",
          false
        ],
        [
          "noun",
          "theAble",
          false
        ],
        [
          "number",
          "quantifier",
          false
        ],
        [
          "number",
          "queryable",
          false
        ],
        [
          "object",
          "queryable",
          false
        ],
        [
          "object",
          "theAble",
          false
        ],
        [
          "olive_colors",
          "green_colors",
          false
        ],
        [
          "olive_colors",
          "hierarchyAble",
          false
        ],
        [
          "olive_colors",
          "isEdee",
          false
        ],
        [
          "olive_colors",
          "isEder",
          false
        ],
        [
          "olive_colors",
          "object",
          false
        ],
        [
          "olive_colors",
          "property",
          false
        ],
        [
          "olive_colors",
          "queryable",
          false
        ],
        [
          "olive_colors",
          "theAble",
          false
        ],
        [
          "operator",
          "concept",
          false
        ],
        [
          "operator",
          "hierarchyAble",
          false
        ],
        [
          "operator",
          "isEdee",
          false
        ],
        [
          "operator",
          "isEder",
          false
        ],
        [
          "operator",
          "object",
          false
        ],
        [
          "operator",
          "property",
          false
        ],
        [
          "operator",
          "queryable",
          false
        ],
        [
          "operator",
          "theAble",
          false
        ],
        [
          "operator_modifier",
          "operator_modifier",
          false
        ],
        [
          "orAble",
          "ifAble",
          false
        ],
        [
          "orange_colors",
          "color_colors",
          false
        ],
        [
          "orange_colors",
          "hierarchyAble",
          false
        ],
        [
          "orange_colors",
          "isEdee",
          false
        ],
        [
          "orange_colors",
          "isEder",
          false
        ],
        [
          "orange_colors",
          "object",
          false
        ],
        [
          "orange_colors",
          "property",
          false
        ],
        [
          "orange_colors",
          "queryable",
          false
        ],
        [
          "orange_colors",
          "theAble",
          false
        ],
        [
          "ordering",
          "concept",
          false
        ],
        [
          "ordering",
          "hierarchyAble",
          false
        ],
        [
          "ordering",
          "isEdee",
          false
        ],
        [
          "ordering",
          "isEder",
          false
        ],
        [
          "ordering",
          "object",
          false
        ],
        [
          "ordering",
          "property",
          false
        ],
        [
          "ordering",
          "queryable",
          false
        ],
        [
          "ordering",
          "theAble",
          false
        ],
        [
          "ordering_modifier",
          "ordering_modifier",
          false
        ],
        [
          "ordinal",
          "number",
          false
        ],
        [
          "ordinalOnOrdered",
          "adjective",
          false
        ],
        [
          "pink_colors",
          "color_colors",
          false
        ],
        [
          "pink_colors",
          "hierarchyAble",
          false
        ],
        [
          "pink_colors",
          "isEdee",
          false
        ],
        [
          "pink_colors",
          "isEder",
          false
        ],
        [
          "pink_colors",
          "object",
          false
        ],
        [
          "pink_colors",
          "property",
          false
        ],
        [
          "pink_colors",
          "queryable",
          false
        ],
        [
          "pink_colors",
          "theAble",
          false
        ],
        [
          "plusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "plusOperator",
          "mathematical_operator",
          false
        ],
        [
          "preposition",
          "preposition",
          false
        ],
        [
          "pronoun",
          "pronoun",
          false
        ],
        [
          "property",
          "queryable",
          false
        ],
        [
          "property",
          "theAble",
          false
        ],
        [
          "punctuation",
          "punctuation",
          false
        ],
        [
          "purple_colors",
          "color_colors",
          false
        ],
        [
          "purple_colors",
          "hierarchyAble",
          false
        ],
        [
          "purple_colors",
          "isEdee",
          false
        ],
        [
          "purple_colors",
          "isEder",
          false
        ],
        [
          "purple_colors",
          "object",
          false
        ],
        [
          "purple_colors",
          "property",
          false
        ],
        [
          "purple_colors",
          "queryable",
          false
        ],
        [
          "purple_colors",
          "theAble",
          false
        ],
        [
          "quantifier",
          "quantifier",
          false
        ],
        [
          "queryable",
          "queryable",
          false
        ],
        [
          "questionMark",
          "punctuation",
          false
        ],
        [
          "readonly",
          "queryable",
          false
        ],
        [
          "reason",
          "queryable",
          false
        ],
        [
          "reason",
          "theAble",
          false
        ],
        [
          "red_colors",
          "color_colors",
          false
        ],
        [
          "red_colors",
          "hierarchyAble",
          false
        ],
        [
          "red_colors",
          "isEdee",
          false
        ],
        [
          "red_colors",
          "isEder",
          false
        ],
        [
          "red_colors",
          "object",
          false
        ],
        [
          "red_colors",
          "property",
          false
        ],
        [
          "red_colors",
          "queryable",
          false
        ],
        [
          "red_colors",
          "theAble",
          false
        ],
        [
          "remember",
          "verb",
          false
        ],
        [
          "right",
          "direction",
          false
        ],
        [
          "select",
          "verb",
          false
        ],
        [
          "sienna_colors",
          "brown_colors",
          false
        ],
        [
          "sienna_colors",
          "hierarchyAble",
          false
        ],
        [
          "sienna_colors",
          "isEdee",
          false
        ],
        [
          "sienna_colors",
          "isEder",
          false
        ],
        [
          "sienna_colors",
          "object",
          false
        ],
        [
          "sienna_colors",
          "property",
          false
        ],
        [
          "sienna_colors",
          "queryable",
          false
        ],
        [
          "sienna_colors",
          "theAble",
          false
        ],
        [
          "silver_colors",
          "gray_colors",
          false
        ],
        [
          "silver_colors",
          "hierarchyAble",
          false
        ],
        [
          "silver_colors",
          "isEdee",
          false
        ],
        [
          "silver_colors",
          "isEder",
          false
        ],
        [
          "silver_colors",
          "object",
          false
        ],
        [
          "silver_colors",
          "property",
          false
        ],
        [
          "silver_colors",
          "queryable",
          false
        ],
        [
          "silver_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "hierarchyAble",
          false
        ],
        [
          "snow_colors",
          "isEdee",
          false
        ],
        [
          "snow_colors",
          "isEder",
          false
        ],
        [
          "snow_colors",
          "object",
          false
        ],
        [
          "snow_colors",
          "property",
          false
        ],
        [
          "snow_colors",
          "queryable",
          false
        ],
        [
          "snow_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "white_colors",
          false
        ],
        [
          "sort",
          "hierarchyAble",
          false
        ],
        [
          "sort",
          "isEdee",
          false
        ],
        [
          "sort",
          "isEder",
          false
        ],
        [
          "sort",
          "object",
          false
        ],
        [
          "sort",
          "ordering_modifier",
          false
        ],
        [
          "sort",
          "property",
          false
        ],
        [
          "sort",
          "queryable",
          false
        ],
        [
          "sort",
          "theAble",
          false
        ],
        [
          "sortOrdering",
          "adjective",
          false
        ],
        [
          "sort_ordering",
          "adjective",
          true
        ],
        [
          "sort_ordering",
          "concept",
          false
        ],
        [
          "sort_ordering",
          "hierarchyAble",
          false
        ],
        [
          "sort_ordering",
          "isEdee",
          false
        ],
        [
          "sort_ordering",
          "isEder",
          false
        ],
        [
          "sort_ordering",
          "object",
          false
        ],
        [
          "sort_ordering",
          "ordering",
          false
        ],
        [
          "sort_ordering",
          "property",
          false
        ],
        [
          "sort_ordering",
          "queryable",
          false
        ],
        [
          "sort_ordering",
          "theAble",
          false
        ],
        [
          "stm_before",
          "adjective",
          false
        ],
        [
          "stop",
          "verb",
          false
        ],
        [
          "tan_colors",
          "brown_colors",
          false
        ],
        [
          "tan_colors",
          "hierarchyAble",
          false
        ],
        [
          "tan_colors",
          "isEdee",
          false
        ],
        [
          "tan_colors",
          "isEder",
          false
        ],
        [
          "tan_colors",
          "object",
          false
        ],
        [
          "tan_colors",
          "property",
          false
        ],
        [
          "tan_colors",
          "queryable",
          false
        ],
        [
          "tan_colors",
          "theAble",
          false
        ],
        [
          "teal_colors",
          "green_colors",
          false
        ],
        [
          "teal_colors",
          "hierarchyAble",
          false
        ],
        [
          "teal_colors",
          "isEdee",
          false
        ],
        [
          "teal_colors",
          "isEder",
          false
        ],
        [
          "teal_colors",
          "object",
          false
        ],
        [
          "teal_colors",
          "property",
          false
        ],
        [
          "teal_colors",
          "queryable",
          false
        ],
        [
          "teal_colors",
          "theAble",
          false
        ],
        [
          "that",
          "thisitthat",
          false
        ],
        [
          "the",
          "articlePOS",
          false
        ],
        [
          "theAble",
          "theAble",
          false
        ],
        [
          "this",
          "pronoun",
          false
        ],
        [
          "this",
          "queryable",
          false
        ],
        [
          "this",
          "thisitthat",
          false
        ],
        [
          "thisitthat",
          "queryable",
          false
        ],
        [
          "timesExpression",
          "mathematicalExpression",
          false
        ],
        [
          "timesOperator",
          "mathematical_operator",
          false
        ],
        [
          "to",
          "preposition",
          false
        ],
        [
          "toAble",
          "toAble",
          false
        ],
        [
          "turquoise_colors",
          "blue_colors",
          false
        ],
        [
          "turquoise_colors",
          "hierarchyAble",
          false
        ],
        [
          "turquoise_colors",
          "isEdee",
          false
        ],
        [
          "turquoise_colors",
          "isEder",
          false
        ],
        [
          "turquoise_colors",
          "object",
          false
        ],
        [
          "turquoise_colors",
          "property",
          false
        ],
        [
          "turquoise_colors",
          "queryable",
          false
        ],
        [
          "turquoise_colors",
          "theAble",
          false
        ],
        [
          "type",
          "property",
          false
        ],
        [
          "type",
          "whatAble",
          false
        ],
        [
          "unknown",
          "hierarchyAble",
          false
        ],
        [
          "unknown",
          "queryable",
          false
        ],
        [
          "unknown",
          "theAble",
          false
        ],
        [
          "unselect",
          "verb",
          false
        ],
        [
          "up",
          "direction",
          false
        ],
        [
          "verb",
          "verb",
          false
        ],
        [
          "violet_colors",
          "hierarchyAble",
          false
        ],
        [
          "violet_colors",
          "isEdee",
          false
        ],
        [
          "violet_colors",
          "isEder",
          false
        ],
        [
          "violet_colors",
          "object",
          false
        ],
        [
          "violet_colors",
          "property",
          false
        ],
        [
          "violet_colors",
          "purple_colors",
          false
        ],
        [
          "violet_colors",
          "queryable",
          false
        ],
        [
          "violet_colors",
          "theAble",
          false
        ],
        [
          "what",
          "object",
          false
        ],
        [
          "what",
          "queryable",
          false
        ],
        [
          "whatAble",
          "queryable",
          false
        ],
        [
          "white_colors",
          "color_colors",
          false
        ],
        [
          "white_colors",
          "hierarchyAble",
          false
        ],
        [
          "white_colors",
          "isEdee",
          false
        ],
        [
          "white_colors",
          "isEder",
          false
        ],
        [
          "white_colors",
          "object",
          false
        ],
        [
          "white_colors",
          "property",
          false
        ],
        [
          "white_colors",
          "queryable",
          false
        ],
        [
          "white_colors",
          "theAble",
          false
        ],
        [
          "whose",
          "object",
          false
        ],
        [
          "x",
          "number",
          false
        ],
        [
          "xfx",
          "queryable",
          false
        ],
        [
          "y",
          "number",
          false
        ],
        [
          "yellow_colors",
          "color_colors",
          false
        ],
        [
          "yellow_colors",
          "hierarchyAble",
          false
        ],
        [
          "yellow_colors",
          "isEdee",
          false
        ],
        [
          "yellow_colors",
          "isEder",
          false
        ],
        [
          "yellow_colors",
          "object",
          false
        ],
        [
          "yellow_colors",
          "property",
          false
        ],
        [
          "yellow_colors",
          "queryable",
          false
        ],
        [
          "yellow_colors",
          "theAble",
          false
        ]
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 1
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 2
          },
          {
            "op": [
              "a",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ]
            ],
            "counter": 3
          },
          {
            "op": [
              "is",
              0
            ],
            "ops": [
              [
                "is",
                0
              ]
            ],
            "counter": 4
          },
          {
            "op": [
              "is",
              1
            ],
            "ops": [
              [
                "is",
                1
              ]
            ],
            "counter": 5
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "number": "one",
          "text": "column23 is a column",
          "marker": "is",
          "word": "is",
          "range": {
            "start": 0,
            "end": 19
          },
          "one": {
            "number": "one",
            "value": "column23",
            "unknown": true,
            "text": "column23",
            "marker": "unknown",
            "word": "column23",
            "range": {
              "start": 0,
              "end": 19
            },
            "dead": true,
            "types": [
              "unknown"
            ],
            "level": 1
          },
          "two": {
            "value": "column",
            "unknown": true,
            "text": "a column",
            "marker": "unknown",
            "word": "column",
            "range": {
              "start": 12,
              "end": 19
            },
            "dead": true,
            "types": [
              "unknown"
            ],
            "pullFromContext": false,
            "instance": true,
            "concept": true,
            "number": "one",
            "wantsValue": true,
            "determiner": {
              "marker": "a",
              "default": true,
              "word": "a",
              "text": "a",
              "range": {
                "start": 12,
                "end": 12
              },
              "level": 0
            },
            "modifiers": [
              "determiner"
            ],
            "level": 1
          },
          "dead": true,
          "level": 2,
          "topLevel": true,
          "touchedBy": [
            "mongo#call2"
          ]
        }
      ],
      "generated": [
        ""
      ],
      "paraphrases": [
        "column23 is a column"
      ],
      "paraphrasesParenthesized": [],
      "generatedParenthesized": [],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            0
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            "unknown",
            1
          ]
        ]
      ],
      "learned_contextual_priorities": [],
      "query": "column23 is a column",
      "isFragment": true,
      "key": {
        "query": "column23 is a column"
      }
    },
    {
      "hierarchy": [
        [
          "a",
          "articlePOS",
          false
        ],
        [
          "action",
          "action",
          false
        ],
        [
          "adjective",
          "adjective",
          false
        ],
        [
          "all",
          "quantifier",
          false
        ],
        [
          "aqua_colors",
          "blue_colors",
          false
        ],
        [
          "aqua_colors",
          "hierarchyAble",
          false
        ],
        [
          "aqua_colors",
          "isEdee",
          false
        ],
        [
          "aqua_colors",
          "isEder",
          false
        ],
        [
          "aqua_colors",
          "object",
          false
        ],
        [
          "aqua_colors",
          "property",
          false
        ],
        [
          "aqua_colors",
          "queryable",
          false
        ],
        [
          "aqua_colors",
          "theAble",
          false
        ],
        [
          "aquamarine_colors",
          "blue_colors",
          false
        ],
        [
          "aquamarine_colors",
          "hierarchyAble",
          false
        ],
        [
          "aquamarine_colors",
          "isEdee",
          false
        ],
        [
          "aquamarine_colors",
          "isEder",
          false
        ],
        [
          "aquamarine_colors",
          "object",
          false
        ],
        [
          "aquamarine_colors",
          "property",
          false
        ],
        [
          "aquamarine_colors",
          "queryable",
          false
        ],
        [
          "aquamarine_colors",
          "theAble",
          false
        ],
        [
          "articlePOS",
          "articlePOS",
          false
        ],
        [
          "ascending",
          "hierarchyAble",
          false
        ],
        [
          "ascending",
          "isEdee",
          false
        ],
        [
          "ascending",
          "isEder",
          false
        ],
        [
          "ascending",
          "object",
          false
        ],
        [
          "ascending",
          "property",
          false
        ],
        [
          "ascending",
          "queryable",
          false
        ],
        [
          "ascending",
          "sort_ordering",
          false
        ],
        [
          "ascending",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "hierarchyAble",
          false
        ],
        [
          "azure_colors",
          "isEdee",
          false
        ],
        [
          "azure_colors",
          "isEder",
          false
        ],
        [
          "azure_colors",
          "object",
          false
        ],
        [
          "azure_colors",
          "property",
          false
        ],
        [
          "azure_colors",
          "queryable",
          false
        ],
        [
          "azure_colors",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "white_colors",
          false
        ],
        [
          "beige_colors",
          "hierarchyAble",
          false
        ],
        [
          "beige_colors",
          "isEdee",
          false
        ],
        [
          "beige_colors",
          "isEder",
          false
        ],
        [
          "beige_colors",
          "object",
          false
        ],
        [
          "beige_colors",
          "property",
          false
        ],
        [
          "beige_colors",
          "queryable",
          false
        ],
        [
          "beige_colors",
          "theAble",
          false
        ],
        [
          "beige_colors",
          "white_colors",
          false
        ],
        [
          "between",
          "preposition",
          false
        ],
        [
          "black_colors",
          "gray_colors",
          false
        ],
        [
          "black_colors",
          "hierarchyAble",
          false
        ],
        [
          "black_colors",
          "isEdee",
          false
        ],
        [
          "black_colors",
          "isEder",
          false
        ],
        [
          "black_colors",
          "object",
          false
        ],
        [
          "black_colors",
          "property",
          false
        ],
        [
          "black_colors",
          "queryable",
          false
        ],
        [
          "black_colors",
          "theAble",
          false
        ],
        [
          "blue_colors",
          "color_colors",
          false
        ],
        [
          "blue_colors",
          "hierarchyAble",
          false
        ],
        [
          "blue_colors",
          "isEdee",
          false
        ],
        [
          "blue_colors",
          "isEder",
          false
        ],
        [
          "blue_colors",
          "object",
          false
        ],
        [
          "blue_colors",
          "property",
          false
        ],
        [
          "blue_colors",
          "queryable",
          false
        ],
        [
          "blue_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors",
          "color_colors_modifier",
          false
        ],
        [
          "brightness_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors",
          "object",
          false
        ],
        [
          "brightness_colors",
          "property",
          false
        ],
        [
          "brightness_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "adjective",
          true
        ],
        [
          "brightness_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "brightness_colors_color_colors",
          "concept",
          false
        ],
        [
          "brightness_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors_color_colors",
          "object",
          false
        ],
        [
          "brightness_colors_color_colors",
          "property",
          false
        ],
        [
          "brightness_colors_color_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors_color_colors",
          "theAble",
          false
        ],
        [
          "brown_colors",
          "color_colors",
          false
        ],
        [
          "brown_colors",
          "hierarchyAble",
          false
        ],
        [
          "brown_colors",
          "isEdee",
          false
        ],
        [
          "brown_colors",
          "isEder",
          false
        ],
        [
          "brown_colors",
          "object",
          false
        ],
        [
          "brown_colors",
          "property",
          false
        ],
        [
          "brown_colors",
          "queryable",
          false
        ],
        [
          "brown_colors",
          "theAble",
          false
        ],
        [
          "call",
          "verb",
          false
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion",
          false
        ],
        [
          "canBeQuestion",
          "canBeQuestion",
          false
        ],
        [
          "cancel",
          "verb",
          false
        ],
        [
          "chartruese_colors",
          "green_colors",
          false
        ],
        [
          "chartruese_colors",
          "hierarchyAble",
          false
        ],
        [
          "chartruese_colors",
          "isEdee",
          false
        ],
        [
          "chartruese_colors",
          "isEder",
          false
        ],
        [
          "chartruese_colors",
          "object",
          false
        ],
        [
          "chartruese_colors",
          "property",
          false
        ],
        [
          "chartruese_colors",
          "queryable",
          false
        ],
        [
          "chartruese_colors",
          "theAble",
          false
        ],
        [
          "color_colors",
          "concept",
          false
        ],
        [
          "color_colors",
          "hierarchyAble",
          false
        ],
        [
          "color_colors",
          "isEdee",
          false
        ],
        [
          "color_colors",
          "isEder",
          false
        ],
        [
          "color_colors",
          "object",
          false
        ],
        [
          "color_colors",
          "property",
          false
        ],
        [
          "color_colors",
          "queryable",
          false
        ],
        [
          "color_colors",
          "theAble",
          false
        ],
        [
          "color_colors_modifier",
          "color_colors_modifier",
          false
        ],
        [
          "column",
          "hierarchyAble",
          false
        ],
        [
          "column",
          "isEdee",
          false
        ],
        [
          "column",
          "isEder",
          false
        ],
        [
          "column",
          "object",
          false
        ],
        [
          "column",
          "property",
          false
        ],
        [
          "column",
          "queryable",
          false
        ],
        [
          "column",
          "theAble",
          false
        ],
        [
          "column23",
          "column",
          false
        ],
        [
          "column23",
          "hierarchyAble",
          false
        ],
        [
          "column23",
          "isEdee",
          false
        ],
        [
          "column23",
          "isEder",
          false
        ],
        [
          "column23",
          "object",
          false
        ],
        [
          "column23",
          "property",
          false
        ],
        [
          "column23",
          "queryable",
          false
        ],
        [
          "column23",
          "theAble",
          false
        ],
        [
          "concept",
          "queryable",
          false
        ],
        [
          "concept",
          "theAble",
          false
        ],
        [
          "condition",
          "condition",
          false
        ],
        [
          "countable",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "isEdee",
          false
        ],
        [
          "crimson_colors",
          "isEder",
          false
        ],
        [
          "crimson_colors",
          "object",
          false
        ],
        [
          "crimson_colors",
          "property",
          false
        ],
        [
          "crimson_colors",
          "queryable",
          false
        ],
        [
          "crimson_colors",
          "red_colors",
          false
        ],
        [
          "crimson_colors",
          "theAble",
          false
        ],
        [
          "cyan_colors",
          "blue_colors",
          false
        ],
        [
          "cyan_colors",
          "hierarchyAble",
          false
        ],
        [
          "cyan_colors",
          "isEdee",
          false
        ],
        [
          "cyan_colors",
          "isEder",
          false
        ],
        [
          "cyan_colors",
          "object",
          false
        ],
        [
          "cyan_colors",
          "property",
          false
        ],
        [
          "cyan_colors",
          "queryable",
          false
        ],
        [
          "cyan_colors",
          "theAble",
          false
        ],
        [
          "dark_colors",
          "brightness_colors",
          false
        ],
        [
          "dark_colors",
          "hierarchyAble",
          false
        ],
        [
          "dark_colors",
          "isEdee",
          false
        ],
        [
          "dark_colors",
          "isEder",
          false
        ],
        [
          "dark_colors",
          "object",
          false
        ],
        [
          "dark_colors",
          "property",
          false
        ],
        [
          "dark_colors",
          "queryable",
          false
        ],
        [
          "dark_colors",
          "theAble",
          false
        ],
        [
          "descending",
          "hierarchyAble",
          false
        ],
        [
          "descending",
          "isEdee",
          false
        ],
        [
          "descending",
          "isEder",
          false
        ],
        [
          "descending",
          "object",
          false
        ],
        [
          "descending",
          "property",
          false
        ],
        [
          "descending",
          "queryable",
          false
        ],
        [
          "descending",
          "sort_ordering",
          false
        ],
        [
          "descending",
          "theAble",
          false
        ],
        [
          "direction",
          "direction",
          false
        ],
        [
          "divideByExpression",
          "mathematicalExpression",
          false
        ],
        [
          "divideByOperator",
          "mathematical_operator",
          false
        ],
        [
          "doubleQuote",
          "queryable",
          false
        ],
        [
          "down",
          "direction",
          false
        ],
        [
          "evaluate",
          "verb",
          false
        ],
        [
          "gold_colors",
          "hierarchyAble",
          false
        ],
        [
          "gold_colors",
          "isEdee",
          false
        ],
        [
          "gold_colors",
          "isEder",
          false
        ],
        [
          "gold_colors",
          "object",
          false
        ],
        [
          "gold_colors",
          "property",
          false
        ],
        [
          "gold_colors",
          "queryable",
          false
        ],
        [
          "gold_colors",
          "theAble",
          false
        ],
        [
          "gold_colors",
          "yellow_colors",
          false
        ],
        [
          "gray_colors",
          "color_colors",
          false
        ],
        [
          "gray_colors",
          "hierarchyAble",
          false
        ],
        [
          "gray_colors",
          "isEdee",
          false
        ],
        [
          "gray_colors",
          "isEder",
          false
        ],
        [
          "gray_colors",
          "object",
          false
        ],
        [
          "gray_colors",
          "property",
          false
        ],
        [
          "gray_colors",
          "queryable",
          false
        ],
        [
          "gray_colors",
          "theAble",
          false
        ],
        [
          "green_colors",
          "color_colors",
          false
        ],
        [
          "green_colors",
          "hierarchyAble",
          false
        ],
        [
          "green_colors",
          "isEdee",
          false
        ],
        [
          "green_colors",
          "isEder",
          false
        ],
        [
          "green_colors",
          "object",
          false
        ],
        [
          "green_colors",
          "property",
          false
        ],
        [
          "green_colors",
          "queryable",
          false
        ],
        [
          "green_colors",
          "theAble",
          false
        ],
        [
          "hasCountOfPieces",
          "countable",
          false
        ],
        [
          "have",
          "canBeDoQuestion",
          false
        ],
        [
          "have",
          "canBeQuestion",
          false
        ],
        [
          "hex_colors",
          "color_colors_modifier",
          false
        ],
        [
          "hex_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors",
          "isEder",
          false
        ],
        [
          "hex_colors",
          "object",
          false
        ],
        [
          "hex_colors",
          "property",
          false
        ],
        [
          "hex_colors",
          "queryable",
          false
        ],
        [
          "hex_colors",
          "theAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "adjective",
          true
        ],
        [
          "hex_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "hex_colors_color_colors",
          "concept",
          false
        ],
        [
          "hex_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEder",
          false
        ],
        [
          "hex_colors_color_colors",
          "object",
          false
        ],
        [
          "hex_colors_color_colors",
          "property",
          false
        ],
        [
          "hex_colors_color_colors",
          "queryable",
          false
        ],
        [
          "hex_colors_color_colors",
          "theAble",
          false
        ],
        [
          "hierarchyAble",
          "queryable",
          false
        ],
        [
          "highest",
          "condition",
          false
        ],
        [
          "ifAble",
          "ifAble",
          false
        ],
        [
          "indigo_colors",
          "hierarchyAble",
          false
        ],
        [
          "indigo_colors",
          "isEdee",
          false
        ],
        [
          "indigo_colors",
          "isEder",
          false
        ],
        [
          "indigo_colors",
          "object",
          false
        ],
        [
          "indigo_colors",
          "property",
          false
        ],
        [
          "indigo_colors",
          "purple_colors",
          false
        ],
        [
          "indigo_colors",
          "queryable",
          false
        ],
        [
          "indigo_colors",
          "theAble",
          false
        ],
        [
          "is",
          "canBeQuestion",
          false
        ],
        [
          "is",
          "verb",
          false
        ],
        [
          "isEdee",
          "isEdee",
          false
        ],
        [
          "isEder",
          "isEder",
          false
        ],
        [
          "it",
          "pronoun",
          false
        ],
        [
          "it",
          "queryable",
          false
        ],
        [
          "it",
          "thisitthat",
          false
        ],
        [
          "it",
          "toAble",
          false
        ],
        [
          "ivory_colors",
          "hierarchyAble",
          false
        ],
        [
          "ivory_colors",
          "isEdee",
          false
        ],
        [
          "ivory_colors",
          "isEder",
          false
        ],
        [
          "ivory_colors",
          "object",
          false
        ],
        [
          "ivory_colors",
          "property",
          false
        ],
        [
          "ivory_colors",
          "queryable",
          false
        ],
        [
          "ivory_colors",
          "theAble",
          false
        ],
        [
          "ivory_colors",
          "white_colors",
          false
        ],
        [
          "khaki_colors",
          "hierarchyAble",
          false
        ],
        [
          "khaki_colors",
          "isEdee",
          false
        ],
        [
          "khaki_colors",
          "isEder",
          false
        ],
        [
          "khaki_colors",
          "object",
          false
        ],
        [
          "khaki_colors",
          "property",
          false
        ],
        [
          "khaki_colors",
          "queryable",
          false
        ],
        [
          "khaki_colors",
          "theAble",
          false
        ],
        [
          "khaki_colors",
          "yellow_colors",
          false
        ],
        [
          "lavender_colors",
          "hierarchyAble",
          false
        ],
        [
          "lavender_colors",
          "isEdee",
          false
        ],
        [
          "lavender_colors",
          "isEder",
          false
        ],
        [
          "lavender_colors",
          "object",
          false
        ],
        [
          "lavender_colors",
          "property",
          false
        ],
        [
          "lavender_colors",
          "purple_colors",
          false
        ],
        [
          "lavender_colors",
          "queryable",
          false
        ],
        [
          "lavender_colors",
          "theAble",
          false
        ],
        [
          "left",
          "direction",
          false
        ],
        [
          "light_colors",
          "brightness_colors",
          false
        ],
        [
          "light_colors",
          "hierarchyAble",
          false
        ],
        [
          "light_colors",
          "isEdee",
          false
        ],
        [
          "light_colors",
          "isEder",
          false
        ],
        [
          "light_colors",
          "object",
          false
        ],
        [
          "light_colors",
          "property",
          false
        ],
        [
          "light_colors",
          "queryable",
          false
        ],
        [
          "light_colors",
          "theAble",
          false
        ],
        [
          "lime_colors",
          "green_colors",
          false
        ],
        [
          "lime_colors",
          "hierarchyAble",
          false
        ],
        [
          "lime_colors",
          "isEdee",
          false
        ],
        [
          "lime_colors",
          "isEder",
          false
        ],
        [
          "lime_colors",
          "object",
          false
        ],
        [
          "lime_colors",
          "property",
          false
        ],
        [
          "lime_colors",
          "queryable",
          false
        ],
        [
          "lime_colors",
          "theAble",
          false
        ],
        [
          "listening",
          "action",
          false
        ],
        [
          "lowest",
          "condition",
          false
        ],
        [
          "magenta_colors",
          "hierarchyAble",
          false
        ],
        [
          "magenta_colors",
          "isEdee",
          false
        ],
        [
          "magenta_colors",
          "isEder",
          false
        ],
        [
          "magenta_colors",
          "object",
          false
        ],
        [
          "magenta_colors",
          "property",
          false
        ],
        [
          "magenta_colors",
          "purple_colors",
          false
        ],
        [
          "magenta_colors",
          "queryable",
          false
        ],
        [
          "magenta_colors",
          "theAble",
          false
        ],
        [
          "maroon_colors",
          "brown_colors",
          false
        ],
        [
          "maroon_colors",
          "hierarchyAble",
          false
        ],
        [
          "maroon_colors",
          "isEdee",
          false
        ],
        [
          "maroon_colors",
          "isEder",
          false
        ],
        [
          "maroon_colors",
          "object",
          false
        ],
        [
          "maroon_colors",
          "property",
          false
        ],
        [
          "maroon_colors",
          "queryable",
          false
        ],
        [
          "maroon_colors",
          "theAble",
          false
        ],
        [
          "mathematical",
          "hierarchyAble",
          false
        ],
        [
          "mathematical",
          "isEdee",
          false
        ],
        [
          "mathematical",
          "isEder",
          false
        ],
        [
          "mathematical",
          "object",
          false
        ],
        [
          "mathematical",
          "operator_modifier",
          false
        ],
        [
          "mathematical",
          "property",
          false
        ],
        [
          "mathematical",
          "queryable",
          false
        ],
        [
          "mathematical",
          "theAble",
          false
        ],
        [
          "mathematicalExpression",
          "concept",
          false
        ],
        [
          "mathematicalExpression",
          "number",
          false
        ],
        [
          "mathematical_operator",
          "adjective",
          true
        ],
        [
          "mathematical_operator",
          "concept",
          false
        ],
        [
          "mathematical_operator",
          "hierarchyAble",
          false
        ],
        [
          "mathematical_operator",
          "isEdee",
          false
        ],
        [
          "mathematical_operator",
          "isEder",
          false
        ],
        [
          "mathematical_operator",
          "object",
          false
        ],
        [
          "mathematical_operator",
          "operator",
          false
        ],
        [
          "mathematical_operator",
          "property",
          false
        ],
        [
          "mathematical_operator",
          "queryable",
          false
        ],
        [
          "mathematical_operator",
          "theAble",
          false
        ],
        [
          "memorable",
          "theAble",
          false
        ],
        [
          "minusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "minusOperator",
          "mathematical_operator",
          false
        ],
        [
          "modifies",
          "verb",
          false
        ],
        [
          "move",
          "verb",
          false
        ],
        [
          "moveAmount",
          "preposition",
          false
        ],
        [
          "navy_colors",
          "blue_colors",
          false
        ],
        [
          "navy_colors",
          "hierarchyAble",
          false
        ],
        [
          "navy_colors",
          "isEdee",
          false
        ],
        [
          "navy_colors",
          "isEder",
          false
        ],
        [
          "navy_colors",
          "object",
          false
        ],
        [
          "navy_colors",
          "property",
          false
        ],
        [
          "navy_colors",
          "queryable",
          false
        ],
        [
          "navy_colors",
          "theAble",
          false
        ],
        [
          "noun",
          "theAble",
          false
        ],
        [
          "number",
          "quantifier",
          false
        ],
        [
          "number",
          "queryable",
          false
        ],
        [
          "object",
          "queryable",
          false
        ],
        [
          "object",
          "theAble",
          false
        ],
        [
          "olive_colors",
          "green_colors",
          false
        ],
        [
          "olive_colors",
          "hierarchyAble",
          false
        ],
        [
          "olive_colors",
          "isEdee",
          false
        ],
        [
          "olive_colors",
          "isEder",
          false
        ],
        [
          "olive_colors",
          "object",
          false
        ],
        [
          "olive_colors",
          "property",
          false
        ],
        [
          "olive_colors",
          "queryable",
          false
        ],
        [
          "olive_colors",
          "theAble",
          false
        ],
        [
          "operator",
          "concept",
          false
        ],
        [
          "operator",
          "hierarchyAble",
          false
        ],
        [
          "operator",
          "isEdee",
          false
        ],
        [
          "operator",
          "isEder",
          false
        ],
        [
          "operator",
          "object",
          false
        ],
        [
          "operator",
          "property",
          false
        ],
        [
          "operator",
          "queryable",
          false
        ],
        [
          "operator",
          "theAble",
          false
        ],
        [
          "operator_modifier",
          "operator_modifier",
          false
        ],
        [
          "orAble",
          "ifAble",
          false
        ],
        [
          "orange_colors",
          "color_colors",
          false
        ],
        [
          "orange_colors",
          "hierarchyAble",
          false
        ],
        [
          "orange_colors",
          "isEdee",
          false
        ],
        [
          "orange_colors",
          "isEder",
          false
        ],
        [
          "orange_colors",
          "object",
          false
        ],
        [
          "orange_colors",
          "property",
          false
        ],
        [
          "orange_colors",
          "queryable",
          false
        ],
        [
          "orange_colors",
          "theAble",
          false
        ],
        [
          "ordering",
          "concept",
          false
        ],
        [
          "ordering",
          "hierarchyAble",
          false
        ],
        [
          "ordering",
          "isEdee",
          false
        ],
        [
          "ordering",
          "isEder",
          false
        ],
        [
          "ordering",
          "object",
          false
        ],
        [
          "ordering",
          "property",
          false
        ],
        [
          "ordering",
          "queryable",
          false
        ],
        [
          "ordering",
          "theAble",
          false
        ],
        [
          "ordering_modifier",
          "ordering_modifier",
          false
        ],
        [
          "ordinal",
          "number",
          false
        ],
        [
          "ordinalOnOrdered",
          "adjective",
          false
        ],
        [
          "pink_colors",
          "color_colors",
          false
        ],
        [
          "pink_colors",
          "hierarchyAble",
          false
        ],
        [
          "pink_colors",
          "isEdee",
          false
        ],
        [
          "pink_colors",
          "isEder",
          false
        ],
        [
          "pink_colors",
          "object",
          false
        ],
        [
          "pink_colors",
          "property",
          false
        ],
        [
          "pink_colors",
          "queryable",
          false
        ],
        [
          "pink_colors",
          "theAble",
          false
        ],
        [
          "plusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "plusOperator",
          "mathematical_operator",
          false
        ],
        [
          "preposition",
          "preposition",
          false
        ],
        [
          "pronoun",
          "pronoun",
          false
        ],
        [
          "property",
          "queryable",
          false
        ],
        [
          "property",
          "theAble",
          false
        ],
        [
          "punctuation",
          "punctuation",
          false
        ],
        [
          "purple_colors",
          "color_colors",
          false
        ],
        [
          "purple_colors",
          "hierarchyAble",
          false
        ],
        [
          "purple_colors",
          "isEdee",
          false
        ],
        [
          "purple_colors",
          "isEder",
          false
        ],
        [
          "purple_colors",
          "object",
          false
        ],
        [
          "purple_colors",
          "property",
          false
        ],
        [
          "purple_colors",
          "queryable",
          false
        ],
        [
          "purple_colors",
          "theAble",
          false
        ],
        [
          "quantifier",
          "quantifier",
          false
        ],
        [
          "queryable",
          "queryable",
          false
        ],
        [
          "questionMark",
          "punctuation",
          false
        ],
        [
          "readonly",
          "queryable",
          false
        ],
        [
          "reason",
          "queryable",
          false
        ],
        [
          "reason",
          "theAble",
          false
        ],
        [
          "red_colors",
          "color_colors",
          false
        ],
        [
          "red_colors",
          "hierarchyAble",
          false
        ],
        [
          "red_colors",
          "isEdee",
          false
        ],
        [
          "red_colors",
          "isEder",
          false
        ],
        [
          "red_colors",
          "object",
          false
        ],
        [
          "red_colors",
          "property",
          false
        ],
        [
          "red_colors",
          "queryable",
          false
        ],
        [
          "red_colors",
          "theAble",
          false
        ],
        [
          "remember",
          "verb",
          false
        ],
        [
          "right",
          "direction",
          false
        ],
        [
          "select",
          "verb",
          false
        ],
        [
          "sienna_colors",
          "brown_colors",
          false
        ],
        [
          "sienna_colors",
          "hierarchyAble",
          false
        ],
        [
          "sienna_colors",
          "isEdee",
          false
        ],
        [
          "sienna_colors",
          "isEder",
          false
        ],
        [
          "sienna_colors",
          "object",
          false
        ],
        [
          "sienna_colors",
          "property",
          false
        ],
        [
          "sienna_colors",
          "queryable",
          false
        ],
        [
          "sienna_colors",
          "theAble",
          false
        ],
        [
          "silver_colors",
          "gray_colors",
          false
        ],
        [
          "silver_colors",
          "hierarchyAble",
          false
        ],
        [
          "silver_colors",
          "isEdee",
          false
        ],
        [
          "silver_colors",
          "isEder",
          false
        ],
        [
          "silver_colors",
          "object",
          false
        ],
        [
          "silver_colors",
          "property",
          false
        ],
        [
          "silver_colors",
          "queryable",
          false
        ],
        [
          "silver_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "hierarchyAble",
          false
        ],
        [
          "snow_colors",
          "isEdee",
          false
        ],
        [
          "snow_colors",
          "isEder",
          false
        ],
        [
          "snow_colors",
          "object",
          false
        ],
        [
          "snow_colors",
          "property",
          false
        ],
        [
          "snow_colors",
          "queryable",
          false
        ],
        [
          "snow_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "white_colors",
          false
        ],
        [
          "sort",
          "hierarchyAble",
          false
        ],
        [
          "sort",
          "isEdee",
          false
        ],
        [
          "sort",
          "isEder",
          false
        ],
        [
          "sort",
          "object",
          false
        ],
        [
          "sort",
          "ordering_modifier",
          false
        ],
        [
          "sort",
          "property",
          false
        ],
        [
          "sort",
          "queryable",
          false
        ],
        [
          "sort",
          "theAble",
          false
        ],
        [
          "sortOrdering",
          "adjective",
          false
        ],
        [
          "sort_ordering",
          "adjective",
          true
        ],
        [
          "sort_ordering",
          "concept",
          false
        ],
        [
          "sort_ordering",
          "hierarchyAble",
          false
        ],
        [
          "sort_ordering",
          "isEdee",
          false
        ],
        [
          "sort_ordering",
          "isEder",
          false
        ],
        [
          "sort_ordering",
          "object",
          false
        ],
        [
          "sort_ordering",
          "ordering",
          false
        ],
        [
          "sort_ordering",
          "property",
          false
        ],
        [
          "sort_ordering",
          "queryable",
          false
        ],
        [
          "sort_ordering",
          "theAble",
          false
        ],
        [
          "stm_before",
          "adjective",
          false
        ],
        [
          "stop",
          "verb",
          false
        ],
        [
          "tan_colors",
          "brown_colors",
          false
        ],
        [
          "tan_colors",
          "hierarchyAble",
          false
        ],
        [
          "tan_colors",
          "isEdee",
          false
        ],
        [
          "tan_colors",
          "isEder",
          false
        ],
        [
          "tan_colors",
          "object",
          false
        ],
        [
          "tan_colors",
          "property",
          false
        ],
        [
          "tan_colors",
          "queryable",
          false
        ],
        [
          "tan_colors",
          "theAble",
          false
        ],
        [
          "teal_colors",
          "green_colors",
          false
        ],
        [
          "teal_colors",
          "hierarchyAble",
          false
        ],
        [
          "teal_colors",
          "isEdee",
          false
        ],
        [
          "teal_colors",
          "isEder",
          false
        ],
        [
          "teal_colors",
          "object",
          false
        ],
        [
          "teal_colors",
          "property",
          false
        ],
        [
          "teal_colors",
          "queryable",
          false
        ],
        [
          "teal_colors",
          "theAble",
          false
        ],
        [
          "that",
          "thisitthat",
          false
        ],
        [
          "the",
          "articlePOS",
          false
        ],
        [
          "theAble",
          "theAble",
          false
        ],
        [
          "this",
          "pronoun",
          false
        ],
        [
          "this",
          "queryable",
          false
        ],
        [
          "this",
          "thisitthat",
          false
        ],
        [
          "thisitthat",
          "queryable",
          false
        ],
        [
          "timesExpression",
          "mathematicalExpression",
          false
        ],
        [
          "timesOperator",
          "mathematical_operator",
          false
        ],
        [
          "to",
          "preposition",
          false
        ],
        [
          "toAble",
          "toAble",
          false
        ],
        [
          "turquoise_colors",
          "blue_colors",
          false
        ],
        [
          "turquoise_colors",
          "hierarchyAble",
          false
        ],
        [
          "turquoise_colors",
          "isEdee",
          false
        ],
        [
          "turquoise_colors",
          "isEder",
          false
        ],
        [
          "turquoise_colors",
          "object",
          false
        ],
        [
          "turquoise_colors",
          "property",
          false
        ],
        [
          "turquoise_colors",
          "queryable",
          false
        ],
        [
          "turquoise_colors",
          "theAble",
          false
        ],
        [
          "type",
          "property",
          false
        ],
        [
          "type",
          "whatAble",
          false
        ],
        [
          "unknown",
          "hierarchyAble",
          false
        ],
        [
          "unknown",
          "queryable",
          false
        ],
        [
          "unknown",
          "theAble",
          false
        ],
        [
          "unselect",
          "verb",
          false
        ],
        [
          "up",
          "direction",
          false
        ],
        [
          "verb",
          "verb",
          false
        ],
        [
          "violet_colors",
          "hierarchyAble",
          false
        ],
        [
          "violet_colors",
          "isEdee",
          false
        ],
        [
          "violet_colors",
          "isEder",
          false
        ],
        [
          "violet_colors",
          "object",
          false
        ],
        [
          "violet_colors",
          "property",
          false
        ],
        [
          "violet_colors",
          "purple_colors",
          false
        ],
        [
          "violet_colors",
          "queryable",
          false
        ],
        [
          "violet_colors",
          "theAble",
          false
        ],
        [
          "what",
          "object",
          false
        ],
        [
          "what",
          "queryable",
          false
        ],
        [
          "whatAble",
          "queryable",
          false
        ],
        [
          "white_colors",
          "color_colors",
          false
        ],
        [
          "white_colors",
          "hierarchyAble",
          false
        ],
        [
          "white_colors",
          "isEdee",
          false
        ],
        [
          "white_colors",
          "isEder",
          false
        ],
        [
          "white_colors",
          "object",
          false
        ],
        [
          "white_colors",
          "property",
          false
        ],
        [
          "white_colors",
          "queryable",
          false
        ],
        [
          "white_colors",
          "theAble",
          false
        ],
        [
          "whose",
          "object",
          false
        ],
        [
          "x",
          "number",
          false
        ],
        [
          "xfx",
          "queryable",
          false
        ],
        [
          "y",
          "number",
          false
        ],
        [
          "yellow_colors",
          "color_colors",
          false
        ],
        [
          "yellow_colors",
          "hierarchyAble",
          false
        ],
        [
          "yellow_colors",
          "isEdee",
          false
        ],
        [
          "yellow_colors",
          "isEder",
          false
        ],
        [
          "yellow_colors",
          "object",
          false
        ],
        [
          "yellow_colors",
          "property",
          false
        ],
        [
          "yellow_colors",
          "queryable",
          false
        ],
        [
          "yellow_colors",
          "theAble",
          false
        ]
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "modifies",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 1
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "modifies",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 2
          },
          {
            "op": [
              "modifies",
              0
            ],
            "ops": [
              [
                "modifies",
                0
              ]
            ],
            "counter": 3
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "word": "modifies",
          "number": "one",
          "flatten": false,
          "text": "modifier23 modifies collection",
          "marker": "modifies",
          "range": {
            "start": 0,
            "end": 29
          },
          "dead": true,
          "modifiers": [
            {
              "value": "modifier23",
              "unknown": true,
              "text": "modifier23",
              "marker": "unknown",
              "word": "modifier23",
              "range": {
                "start": 0,
                "end": 9
              },
              "dead": true,
              "level": 1
            }
          ],
          "concept": {
            "value": "collection",
            "unknown": true,
            "text": "collection",
            "marker": "unknown",
            "word": "collection",
            "range": {
              "start": 20,
              "end": 29
            },
            "dead": true,
            "level": 1
          },
          "level": 1,
          "topLevel": true,
          "touchedBy": [
            "mongo#call2"
          ]
        }
      ],
      "generated": [
        ""
      ],
      "paraphrases": [
        "modifier23 modifies collection"
      ],
      "paraphrasesParenthesized": [],
      "generatedParenthesized": [],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "modifies",
            0
          ],
          [
            "unknown",
            0
          ]
        ],
        [
          [
            "modifies",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "modifies",
            0
          ],
          [
            "unknown",
            1
          ]
        ]
      ],
      "learned_contextual_priorities": [],
      "query": "modifier23 modifies collection",
      "isFragment": true,
      "key": {
        "query": "modifier23 modifies collection"
      }
    },
    {
      "hierarchy": [
        [
          "a",
          "articlePOS",
          false
        ],
        [
          "action",
          "action",
          false
        ],
        [
          "adjective",
          "adjective",
          false
        ],
        [
          "all",
          "quantifier",
          false
        ],
        [
          "aqua_colors",
          "blue_colors",
          false
        ],
        [
          "aqua_colors",
          "hierarchyAble",
          false
        ],
        [
          "aqua_colors",
          "isEdee",
          false
        ],
        [
          "aqua_colors",
          "isEder",
          false
        ],
        [
          "aqua_colors",
          "object",
          false
        ],
        [
          "aqua_colors",
          "property",
          false
        ],
        [
          "aqua_colors",
          "queryable",
          false
        ],
        [
          "aqua_colors",
          "theAble",
          false
        ],
        [
          "aquamarine_colors",
          "blue_colors",
          false
        ],
        [
          "aquamarine_colors",
          "hierarchyAble",
          false
        ],
        [
          "aquamarine_colors",
          "isEdee",
          false
        ],
        [
          "aquamarine_colors",
          "isEder",
          false
        ],
        [
          "aquamarine_colors",
          "object",
          false
        ],
        [
          "aquamarine_colors",
          "property",
          false
        ],
        [
          "aquamarine_colors",
          "queryable",
          false
        ],
        [
          "aquamarine_colors",
          "theAble",
          false
        ],
        [
          "articlePOS",
          "articlePOS",
          false
        ],
        [
          "ascending",
          "hierarchyAble",
          false
        ],
        [
          "ascending",
          "isEdee",
          false
        ],
        [
          "ascending",
          "isEder",
          false
        ],
        [
          "ascending",
          "object",
          false
        ],
        [
          "ascending",
          "property",
          false
        ],
        [
          "ascending",
          "queryable",
          false
        ],
        [
          "ascending",
          "sort_ordering",
          false
        ],
        [
          "ascending",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "hierarchyAble",
          false
        ],
        [
          "azure_colors",
          "isEdee",
          false
        ],
        [
          "azure_colors",
          "isEder",
          false
        ],
        [
          "azure_colors",
          "object",
          false
        ],
        [
          "azure_colors",
          "property",
          false
        ],
        [
          "azure_colors",
          "queryable",
          false
        ],
        [
          "azure_colors",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "white_colors",
          false
        ],
        [
          "beige_colors",
          "hierarchyAble",
          false
        ],
        [
          "beige_colors",
          "isEdee",
          false
        ],
        [
          "beige_colors",
          "isEder",
          false
        ],
        [
          "beige_colors",
          "object",
          false
        ],
        [
          "beige_colors",
          "property",
          false
        ],
        [
          "beige_colors",
          "queryable",
          false
        ],
        [
          "beige_colors",
          "theAble",
          false
        ],
        [
          "beige_colors",
          "white_colors",
          false
        ],
        [
          "between",
          "preposition",
          false
        ],
        [
          "black_colors",
          "gray_colors",
          false
        ],
        [
          "black_colors",
          "hierarchyAble",
          false
        ],
        [
          "black_colors",
          "isEdee",
          false
        ],
        [
          "black_colors",
          "isEder",
          false
        ],
        [
          "black_colors",
          "object",
          false
        ],
        [
          "black_colors",
          "property",
          false
        ],
        [
          "black_colors",
          "queryable",
          false
        ],
        [
          "black_colors",
          "theAble",
          false
        ],
        [
          "blue_colors",
          "color_colors",
          false
        ],
        [
          "blue_colors",
          "hierarchyAble",
          false
        ],
        [
          "blue_colors",
          "isEdee",
          false
        ],
        [
          "blue_colors",
          "isEder",
          false
        ],
        [
          "blue_colors",
          "object",
          false
        ],
        [
          "blue_colors",
          "property",
          false
        ],
        [
          "blue_colors",
          "queryable",
          false
        ],
        [
          "blue_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors",
          "color_colors_modifier",
          false
        ],
        [
          "brightness_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors",
          "object",
          false
        ],
        [
          "brightness_colors",
          "property",
          false
        ],
        [
          "brightness_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "adjective",
          true
        ],
        [
          "brightness_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "brightness_colors_color_colors",
          "concept",
          false
        ],
        [
          "brightness_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors_color_colors",
          "object",
          false
        ],
        [
          "brightness_colors_color_colors",
          "property",
          false
        ],
        [
          "brightness_colors_color_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors_color_colors",
          "theAble",
          false
        ],
        [
          "brown_colors",
          "color_colors",
          false
        ],
        [
          "brown_colors",
          "hierarchyAble",
          false
        ],
        [
          "brown_colors",
          "isEdee",
          false
        ],
        [
          "brown_colors",
          "isEder",
          false
        ],
        [
          "brown_colors",
          "object",
          false
        ],
        [
          "brown_colors",
          "property",
          false
        ],
        [
          "brown_colors",
          "queryable",
          false
        ],
        [
          "brown_colors",
          "theAble",
          false
        ],
        [
          "call",
          "verb",
          false
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion",
          false
        ],
        [
          "canBeQuestion",
          "canBeQuestion",
          false
        ],
        [
          "cancel",
          "verb",
          false
        ],
        [
          "chartruese_colors",
          "green_colors",
          false
        ],
        [
          "chartruese_colors",
          "hierarchyAble",
          false
        ],
        [
          "chartruese_colors",
          "isEdee",
          false
        ],
        [
          "chartruese_colors",
          "isEder",
          false
        ],
        [
          "chartruese_colors",
          "object",
          false
        ],
        [
          "chartruese_colors",
          "property",
          false
        ],
        [
          "chartruese_colors",
          "queryable",
          false
        ],
        [
          "chartruese_colors",
          "theAble",
          false
        ],
        [
          "collection",
          "concept",
          false
        ],
        [
          "collection",
          "hierarchyAble",
          false
        ],
        [
          "collection",
          "isEdee",
          false
        ],
        [
          "collection",
          "isEder",
          false
        ],
        [
          "collection",
          "object",
          false
        ],
        [
          "collection",
          "property",
          false
        ],
        [
          "collection",
          "queryable",
          false
        ],
        [
          "collection",
          "theAble",
          false
        ],
        [
          "collection_modifier",
          "collection_modifier",
          false
        ],
        [
          "color_colors",
          "concept",
          false
        ],
        [
          "color_colors",
          "hierarchyAble",
          false
        ],
        [
          "color_colors",
          "isEdee",
          false
        ],
        [
          "color_colors",
          "isEder",
          false
        ],
        [
          "color_colors",
          "object",
          false
        ],
        [
          "color_colors",
          "property",
          false
        ],
        [
          "color_colors",
          "queryable",
          false
        ],
        [
          "color_colors",
          "theAble",
          false
        ],
        [
          "color_colors_modifier",
          "color_colors_modifier",
          false
        ],
        [
          "column",
          "hierarchyAble",
          false
        ],
        [
          "column",
          "isEdee",
          false
        ],
        [
          "column",
          "isEder",
          false
        ],
        [
          "column",
          "object",
          false
        ],
        [
          "column",
          "property",
          false
        ],
        [
          "column",
          "queryable",
          false
        ],
        [
          "column",
          "theAble",
          false
        ],
        [
          "column23",
          "column",
          false
        ],
        [
          "column23",
          "hierarchyAble",
          false
        ],
        [
          "column23",
          "isEdee",
          false
        ],
        [
          "column23",
          "isEder",
          false
        ],
        [
          "column23",
          "object",
          false
        ],
        [
          "column23",
          "property",
          false
        ],
        [
          "column23",
          "queryable",
          false
        ],
        [
          "column23",
          "theAble",
          false
        ],
        [
          "concept",
          "queryable",
          false
        ],
        [
          "concept",
          "theAble",
          false
        ],
        [
          "condition",
          "condition",
          false
        ],
        [
          "countable",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "isEdee",
          false
        ],
        [
          "crimson_colors",
          "isEder",
          false
        ],
        [
          "crimson_colors",
          "object",
          false
        ],
        [
          "crimson_colors",
          "property",
          false
        ],
        [
          "crimson_colors",
          "queryable",
          false
        ],
        [
          "crimson_colors",
          "red_colors",
          false
        ],
        [
          "crimson_colors",
          "theAble",
          false
        ],
        [
          "cyan_colors",
          "blue_colors",
          false
        ],
        [
          "cyan_colors",
          "hierarchyAble",
          false
        ],
        [
          "cyan_colors",
          "isEdee",
          false
        ],
        [
          "cyan_colors",
          "isEder",
          false
        ],
        [
          "cyan_colors",
          "object",
          false
        ],
        [
          "cyan_colors",
          "property",
          false
        ],
        [
          "cyan_colors",
          "queryable",
          false
        ],
        [
          "cyan_colors",
          "theAble",
          false
        ],
        [
          "dark_colors",
          "brightness_colors",
          false
        ],
        [
          "dark_colors",
          "hierarchyAble",
          false
        ],
        [
          "dark_colors",
          "isEdee",
          false
        ],
        [
          "dark_colors",
          "isEder",
          false
        ],
        [
          "dark_colors",
          "object",
          false
        ],
        [
          "dark_colors",
          "property",
          false
        ],
        [
          "dark_colors",
          "queryable",
          false
        ],
        [
          "dark_colors",
          "theAble",
          false
        ],
        [
          "descending",
          "hierarchyAble",
          false
        ],
        [
          "descending",
          "isEdee",
          false
        ],
        [
          "descending",
          "isEder",
          false
        ],
        [
          "descending",
          "object",
          false
        ],
        [
          "descending",
          "property",
          false
        ],
        [
          "descending",
          "queryable",
          false
        ],
        [
          "descending",
          "sort_ordering",
          false
        ],
        [
          "descending",
          "theAble",
          false
        ],
        [
          "direction",
          "direction",
          false
        ],
        [
          "divideByExpression",
          "mathematicalExpression",
          false
        ],
        [
          "divideByOperator",
          "mathematical_operator",
          false
        ],
        [
          "doubleQuote",
          "queryable",
          false
        ],
        [
          "down",
          "direction",
          false
        ],
        [
          "evaluate",
          "verb",
          false
        ],
        [
          "gold_colors",
          "hierarchyAble",
          false
        ],
        [
          "gold_colors",
          "isEdee",
          false
        ],
        [
          "gold_colors",
          "isEder",
          false
        ],
        [
          "gold_colors",
          "object",
          false
        ],
        [
          "gold_colors",
          "property",
          false
        ],
        [
          "gold_colors",
          "queryable",
          false
        ],
        [
          "gold_colors",
          "theAble",
          false
        ],
        [
          "gold_colors",
          "yellow_colors",
          false
        ],
        [
          "gray_colors",
          "color_colors",
          false
        ],
        [
          "gray_colors",
          "hierarchyAble",
          false
        ],
        [
          "gray_colors",
          "isEdee",
          false
        ],
        [
          "gray_colors",
          "isEder",
          false
        ],
        [
          "gray_colors",
          "object",
          false
        ],
        [
          "gray_colors",
          "property",
          false
        ],
        [
          "gray_colors",
          "queryable",
          false
        ],
        [
          "gray_colors",
          "theAble",
          false
        ],
        [
          "green_colors",
          "color_colors",
          false
        ],
        [
          "green_colors",
          "hierarchyAble",
          false
        ],
        [
          "green_colors",
          "isEdee",
          false
        ],
        [
          "green_colors",
          "isEder",
          false
        ],
        [
          "green_colors",
          "object",
          false
        ],
        [
          "green_colors",
          "property",
          false
        ],
        [
          "green_colors",
          "queryable",
          false
        ],
        [
          "green_colors",
          "theAble",
          false
        ],
        [
          "hasCountOfPieces",
          "countable",
          false
        ],
        [
          "have",
          "canBeDoQuestion",
          false
        ],
        [
          "have",
          "canBeQuestion",
          false
        ],
        [
          "hex_colors",
          "color_colors_modifier",
          false
        ],
        [
          "hex_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors",
          "isEder",
          false
        ],
        [
          "hex_colors",
          "object",
          false
        ],
        [
          "hex_colors",
          "property",
          false
        ],
        [
          "hex_colors",
          "queryable",
          false
        ],
        [
          "hex_colors",
          "theAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "adjective",
          true
        ],
        [
          "hex_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "hex_colors_color_colors",
          "concept",
          false
        ],
        [
          "hex_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEder",
          false
        ],
        [
          "hex_colors_color_colors",
          "object",
          false
        ],
        [
          "hex_colors_color_colors",
          "property",
          false
        ],
        [
          "hex_colors_color_colors",
          "queryable",
          false
        ],
        [
          "hex_colors_color_colors",
          "theAble",
          false
        ],
        [
          "hierarchyAble",
          "queryable",
          false
        ],
        [
          "highest",
          "condition",
          false
        ],
        [
          "ifAble",
          "ifAble",
          false
        ],
        [
          "indigo_colors",
          "hierarchyAble",
          false
        ],
        [
          "indigo_colors",
          "isEdee",
          false
        ],
        [
          "indigo_colors",
          "isEder",
          false
        ],
        [
          "indigo_colors",
          "object",
          false
        ],
        [
          "indigo_colors",
          "property",
          false
        ],
        [
          "indigo_colors",
          "purple_colors",
          false
        ],
        [
          "indigo_colors",
          "queryable",
          false
        ],
        [
          "indigo_colors",
          "theAble",
          false
        ],
        [
          "is",
          "canBeQuestion",
          false
        ],
        [
          "is",
          "verb",
          false
        ],
        [
          "isEdee",
          "isEdee",
          false
        ],
        [
          "isEder",
          "isEder",
          false
        ],
        [
          "it",
          "pronoun",
          false
        ],
        [
          "it",
          "queryable",
          false
        ],
        [
          "it",
          "thisitthat",
          false
        ],
        [
          "it",
          "toAble",
          false
        ],
        [
          "ivory_colors",
          "hierarchyAble",
          false
        ],
        [
          "ivory_colors",
          "isEdee",
          false
        ],
        [
          "ivory_colors",
          "isEder",
          false
        ],
        [
          "ivory_colors",
          "object",
          false
        ],
        [
          "ivory_colors",
          "property",
          false
        ],
        [
          "ivory_colors",
          "queryable",
          false
        ],
        [
          "ivory_colors",
          "theAble",
          false
        ],
        [
          "ivory_colors",
          "white_colors",
          false
        ],
        [
          "khaki_colors",
          "hierarchyAble",
          false
        ],
        [
          "khaki_colors",
          "isEdee",
          false
        ],
        [
          "khaki_colors",
          "isEder",
          false
        ],
        [
          "khaki_colors",
          "object",
          false
        ],
        [
          "khaki_colors",
          "property",
          false
        ],
        [
          "khaki_colors",
          "queryable",
          false
        ],
        [
          "khaki_colors",
          "theAble",
          false
        ],
        [
          "khaki_colors",
          "yellow_colors",
          false
        ],
        [
          "lavender_colors",
          "hierarchyAble",
          false
        ],
        [
          "lavender_colors",
          "isEdee",
          false
        ],
        [
          "lavender_colors",
          "isEder",
          false
        ],
        [
          "lavender_colors",
          "object",
          false
        ],
        [
          "lavender_colors",
          "property",
          false
        ],
        [
          "lavender_colors",
          "purple_colors",
          false
        ],
        [
          "lavender_colors",
          "queryable",
          false
        ],
        [
          "lavender_colors",
          "theAble",
          false
        ],
        [
          "left",
          "direction",
          false
        ],
        [
          "light_colors",
          "brightness_colors",
          false
        ],
        [
          "light_colors",
          "hierarchyAble",
          false
        ],
        [
          "light_colors",
          "isEdee",
          false
        ],
        [
          "light_colors",
          "isEder",
          false
        ],
        [
          "light_colors",
          "object",
          false
        ],
        [
          "light_colors",
          "property",
          false
        ],
        [
          "light_colors",
          "queryable",
          false
        ],
        [
          "light_colors",
          "theAble",
          false
        ],
        [
          "lime_colors",
          "green_colors",
          false
        ],
        [
          "lime_colors",
          "hierarchyAble",
          false
        ],
        [
          "lime_colors",
          "isEdee",
          false
        ],
        [
          "lime_colors",
          "isEder",
          false
        ],
        [
          "lime_colors",
          "object",
          false
        ],
        [
          "lime_colors",
          "property",
          false
        ],
        [
          "lime_colors",
          "queryable",
          false
        ],
        [
          "lime_colors",
          "theAble",
          false
        ],
        [
          "listening",
          "action",
          false
        ],
        [
          "lowest",
          "condition",
          false
        ],
        [
          "magenta_colors",
          "hierarchyAble",
          false
        ],
        [
          "magenta_colors",
          "isEdee",
          false
        ],
        [
          "magenta_colors",
          "isEder",
          false
        ],
        [
          "magenta_colors",
          "object",
          false
        ],
        [
          "magenta_colors",
          "property",
          false
        ],
        [
          "magenta_colors",
          "purple_colors",
          false
        ],
        [
          "magenta_colors",
          "queryable",
          false
        ],
        [
          "magenta_colors",
          "theAble",
          false
        ],
        [
          "maroon_colors",
          "brown_colors",
          false
        ],
        [
          "maroon_colors",
          "hierarchyAble",
          false
        ],
        [
          "maroon_colors",
          "isEdee",
          false
        ],
        [
          "maroon_colors",
          "isEder",
          false
        ],
        [
          "maroon_colors",
          "object",
          false
        ],
        [
          "maroon_colors",
          "property",
          false
        ],
        [
          "maroon_colors",
          "queryable",
          false
        ],
        [
          "maroon_colors",
          "theAble",
          false
        ],
        [
          "mathematical",
          "hierarchyAble",
          false
        ],
        [
          "mathematical",
          "isEdee",
          false
        ],
        [
          "mathematical",
          "isEder",
          false
        ],
        [
          "mathematical",
          "object",
          false
        ],
        [
          "mathematical",
          "operator_modifier",
          false
        ],
        [
          "mathematical",
          "property",
          false
        ],
        [
          "mathematical",
          "queryable",
          false
        ],
        [
          "mathematical",
          "theAble",
          false
        ],
        [
          "mathematicalExpression",
          "concept",
          false
        ],
        [
          "mathematicalExpression",
          "number",
          false
        ],
        [
          "mathematical_operator",
          "adjective",
          true
        ],
        [
          "mathematical_operator",
          "concept",
          false
        ],
        [
          "mathematical_operator",
          "hierarchyAble",
          false
        ],
        [
          "mathematical_operator",
          "isEdee",
          false
        ],
        [
          "mathematical_operator",
          "isEder",
          false
        ],
        [
          "mathematical_operator",
          "object",
          false
        ],
        [
          "mathematical_operator",
          "operator",
          false
        ],
        [
          "mathematical_operator",
          "property",
          false
        ],
        [
          "mathematical_operator",
          "queryable",
          false
        ],
        [
          "mathematical_operator",
          "theAble",
          false
        ],
        [
          "memorable",
          "theAble",
          false
        ],
        [
          "minusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "minusOperator",
          "mathematical_operator",
          false
        ],
        [
          "modifier23",
          "collection_modifier",
          false
        ],
        [
          "modifier23",
          "hierarchyAble",
          false
        ],
        [
          "modifier23",
          "isEdee",
          false
        ],
        [
          "modifier23",
          "isEder",
          false
        ],
        [
          "modifier23",
          "object",
          false
        ],
        [
          "modifier23",
          "property",
          false
        ],
        [
          "modifier23",
          "queryable",
          false
        ],
        [
          "modifier23",
          "theAble",
          false
        ],
        [
          "modifier23_collection",
          "adjective",
          true
        ],
        [
          "modifier23_collection",
          "collection",
          false
        ],
        [
          "modifier23_collection",
          "concept",
          false
        ],
        [
          "modifier23_collection",
          "hierarchyAble",
          false
        ],
        [
          "modifier23_collection",
          "isEdee",
          false
        ],
        [
          "modifier23_collection",
          "isEder",
          false
        ],
        [
          "modifier23_collection",
          "object",
          false
        ],
        [
          "modifier23_collection",
          "property",
          false
        ],
        [
          "modifier23_collection",
          "queryable",
          false
        ],
        [
          "modifier23_collection",
          "theAble",
          false
        ],
        [
          "modifies",
          "verb",
          false
        ],
        [
          "move",
          "verb",
          false
        ],
        [
          "moveAmount",
          "preposition",
          false
        ],
        [
          "navy_colors",
          "blue_colors",
          false
        ],
        [
          "navy_colors",
          "hierarchyAble",
          false
        ],
        [
          "navy_colors",
          "isEdee",
          false
        ],
        [
          "navy_colors",
          "isEder",
          false
        ],
        [
          "navy_colors",
          "object",
          false
        ],
        [
          "navy_colors",
          "property",
          false
        ],
        [
          "navy_colors",
          "queryable",
          false
        ],
        [
          "navy_colors",
          "theAble",
          false
        ],
        [
          "noun",
          "theAble",
          false
        ],
        [
          "number",
          "quantifier",
          false
        ],
        [
          "number",
          "queryable",
          false
        ],
        [
          "object",
          "queryable",
          false
        ],
        [
          "object",
          "theAble",
          false
        ],
        [
          "olive_colors",
          "green_colors",
          false
        ],
        [
          "olive_colors",
          "hierarchyAble",
          false
        ],
        [
          "olive_colors",
          "isEdee",
          false
        ],
        [
          "olive_colors",
          "isEder",
          false
        ],
        [
          "olive_colors",
          "object",
          false
        ],
        [
          "olive_colors",
          "property",
          false
        ],
        [
          "olive_colors",
          "queryable",
          false
        ],
        [
          "olive_colors",
          "theAble",
          false
        ],
        [
          "operator",
          "concept",
          false
        ],
        [
          "operator",
          "hierarchyAble",
          false
        ],
        [
          "operator",
          "isEdee",
          false
        ],
        [
          "operator",
          "isEder",
          false
        ],
        [
          "operator",
          "object",
          false
        ],
        [
          "operator",
          "property",
          false
        ],
        [
          "operator",
          "queryable",
          false
        ],
        [
          "operator",
          "theAble",
          false
        ],
        [
          "operator_modifier",
          "operator_modifier",
          false
        ],
        [
          "orAble",
          "ifAble",
          false
        ],
        [
          "orange_colors",
          "color_colors",
          false
        ],
        [
          "orange_colors",
          "hierarchyAble",
          false
        ],
        [
          "orange_colors",
          "isEdee",
          false
        ],
        [
          "orange_colors",
          "isEder",
          false
        ],
        [
          "orange_colors",
          "object",
          false
        ],
        [
          "orange_colors",
          "property",
          false
        ],
        [
          "orange_colors",
          "queryable",
          false
        ],
        [
          "orange_colors",
          "theAble",
          false
        ],
        [
          "ordering",
          "concept",
          false
        ],
        [
          "ordering",
          "hierarchyAble",
          false
        ],
        [
          "ordering",
          "isEdee",
          false
        ],
        [
          "ordering",
          "isEder",
          false
        ],
        [
          "ordering",
          "object",
          false
        ],
        [
          "ordering",
          "property",
          false
        ],
        [
          "ordering",
          "queryable",
          false
        ],
        [
          "ordering",
          "theAble",
          false
        ],
        [
          "ordering_modifier",
          "ordering_modifier",
          false
        ],
        [
          "ordinal",
          "number",
          false
        ],
        [
          "ordinalOnOrdered",
          "adjective",
          false
        ],
        [
          "pink_colors",
          "color_colors",
          false
        ],
        [
          "pink_colors",
          "hierarchyAble",
          false
        ],
        [
          "pink_colors",
          "isEdee",
          false
        ],
        [
          "pink_colors",
          "isEder",
          false
        ],
        [
          "pink_colors",
          "object",
          false
        ],
        [
          "pink_colors",
          "property",
          false
        ],
        [
          "pink_colors",
          "queryable",
          false
        ],
        [
          "pink_colors",
          "theAble",
          false
        ],
        [
          "plusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "plusOperator",
          "mathematical_operator",
          false
        ],
        [
          "preposition",
          "preposition",
          false
        ],
        [
          "pronoun",
          "pronoun",
          false
        ],
        [
          "property",
          "queryable",
          false
        ],
        [
          "property",
          "theAble",
          false
        ],
        [
          "punctuation",
          "punctuation",
          false
        ],
        [
          "purple_colors",
          "color_colors",
          false
        ],
        [
          "purple_colors",
          "hierarchyAble",
          false
        ],
        [
          "purple_colors",
          "isEdee",
          false
        ],
        [
          "purple_colors",
          "isEder",
          false
        ],
        [
          "purple_colors",
          "object",
          false
        ],
        [
          "purple_colors",
          "property",
          false
        ],
        [
          "purple_colors",
          "queryable",
          false
        ],
        [
          "purple_colors",
          "theAble",
          false
        ],
        [
          "quantifier",
          "quantifier",
          false
        ],
        [
          "queryable",
          "queryable",
          false
        ],
        [
          "questionMark",
          "punctuation",
          false
        ],
        [
          "readonly",
          "queryable",
          false
        ],
        [
          "reason",
          "queryable",
          false
        ],
        [
          "reason",
          "theAble",
          false
        ],
        [
          "red_colors",
          "color_colors",
          false
        ],
        [
          "red_colors",
          "hierarchyAble",
          false
        ],
        [
          "red_colors",
          "isEdee",
          false
        ],
        [
          "red_colors",
          "isEder",
          false
        ],
        [
          "red_colors",
          "object",
          false
        ],
        [
          "red_colors",
          "property",
          false
        ],
        [
          "red_colors",
          "queryable",
          false
        ],
        [
          "red_colors",
          "theAble",
          false
        ],
        [
          "remember",
          "verb",
          false
        ],
        [
          "right",
          "direction",
          false
        ],
        [
          "select",
          "verb",
          false
        ],
        [
          "sienna_colors",
          "brown_colors",
          false
        ],
        [
          "sienna_colors",
          "hierarchyAble",
          false
        ],
        [
          "sienna_colors",
          "isEdee",
          false
        ],
        [
          "sienna_colors",
          "isEder",
          false
        ],
        [
          "sienna_colors",
          "object",
          false
        ],
        [
          "sienna_colors",
          "property",
          false
        ],
        [
          "sienna_colors",
          "queryable",
          false
        ],
        [
          "sienna_colors",
          "theAble",
          false
        ],
        [
          "silver_colors",
          "gray_colors",
          false
        ],
        [
          "silver_colors",
          "hierarchyAble",
          false
        ],
        [
          "silver_colors",
          "isEdee",
          false
        ],
        [
          "silver_colors",
          "isEder",
          false
        ],
        [
          "silver_colors",
          "object",
          false
        ],
        [
          "silver_colors",
          "property",
          false
        ],
        [
          "silver_colors",
          "queryable",
          false
        ],
        [
          "silver_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "hierarchyAble",
          false
        ],
        [
          "snow_colors",
          "isEdee",
          false
        ],
        [
          "snow_colors",
          "isEder",
          false
        ],
        [
          "snow_colors",
          "object",
          false
        ],
        [
          "snow_colors",
          "property",
          false
        ],
        [
          "snow_colors",
          "queryable",
          false
        ],
        [
          "snow_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "white_colors",
          false
        ],
        [
          "sort",
          "hierarchyAble",
          false
        ],
        [
          "sort",
          "isEdee",
          false
        ],
        [
          "sort",
          "isEder",
          false
        ],
        [
          "sort",
          "object",
          false
        ],
        [
          "sort",
          "ordering_modifier",
          false
        ],
        [
          "sort",
          "property",
          false
        ],
        [
          "sort",
          "queryable",
          false
        ],
        [
          "sort",
          "theAble",
          false
        ],
        [
          "sortOrdering",
          "adjective",
          false
        ],
        [
          "sort_ordering",
          "adjective",
          true
        ],
        [
          "sort_ordering",
          "concept",
          false
        ],
        [
          "sort_ordering",
          "hierarchyAble",
          false
        ],
        [
          "sort_ordering",
          "isEdee",
          false
        ],
        [
          "sort_ordering",
          "isEder",
          false
        ],
        [
          "sort_ordering",
          "object",
          false
        ],
        [
          "sort_ordering",
          "ordering",
          false
        ],
        [
          "sort_ordering",
          "property",
          false
        ],
        [
          "sort_ordering",
          "queryable",
          false
        ],
        [
          "sort_ordering",
          "theAble",
          false
        ],
        [
          "stm_before",
          "adjective",
          false
        ],
        [
          "stop",
          "verb",
          false
        ],
        [
          "tan_colors",
          "brown_colors",
          false
        ],
        [
          "tan_colors",
          "hierarchyAble",
          false
        ],
        [
          "tan_colors",
          "isEdee",
          false
        ],
        [
          "tan_colors",
          "isEder",
          false
        ],
        [
          "tan_colors",
          "object",
          false
        ],
        [
          "tan_colors",
          "property",
          false
        ],
        [
          "tan_colors",
          "queryable",
          false
        ],
        [
          "tan_colors",
          "theAble",
          false
        ],
        [
          "teal_colors",
          "green_colors",
          false
        ],
        [
          "teal_colors",
          "hierarchyAble",
          false
        ],
        [
          "teal_colors",
          "isEdee",
          false
        ],
        [
          "teal_colors",
          "isEder",
          false
        ],
        [
          "teal_colors",
          "object",
          false
        ],
        [
          "teal_colors",
          "property",
          false
        ],
        [
          "teal_colors",
          "queryable",
          false
        ],
        [
          "teal_colors",
          "theAble",
          false
        ],
        [
          "that",
          "thisitthat",
          false
        ],
        [
          "the",
          "articlePOS",
          false
        ],
        [
          "theAble",
          "theAble",
          false
        ],
        [
          "this",
          "pronoun",
          false
        ],
        [
          "this",
          "queryable",
          false
        ],
        [
          "this",
          "thisitthat",
          false
        ],
        [
          "thisitthat",
          "queryable",
          false
        ],
        [
          "timesExpression",
          "mathematicalExpression",
          false
        ],
        [
          "timesOperator",
          "mathematical_operator",
          false
        ],
        [
          "to",
          "preposition",
          false
        ],
        [
          "toAble",
          "toAble",
          false
        ],
        [
          "turquoise_colors",
          "blue_colors",
          false
        ],
        [
          "turquoise_colors",
          "hierarchyAble",
          false
        ],
        [
          "turquoise_colors",
          "isEdee",
          false
        ],
        [
          "turquoise_colors",
          "isEder",
          false
        ],
        [
          "turquoise_colors",
          "object",
          false
        ],
        [
          "turquoise_colors",
          "property",
          false
        ],
        [
          "turquoise_colors",
          "queryable",
          false
        ],
        [
          "turquoise_colors",
          "theAble",
          false
        ],
        [
          "type",
          "property",
          false
        ],
        [
          "type",
          "whatAble",
          false
        ],
        [
          "unknown",
          "hierarchyAble",
          false
        ],
        [
          "unknown",
          "queryable",
          false
        ],
        [
          "unknown",
          "theAble",
          false
        ],
        [
          "unselect",
          "verb",
          false
        ],
        [
          "up",
          "direction",
          false
        ],
        [
          "verb",
          "verb",
          false
        ],
        [
          "violet_colors",
          "hierarchyAble",
          false
        ],
        [
          "violet_colors",
          "isEdee",
          false
        ],
        [
          "violet_colors",
          "isEder",
          false
        ],
        [
          "violet_colors",
          "object",
          false
        ],
        [
          "violet_colors",
          "property",
          false
        ],
        [
          "violet_colors",
          "purple_colors",
          false
        ],
        [
          "violet_colors",
          "queryable",
          false
        ],
        [
          "violet_colors",
          "theAble",
          false
        ],
        [
          "what",
          "object",
          false
        ],
        [
          "what",
          "queryable",
          false
        ],
        [
          "whatAble",
          "queryable",
          false
        ],
        [
          "white_colors",
          "color_colors",
          false
        ],
        [
          "white_colors",
          "hierarchyAble",
          false
        ],
        [
          "white_colors",
          "isEdee",
          false
        ],
        [
          "white_colors",
          "isEder",
          false
        ],
        [
          "white_colors",
          "object",
          false
        ],
        [
          "white_colors",
          "property",
          false
        ],
        [
          "white_colors",
          "queryable",
          false
        ],
        [
          "white_colors",
          "theAble",
          false
        ],
        [
          "whose",
          "object",
          false
        ],
        [
          "x",
          "number",
          false
        ],
        [
          "xfx",
          "queryable",
          false
        ],
        [
          "y",
          "number",
          false
        ],
        [
          "yellow_colors",
          "color_colors",
          false
        ],
        [
          "yellow_colors",
          "hierarchyAble",
          false
        ],
        [
          "yellow_colors",
          "isEdee",
          false
        ],
        [
          "yellow_colors",
          "isEder",
          false
        ],
        [
          "yellow_colors",
          "object",
          false
        ],
        [
          "yellow_colors",
          "property",
          false
        ],
        [
          "yellow_colors",
          "queryable",
          false
        ],
        [
          "yellow_colors",
          "theAble",
          false
        ]
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "concept",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 1
          },
          {
            "op": [
              "concept",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "concept",
                0
              ],
              [
                "is",
                0
              ]
            ],
            "counter": 2
          },
          {
            "op": [
              "a",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ]
            ],
            "counter": 3
          },
          {
            "op": [
              "is",
              0
            ],
            "ops": [
              [
                "is",
                0
              ]
            ],
            "counter": 4
          },
          {
            "op": [
              "is",
              1
            ],
            "ops": [
              [
                "is",
                1
              ]
            ],
            "counter": 5
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "number": "one",
          "text": "reportable is a concept",
          "marker": "is",
          "word": "is",
          "range": {
            "start": 0,
            "end": 22
          },
          "one": {
            "number": "one",
            "value": "reportable",
            "unknown": true,
            "text": "reportable",
            "marker": "unknown",
            "word": "reportable",
            "range": {
              "start": 0,
              "end": 22
            },
            "dead": true,
            "types": [
              "unknown"
            ],
            "level": 1
          },
          "two": {
            "marker": "concept",
            "value": "concept",
            "default": true,
            "text": "a concept",
            "word": "concept",
            "range": {
              "start": 14,
              "end": 22
            },
            "dead": true,
            "types": [
              "concept"
            ],
            "pullFromContext": false,
            "instance": true,
            "concept": true,
            "number": "one",
            "wantsValue": true,
            "determiner": {
              "marker": "a",
              "default": true,
              "word": "a",
              "text": "a",
              "range": {
                "start": 14,
                "end": 14
              },
              "level": 0
            },
            "modifiers": [
              "determiner"
            ],
            "level": 1
          },
          "dead": true,
          "level": 2,
          "topLevel": true,
          "touchedBy": [
            "mongo#call2",
            "instance0#mongo#call2"
          ]
        }
      ],
      "generated": [
        ""
      ],
      "paraphrases": [
        "reportable is a concept"
      ],
      "paraphrasesParenthesized": [],
      "generatedParenthesized": [],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "a",
            0
          ],
          [
            "concept",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            0
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "concept",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            "unknown",
            1
          ]
        ]
      ],
      "learned_contextual_priorities": [],
      "query": "reportable is a concept",
      "key": {
        "query": "reportable is a concept"
      }
    },
    {
      "hierarchy": [
        [
          "a",
          "articlePOS",
          false
        ],
        [
          "action",
          "action",
          false
        ],
        [
          "adjective",
          "adjective",
          false
        ],
        [
          "all",
          "quantifier",
          false
        ],
        [
          "aqua_colors",
          "blue_colors",
          false
        ],
        [
          "aqua_colors",
          "hierarchyAble",
          false
        ],
        [
          "aqua_colors",
          "isEdee",
          false
        ],
        [
          "aqua_colors",
          "isEder",
          false
        ],
        [
          "aqua_colors",
          "object",
          false
        ],
        [
          "aqua_colors",
          "property",
          false
        ],
        [
          "aqua_colors",
          "queryable",
          false
        ],
        [
          "aqua_colors",
          "theAble",
          false
        ],
        [
          "aquamarine_colors",
          "blue_colors",
          false
        ],
        [
          "aquamarine_colors",
          "hierarchyAble",
          false
        ],
        [
          "aquamarine_colors",
          "isEdee",
          false
        ],
        [
          "aquamarine_colors",
          "isEder",
          false
        ],
        [
          "aquamarine_colors",
          "object",
          false
        ],
        [
          "aquamarine_colors",
          "property",
          false
        ],
        [
          "aquamarine_colors",
          "queryable",
          false
        ],
        [
          "aquamarine_colors",
          "theAble",
          false
        ],
        [
          "articlePOS",
          "articlePOS",
          false
        ],
        [
          "ascending",
          "hierarchyAble",
          false
        ],
        [
          "ascending",
          "isEdee",
          false
        ],
        [
          "ascending",
          "isEder",
          false
        ],
        [
          "ascending",
          "object",
          false
        ],
        [
          "ascending",
          "property",
          false
        ],
        [
          "ascending",
          "queryable",
          false
        ],
        [
          "ascending",
          "sort_ordering",
          false
        ],
        [
          "ascending",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "hierarchyAble",
          false
        ],
        [
          "azure_colors",
          "isEdee",
          false
        ],
        [
          "azure_colors",
          "isEder",
          false
        ],
        [
          "azure_colors",
          "object",
          false
        ],
        [
          "azure_colors",
          "property",
          false
        ],
        [
          "azure_colors",
          "queryable",
          false
        ],
        [
          "azure_colors",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "white_colors",
          false
        ],
        [
          "beige_colors",
          "hierarchyAble",
          false
        ],
        [
          "beige_colors",
          "isEdee",
          false
        ],
        [
          "beige_colors",
          "isEder",
          false
        ],
        [
          "beige_colors",
          "object",
          false
        ],
        [
          "beige_colors",
          "property",
          false
        ],
        [
          "beige_colors",
          "queryable",
          false
        ],
        [
          "beige_colors",
          "theAble",
          false
        ],
        [
          "beige_colors",
          "white_colors",
          false
        ],
        [
          "between",
          "preposition",
          false
        ],
        [
          "black_colors",
          "gray_colors",
          false
        ],
        [
          "black_colors",
          "hierarchyAble",
          false
        ],
        [
          "black_colors",
          "isEdee",
          false
        ],
        [
          "black_colors",
          "isEder",
          false
        ],
        [
          "black_colors",
          "object",
          false
        ],
        [
          "black_colors",
          "property",
          false
        ],
        [
          "black_colors",
          "queryable",
          false
        ],
        [
          "black_colors",
          "theAble",
          false
        ],
        [
          "blue_colors",
          "color_colors",
          false
        ],
        [
          "blue_colors",
          "hierarchyAble",
          false
        ],
        [
          "blue_colors",
          "isEdee",
          false
        ],
        [
          "blue_colors",
          "isEder",
          false
        ],
        [
          "blue_colors",
          "object",
          false
        ],
        [
          "blue_colors",
          "property",
          false
        ],
        [
          "blue_colors",
          "queryable",
          false
        ],
        [
          "blue_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors",
          "color_colors_modifier",
          false
        ],
        [
          "brightness_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors",
          "object",
          false
        ],
        [
          "brightness_colors",
          "property",
          false
        ],
        [
          "brightness_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "adjective",
          true
        ],
        [
          "brightness_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "brightness_colors_color_colors",
          "concept",
          false
        ],
        [
          "brightness_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors_color_colors",
          "object",
          false
        ],
        [
          "brightness_colors_color_colors",
          "property",
          false
        ],
        [
          "brightness_colors_color_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors_color_colors",
          "theAble",
          false
        ],
        [
          "brown_colors",
          "color_colors",
          false
        ],
        [
          "brown_colors",
          "hierarchyAble",
          false
        ],
        [
          "brown_colors",
          "isEdee",
          false
        ],
        [
          "brown_colors",
          "isEder",
          false
        ],
        [
          "brown_colors",
          "object",
          false
        ],
        [
          "brown_colors",
          "property",
          false
        ],
        [
          "brown_colors",
          "queryable",
          false
        ],
        [
          "brown_colors",
          "theAble",
          false
        ],
        [
          "call",
          "verb",
          false
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion",
          false
        ],
        [
          "canBeQuestion",
          "canBeQuestion",
          false
        ],
        [
          "cancel",
          "verb",
          false
        ],
        [
          "chartruese_colors",
          "green_colors",
          false
        ],
        [
          "chartruese_colors",
          "hierarchyAble",
          false
        ],
        [
          "chartruese_colors",
          "isEdee",
          false
        ],
        [
          "chartruese_colors",
          "isEder",
          false
        ],
        [
          "chartruese_colors",
          "object",
          false
        ],
        [
          "chartruese_colors",
          "property",
          false
        ],
        [
          "chartruese_colors",
          "queryable",
          false
        ],
        [
          "chartruese_colors",
          "theAble",
          false
        ],
        [
          "collection",
          "concept",
          false
        ],
        [
          "collection",
          "hierarchyAble",
          false
        ],
        [
          "collection",
          "isEdee",
          false
        ],
        [
          "collection",
          "isEder",
          false
        ],
        [
          "collection",
          "object",
          false
        ],
        [
          "collection",
          "property",
          false
        ],
        [
          "collection",
          "queryable",
          false
        ],
        [
          "collection",
          "theAble",
          false
        ],
        [
          "collection_modifier",
          "collection_modifier",
          false
        ],
        [
          "color_colors",
          "concept",
          false
        ],
        [
          "color_colors",
          "hierarchyAble",
          false
        ],
        [
          "color_colors",
          "isEdee",
          false
        ],
        [
          "color_colors",
          "isEder",
          false
        ],
        [
          "color_colors",
          "object",
          false
        ],
        [
          "color_colors",
          "property",
          false
        ],
        [
          "color_colors",
          "queryable",
          false
        ],
        [
          "color_colors",
          "theAble",
          false
        ],
        [
          "color_colors_modifier",
          "color_colors_modifier",
          false
        ],
        [
          "column",
          "hierarchyAble",
          false
        ],
        [
          "column",
          "isEdee",
          false
        ],
        [
          "column",
          "isEder",
          false
        ],
        [
          "column",
          "object",
          false
        ],
        [
          "column",
          "property",
          false
        ],
        [
          "column",
          "queryable",
          false
        ],
        [
          "column",
          "theAble",
          false
        ],
        [
          "column23",
          "column",
          false
        ],
        [
          "column23",
          "hierarchyAble",
          false
        ],
        [
          "column23",
          "isEdee",
          false
        ],
        [
          "column23",
          "isEder",
          false
        ],
        [
          "column23",
          "object",
          false
        ],
        [
          "column23",
          "property",
          false
        ],
        [
          "column23",
          "queryable",
          false
        ],
        [
          "column23",
          "theAble",
          false
        ],
        [
          "concept",
          "queryable",
          false
        ],
        [
          "concept",
          "theAble",
          false
        ],
        [
          "condition",
          "condition",
          false
        ],
        [
          "countable",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "isEdee",
          false
        ],
        [
          "crimson_colors",
          "isEder",
          false
        ],
        [
          "crimson_colors",
          "object",
          false
        ],
        [
          "crimson_colors",
          "property",
          false
        ],
        [
          "crimson_colors",
          "queryable",
          false
        ],
        [
          "crimson_colors",
          "red_colors",
          false
        ],
        [
          "crimson_colors",
          "theAble",
          false
        ],
        [
          "cyan_colors",
          "blue_colors",
          false
        ],
        [
          "cyan_colors",
          "hierarchyAble",
          false
        ],
        [
          "cyan_colors",
          "isEdee",
          false
        ],
        [
          "cyan_colors",
          "isEder",
          false
        ],
        [
          "cyan_colors",
          "object",
          false
        ],
        [
          "cyan_colors",
          "property",
          false
        ],
        [
          "cyan_colors",
          "queryable",
          false
        ],
        [
          "cyan_colors",
          "theAble",
          false
        ],
        [
          "dark_colors",
          "brightness_colors",
          false
        ],
        [
          "dark_colors",
          "hierarchyAble",
          false
        ],
        [
          "dark_colors",
          "isEdee",
          false
        ],
        [
          "dark_colors",
          "isEder",
          false
        ],
        [
          "dark_colors",
          "object",
          false
        ],
        [
          "dark_colors",
          "property",
          false
        ],
        [
          "dark_colors",
          "queryable",
          false
        ],
        [
          "dark_colors",
          "theAble",
          false
        ],
        [
          "descending",
          "hierarchyAble",
          false
        ],
        [
          "descending",
          "isEdee",
          false
        ],
        [
          "descending",
          "isEder",
          false
        ],
        [
          "descending",
          "object",
          false
        ],
        [
          "descending",
          "property",
          false
        ],
        [
          "descending",
          "queryable",
          false
        ],
        [
          "descending",
          "sort_ordering",
          false
        ],
        [
          "descending",
          "theAble",
          false
        ],
        [
          "direction",
          "direction",
          false
        ],
        [
          "divideByExpression",
          "mathematicalExpression",
          false
        ],
        [
          "divideByOperator",
          "mathematical_operator",
          false
        ],
        [
          "doubleQuote",
          "queryable",
          false
        ],
        [
          "down",
          "direction",
          false
        ],
        [
          "evaluate",
          "verb",
          false
        ],
        [
          "gold_colors",
          "hierarchyAble",
          false
        ],
        [
          "gold_colors",
          "isEdee",
          false
        ],
        [
          "gold_colors",
          "isEder",
          false
        ],
        [
          "gold_colors",
          "object",
          false
        ],
        [
          "gold_colors",
          "property",
          false
        ],
        [
          "gold_colors",
          "queryable",
          false
        ],
        [
          "gold_colors",
          "theAble",
          false
        ],
        [
          "gold_colors",
          "yellow_colors",
          false
        ],
        [
          "gray_colors",
          "color_colors",
          false
        ],
        [
          "gray_colors",
          "hierarchyAble",
          false
        ],
        [
          "gray_colors",
          "isEdee",
          false
        ],
        [
          "gray_colors",
          "isEder",
          false
        ],
        [
          "gray_colors",
          "object",
          false
        ],
        [
          "gray_colors",
          "property",
          false
        ],
        [
          "gray_colors",
          "queryable",
          false
        ],
        [
          "gray_colors",
          "theAble",
          false
        ],
        [
          "green_colors",
          "color_colors",
          false
        ],
        [
          "green_colors",
          "hierarchyAble",
          false
        ],
        [
          "green_colors",
          "isEdee",
          false
        ],
        [
          "green_colors",
          "isEder",
          false
        ],
        [
          "green_colors",
          "object",
          false
        ],
        [
          "green_colors",
          "property",
          false
        ],
        [
          "green_colors",
          "queryable",
          false
        ],
        [
          "green_colors",
          "theAble",
          false
        ],
        [
          "hasCountOfPieces",
          "countable",
          false
        ],
        [
          "have",
          "canBeDoQuestion",
          false
        ],
        [
          "have",
          "canBeQuestion",
          false
        ],
        [
          "hex_colors",
          "color_colors_modifier",
          false
        ],
        [
          "hex_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors",
          "isEder",
          false
        ],
        [
          "hex_colors",
          "object",
          false
        ],
        [
          "hex_colors",
          "property",
          false
        ],
        [
          "hex_colors",
          "queryable",
          false
        ],
        [
          "hex_colors",
          "theAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "adjective",
          true
        ],
        [
          "hex_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "hex_colors_color_colors",
          "concept",
          false
        ],
        [
          "hex_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEder",
          false
        ],
        [
          "hex_colors_color_colors",
          "object",
          false
        ],
        [
          "hex_colors_color_colors",
          "property",
          false
        ],
        [
          "hex_colors_color_colors",
          "queryable",
          false
        ],
        [
          "hex_colors_color_colors",
          "theAble",
          false
        ],
        [
          "hierarchyAble",
          "queryable",
          false
        ],
        [
          "highest",
          "condition",
          false
        ],
        [
          "ifAble",
          "ifAble",
          false
        ],
        [
          "indigo_colors",
          "hierarchyAble",
          false
        ],
        [
          "indigo_colors",
          "isEdee",
          false
        ],
        [
          "indigo_colors",
          "isEder",
          false
        ],
        [
          "indigo_colors",
          "object",
          false
        ],
        [
          "indigo_colors",
          "property",
          false
        ],
        [
          "indigo_colors",
          "purple_colors",
          false
        ],
        [
          "indigo_colors",
          "queryable",
          false
        ],
        [
          "indigo_colors",
          "theAble",
          false
        ],
        [
          "is",
          "canBeQuestion",
          false
        ],
        [
          "is",
          "verb",
          false
        ],
        [
          "isEdee",
          "isEdee",
          false
        ],
        [
          "isEder",
          "isEder",
          false
        ],
        [
          "it",
          "pronoun",
          false
        ],
        [
          "it",
          "queryable",
          false
        ],
        [
          "it",
          "thisitthat",
          false
        ],
        [
          "it",
          "toAble",
          false
        ],
        [
          "ivory_colors",
          "hierarchyAble",
          false
        ],
        [
          "ivory_colors",
          "isEdee",
          false
        ],
        [
          "ivory_colors",
          "isEder",
          false
        ],
        [
          "ivory_colors",
          "object",
          false
        ],
        [
          "ivory_colors",
          "property",
          false
        ],
        [
          "ivory_colors",
          "queryable",
          false
        ],
        [
          "ivory_colors",
          "theAble",
          false
        ],
        [
          "ivory_colors",
          "white_colors",
          false
        ],
        [
          "khaki_colors",
          "hierarchyAble",
          false
        ],
        [
          "khaki_colors",
          "isEdee",
          false
        ],
        [
          "khaki_colors",
          "isEder",
          false
        ],
        [
          "khaki_colors",
          "object",
          false
        ],
        [
          "khaki_colors",
          "property",
          false
        ],
        [
          "khaki_colors",
          "queryable",
          false
        ],
        [
          "khaki_colors",
          "theAble",
          false
        ],
        [
          "khaki_colors",
          "yellow_colors",
          false
        ],
        [
          "lavender_colors",
          "hierarchyAble",
          false
        ],
        [
          "lavender_colors",
          "isEdee",
          false
        ],
        [
          "lavender_colors",
          "isEder",
          false
        ],
        [
          "lavender_colors",
          "object",
          false
        ],
        [
          "lavender_colors",
          "property",
          false
        ],
        [
          "lavender_colors",
          "purple_colors",
          false
        ],
        [
          "lavender_colors",
          "queryable",
          false
        ],
        [
          "lavender_colors",
          "theAble",
          false
        ],
        [
          "left",
          "direction",
          false
        ],
        [
          "light_colors",
          "brightness_colors",
          false
        ],
        [
          "light_colors",
          "hierarchyAble",
          false
        ],
        [
          "light_colors",
          "isEdee",
          false
        ],
        [
          "light_colors",
          "isEder",
          false
        ],
        [
          "light_colors",
          "object",
          false
        ],
        [
          "light_colors",
          "property",
          false
        ],
        [
          "light_colors",
          "queryable",
          false
        ],
        [
          "light_colors",
          "theAble",
          false
        ],
        [
          "lime_colors",
          "green_colors",
          false
        ],
        [
          "lime_colors",
          "hierarchyAble",
          false
        ],
        [
          "lime_colors",
          "isEdee",
          false
        ],
        [
          "lime_colors",
          "isEder",
          false
        ],
        [
          "lime_colors",
          "object",
          false
        ],
        [
          "lime_colors",
          "property",
          false
        ],
        [
          "lime_colors",
          "queryable",
          false
        ],
        [
          "lime_colors",
          "theAble",
          false
        ],
        [
          "listening",
          "action",
          false
        ],
        [
          "lowest",
          "condition",
          false
        ],
        [
          "magenta_colors",
          "hierarchyAble",
          false
        ],
        [
          "magenta_colors",
          "isEdee",
          false
        ],
        [
          "magenta_colors",
          "isEder",
          false
        ],
        [
          "magenta_colors",
          "object",
          false
        ],
        [
          "magenta_colors",
          "property",
          false
        ],
        [
          "magenta_colors",
          "purple_colors",
          false
        ],
        [
          "magenta_colors",
          "queryable",
          false
        ],
        [
          "magenta_colors",
          "theAble",
          false
        ],
        [
          "maroon_colors",
          "brown_colors",
          false
        ],
        [
          "maroon_colors",
          "hierarchyAble",
          false
        ],
        [
          "maroon_colors",
          "isEdee",
          false
        ],
        [
          "maroon_colors",
          "isEder",
          false
        ],
        [
          "maroon_colors",
          "object",
          false
        ],
        [
          "maroon_colors",
          "property",
          false
        ],
        [
          "maroon_colors",
          "queryable",
          false
        ],
        [
          "maroon_colors",
          "theAble",
          false
        ],
        [
          "mathematical",
          "hierarchyAble",
          false
        ],
        [
          "mathematical",
          "isEdee",
          false
        ],
        [
          "mathematical",
          "isEder",
          false
        ],
        [
          "mathematical",
          "object",
          false
        ],
        [
          "mathematical",
          "operator_modifier",
          false
        ],
        [
          "mathematical",
          "property",
          false
        ],
        [
          "mathematical",
          "queryable",
          false
        ],
        [
          "mathematical",
          "theAble",
          false
        ],
        [
          "mathematicalExpression",
          "concept",
          false
        ],
        [
          "mathematicalExpression",
          "number",
          false
        ],
        [
          "mathematical_operator",
          "adjective",
          true
        ],
        [
          "mathematical_operator",
          "concept",
          false
        ],
        [
          "mathematical_operator",
          "hierarchyAble",
          false
        ],
        [
          "mathematical_operator",
          "isEdee",
          false
        ],
        [
          "mathematical_operator",
          "isEder",
          false
        ],
        [
          "mathematical_operator",
          "object",
          false
        ],
        [
          "mathematical_operator",
          "operator",
          false
        ],
        [
          "mathematical_operator",
          "property",
          false
        ],
        [
          "mathematical_operator",
          "queryable",
          false
        ],
        [
          "mathematical_operator",
          "theAble",
          false
        ],
        [
          "memorable",
          "theAble",
          false
        ],
        [
          "minusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "minusOperator",
          "mathematical_operator",
          false
        ],
        [
          "modifier23",
          "collection_modifier",
          false
        ],
        [
          "modifier23",
          "hierarchyAble",
          false
        ],
        [
          "modifier23",
          "isEdee",
          false
        ],
        [
          "modifier23",
          "isEder",
          false
        ],
        [
          "modifier23",
          "object",
          false
        ],
        [
          "modifier23",
          "property",
          false
        ],
        [
          "modifier23",
          "queryable",
          false
        ],
        [
          "modifier23",
          "theAble",
          false
        ],
        [
          "modifier23_collection",
          "adjective",
          true
        ],
        [
          "modifier23_collection",
          "collection",
          false
        ],
        [
          "modifier23_collection",
          "concept",
          false
        ],
        [
          "modifier23_collection",
          "hierarchyAble",
          false
        ],
        [
          "modifier23_collection",
          "isEdee",
          false
        ],
        [
          "modifier23_collection",
          "isEder",
          false
        ],
        [
          "modifier23_collection",
          "object",
          false
        ],
        [
          "modifier23_collection",
          "property",
          false
        ],
        [
          "modifier23_collection",
          "queryable",
          false
        ],
        [
          "modifier23_collection",
          "theAble",
          false
        ],
        [
          "modifies",
          "verb",
          false
        ],
        [
          "move",
          "verb",
          false
        ],
        [
          "moveAmount",
          "preposition",
          false
        ],
        [
          "navy_colors",
          "blue_colors",
          false
        ],
        [
          "navy_colors",
          "hierarchyAble",
          false
        ],
        [
          "navy_colors",
          "isEdee",
          false
        ],
        [
          "navy_colors",
          "isEder",
          false
        ],
        [
          "navy_colors",
          "object",
          false
        ],
        [
          "navy_colors",
          "property",
          false
        ],
        [
          "navy_colors",
          "queryable",
          false
        ],
        [
          "navy_colors",
          "theAble",
          false
        ],
        [
          "noun",
          "theAble",
          false
        ],
        [
          "number",
          "quantifier",
          false
        ],
        [
          "number",
          "queryable",
          false
        ],
        [
          "object",
          "queryable",
          false
        ],
        [
          "object",
          "theAble",
          false
        ],
        [
          "olive_colors",
          "green_colors",
          false
        ],
        [
          "olive_colors",
          "hierarchyAble",
          false
        ],
        [
          "olive_colors",
          "isEdee",
          false
        ],
        [
          "olive_colors",
          "isEder",
          false
        ],
        [
          "olive_colors",
          "object",
          false
        ],
        [
          "olive_colors",
          "property",
          false
        ],
        [
          "olive_colors",
          "queryable",
          false
        ],
        [
          "olive_colors",
          "theAble",
          false
        ],
        [
          "operator",
          "concept",
          false
        ],
        [
          "operator",
          "hierarchyAble",
          false
        ],
        [
          "operator",
          "isEdee",
          false
        ],
        [
          "operator",
          "isEder",
          false
        ],
        [
          "operator",
          "object",
          false
        ],
        [
          "operator",
          "property",
          false
        ],
        [
          "operator",
          "queryable",
          false
        ],
        [
          "operator",
          "theAble",
          false
        ],
        [
          "operator_modifier",
          "operator_modifier",
          false
        ],
        [
          "orAble",
          "ifAble",
          false
        ],
        [
          "orange_colors",
          "color_colors",
          false
        ],
        [
          "orange_colors",
          "hierarchyAble",
          false
        ],
        [
          "orange_colors",
          "isEdee",
          false
        ],
        [
          "orange_colors",
          "isEder",
          false
        ],
        [
          "orange_colors",
          "object",
          false
        ],
        [
          "orange_colors",
          "property",
          false
        ],
        [
          "orange_colors",
          "queryable",
          false
        ],
        [
          "orange_colors",
          "theAble",
          false
        ],
        [
          "ordering",
          "concept",
          false
        ],
        [
          "ordering",
          "hierarchyAble",
          false
        ],
        [
          "ordering",
          "isEdee",
          false
        ],
        [
          "ordering",
          "isEder",
          false
        ],
        [
          "ordering",
          "object",
          false
        ],
        [
          "ordering",
          "property",
          false
        ],
        [
          "ordering",
          "queryable",
          false
        ],
        [
          "ordering",
          "theAble",
          false
        ],
        [
          "ordering_modifier",
          "ordering_modifier",
          false
        ],
        [
          "ordinal",
          "number",
          false
        ],
        [
          "ordinalOnOrdered",
          "adjective",
          false
        ],
        [
          "pink_colors",
          "color_colors",
          false
        ],
        [
          "pink_colors",
          "hierarchyAble",
          false
        ],
        [
          "pink_colors",
          "isEdee",
          false
        ],
        [
          "pink_colors",
          "isEder",
          false
        ],
        [
          "pink_colors",
          "object",
          false
        ],
        [
          "pink_colors",
          "property",
          false
        ],
        [
          "pink_colors",
          "queryable",
          false
        ],
        [
          "pink_colors",
          "theAble",
          false
        ],
        [
          "plusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "plusOperator",
          "mathematical_operator",
          false
        ],
        [
          "preposition",
          "preposition",
          false
        ],
        [
          "pronoun",
          "pronoun",
          false
        ],
        [
          "property",
          "queryable",
          false
        ],
        [
          "property",
          "theAble",
          false
        ],
        [
          "punctuation",
          "punctuation",
          false
        ],
        [
          "purple_colors",
          "color_colors",
          false
        ],
        [
          "purple_colors",
          "hierarchyAble",
          false
        ],
        [
          "purple_colors",
          "isEdee",
          false
        ],
        [
          "purple_colors",
          "isEder",
          false
        ],
        [
          "purple_colors",
          "object",
          false
        ],
        [
          "purple_colors",
          "property",
          false
        ],
        [
          "purple_colors",
          "queryable",
          false
        ],
        [
          "purple_colors",
          "theAble",
          false
        ],
        [
          "quantifier",
          "quantifier",
          false
        ],
        [
          "queryable",
          "queryable",
          false
        ],
        [
          "questionMark",
          "punctuation",
          false
        ],
        [
          "readonly",
          "queryable",
          false
        ],
        [
          "reason",
          "queryable",
          false
        ],
        [
          "reason",
          "theAble",
          false
        ],
        [
          "red_colors",
          "color_colors",
          false
        ],
        [
          "red_colors",
          "hierarchyAble",
          false
        ],
        [
          "red_colors",
          "isEdee",
          false
        ],
        [
          "red_colors",
          "isEder",
          false
        ],
        [
          "red_colors",
          "object",
          false
        ],
        [
          "red_colors",
          "property",
          false
        ],
        [
          "red_colors",
          "queryable",
          false
        ],
        [
          "red_colors",
          "theAble",
          false
        ],
        [
          "remember",
          "verb",
          false
        ],
        [
          "reportable",
          "concept",
          false
        ],
        [
          "reportable",
          "hierarchyAble",
          false
        ],
        [
          "reportable",
          "isEdee",
          false
        ],
        [
          "reportable",
          "isEder",
          false
        ],
        [
          "reportable",
          "object",
          false
        ],
        [
          "reportable",
          "property",
          false
        ],
        [
          "reportable",
          "queryable",
          false
        ],
        [
          "reportable",
          "theAble",
          false
        ],
        [
          "right",
          "direction",
          false
        ],
        [
          "select",
          "verb",
          false
        ],
        [
          "sienna_colors",
          "brown_colors",
          false
        ],
        [
          "sienna_colors",
          "hierarchyAble",
          false
        ],
        [
          "sienna_colors",
          "isEdee",
          false
        ],
        [
          "sienna_colors",
          "isEder",
          false
        ],
        [
          "sienna_colors",
          "object",
          false
        ],
        [
          "sienna_colors",
          "property",
          false
        ],
        [
          "sienna_colors",
          "queryable",
          false
        ],
        [
          "sienna_colors",
          "theAble",
          false
        ],
        [
          "silver_colors",
          "gray_colors",
          false
        ],
        [
          "silver_colors",
          "hierarchyAble",
          false
        ],
        [
          "silver_colors",
          "isEdee",
          false
        ],
        [
          "silver_colors",
          "isEder",
          false
        ],
        [
          "silver_colors",
          "object",
          false
        ],
        [
          "silver_colors",
          "property",
          false
        ],
        [
          "silver_colors",
          "queryable",
          false
        ],
        [
          "silver_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "hierarchyAble",
          false
        ],
        [
          "snow_colors",
          "isEdee",
          false
        ],
        [
          "snow_colors",
          "isEder",
          false
        ],
        [
          "snow_colors",
          "object",
          false
        ],
        [
          "snow_colors",
          "property",
          false
        ],
        [
          "snow_colors",
          "queryable",
          false
        ],
        [
          "snow_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "white_colors",
          false
        ],
        [
          "sort",
          "hierarchyAble",
          false
        ],
        [
          "sort",
          "isEdee",
          false
        ],
        [
          "sort",
          "isEder",
          false
        ],
        [
          "sort",
          "object",
          false
        ],
        [
          "sort",
          "ordering_modifier",
          false
        ],
        [
          "sort",
          "property",
          false
        ],
        [
          "sort",
          "queryable",
          false
        ],
        [
          "sort",
          "theAble",
          false
        ],
        [
          "sortOrdering",
          "adjective",
          false
        ],
        [
          "sort_ordering",
          "adjective",
          true
        ],
        [
          "sort_ordering",
          "concept",
          false
        ],
        [
          "sort_ordering",
          "hierarchyAble",
          false
        ],
        [
          "sort_ordering",
          "isEdee",
          false
        ],
        [
          "sort_ordering",
          "isEder",
          false
        ],
        [
          "sort_ordering",
          "object",
          false
        ],
        [
          "sort_ordering",
          "ordering",
          false
        ],
        [
          "sort_ordering",
          "property",
          false
        ],
        [
          "sort_ordering",
          "queryable",
          false
        ],
        [
          "sort_ordering",
          "theAble",
          false
        ],
        [
          "stm_before",
          "adjective",
          false
        ],
        [
          "stop",
          "verb",
          false
        ],
        [
          "tan_colors",
          "brown_colors",
          false
        ],
        [
          "tan_colors",
          "hierarchyAble",
          false
        ],
        [
          "tan_colors",
          "isEdee",
          false
        ],
        [
          "tan_colors",
          "isEder",
          false
        ],
        [
          "tan_colors",
          "object",
          false
        ],
        [
          "tan_colors",
          "property",
          false
        ],
        [
          "tan_colors",
          "queryable",
          false
        ],
        [
          "tan_colors",
          "theAble",
          false
        ],
        [
          "teal_colors",
          "green_colors",
          false
        ],
        [
          "teal_colors",
          "hierarchyAble",
          false
        ],
        [
          "teal_colors",
          "isEdee",
          false
        ],
        [
          "teal_colors",
          "isEder",
          false
        ],
        [
          "teal_colors",
          "object",
          false
        ],
        [
          "teal_colors",
          "property",
          false
        ],
        [
          "teal_colors",
          "queryable",
          false
        ],
        [
          "teal_colors",
          "theAble",
          false
        ],
        [
          "that",
          "thisitthat",
          false
        ],
        [
          "the",
          "articlePOS",
          false
        ],
        [
          "theAble",
          "theAble",
          false
        ],
        [
          "this",
          "pronoun",
          false
        ],
        [
          "this",
          "queryable",
          false
        ],
        [
          "this",
          "thisitthat",
          false
        ],
        [
          "thisitthat",
          "queryable",
          false
        ],
        [
          "timesExpression",
          "mathematicalExpression",
          false
        ],
        [
          "timesOperator",
          "mathematical_operator",
          false
        ],
        [
          "to",
          "preposition",
          false
        ],
        [
          "toAble",
          "toAble",
          false
        ],
        [
          "turquoise_colors",
          "blue_colors",
          false
        ],
        [
          "turquoise_colors",
          "hierarchyAble",
          false
        ],
        [
          "turquoise_colors",
          "isEdee",
          false
        ],
        [
          "turquoise_colors",
          "isEder",
          false
        ],
        [
          "turquoise_colors",
          "object",
          false
        ],
        [
          "turquoise_colors",
          "property",
          false
        ],
        [
          "turquoise_colors",
          "queryable",
          false
        ],
        [
          "turquoise_colors",
          "theAble",
          false
        ],
        [
          "type",
          "property",
          false
        ],
        [
          "type",
          "whatAble",
          false
        ],
        [
          "unknown",
          "hierarchyAble",
          false
        ],
        [
          "unknown",
          "queryable",
          false
        ],
        [
          "unknown",
          "theAble",
          false
        ],
        [
          "unselect",
          "verb",
          false
        ],
        [
          "up",
          "direction",
          false
        ],
        [
          "verb",
          "verb",
          false
        ],
        [
          "violet_colors",
          "hierarchyAble",
          false
        ],
        [
          "violet_colors",
          "isEdee",
          false
        ],
        [
          "violet_colors",
          "isEder",
          false
        ],
        [
          "violet_colors",
          "object",
          false
        ],
        [
          "violet_colors",
          "property",
          false
        ],
        [
          "violet_colors",
          "purple_colors",
          false
        ],
        [
          "violet_colors",
          "queryable",
          false
        ],
        [
          "violet_colors",
          "theAble",
          false
        ],
        [
          "what",
          "object",
          false
        ],
        [
          "what",
          "queryable",
          false
        ],
        [
          "whatAble",
          "queryable",
          false
        ],
        [
          "white_colors",
          "color_colors",
          false
        ],
        [
          "white_colors",
          "hierarchyAble",
          false
        ],
        [
          "white_colors",
          "isEdee",
          false
        ],
        [
          "white_colors",
          "isEder",
          false
        ],
        [
          "white_colors",
          "object",
          false
        ],
        [
          "white_colors",
          "property",
          false
        ],
        [
          "white_colors",
          "queryable",
          false
        ],
        [
          "white_colors",
          "theAble",
          false
        ],
        [
          "whose",
          "object",
          false
        ],
        [
          "x",
          "number",
          false
        ],
        [
          "xfx",
          "queryable",
          false
        ],
        [
          "y",
          "number",
          false
        ],
        [
          "yellow_colors",
          "color_colors",
          false
        ],
        [
          "yellow_colors",
          "hierarchyAble",
          false
        ],
        [
          "yellow_colors",
          "isEdee",
          false
        ],
        [
          "yellow_colors",
          "isEder",
          false
        ],
        [
          "yellow_colors",
          "object",
          false
        ],
        [
          "yellow_colors",
          "property",
          false
        ],
        [
          "yellow_colors",
          "queryable",
          false
        ],
        [
          "yellow_colors",
          "theAble",
          false
        ]
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "briefOrWordy",
              0
            ],
            "ops": [
              [
                "be",
                0
              ],
              [
                "briefOrWordy",
                0
              ]
            ],
            "counter": 1
          },
          {
            "op": [
              "be",
              0
            ],
            "ops": [
              [
                "be",
                0
              ]
            ],
            "counter": 2
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "marker": "be",
          "value": "be",
          "default": true,
          "text": "be brief",
          "word": "be",
          "range": {
            "start": 0,
            "end": 7
          },
          "dead": true,
          "type": {
            "value": "brief",
            "text": "brief",
            "marker": "briefOrWordy",
            "word": "brief",
            "range": {
              "start": 3,
              "end": 7
            },
            "dead": true,
            "types": [
              "briefOrWordy"
            ],
            "level": 1
          },
          "level": 1,
          "topLevel": true,
          "touchedBy": [
            "mongo#call2",
            "instance0#mongo#call2"
          ]
        }
      ],
      "generated": [
        ""
      ],
      "paraphrases": [
        "be brief"
      ],
      "paraphrasesParenthesized": [],
      "generatedParenthesized": [],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "be",
            0
          ],
          [
            "briefOrWordy",
            0
          ]
        ]
      ],
      "learned_contextual_priorities": [],
      "query": "be brief",
      "key": {
        "query": "be brief"
      }
    },
    {
      "hierarchy": [
        [
          "a",
          "articlePOS",
          false
        ],
        [
          "action",
          "action",
          false
        ],
        [
          "adjective",
          "adjective",
          false
        ],
        [
          "all",
          "quantifier",
          false
        ],
        [
          "aqua_colors",
          "blue_colors",
          false
        ],
        [
          "aqua_colors",
          "hierarchyAble",
          false
        ],
        [
          "aqua_colors",
          "isEdee",
          false
        ],
        [
          "aqua_colors",
          "isEder",
          false
        ],
        [
          "aqua_colors",
          "object",
          false
        ],
        [
          "aqua_colors",
          "property",
          false
        ],
        [
          "aqua_colors",
          "queryable",
          false
        ],
        [
          "aqua_colors",
          "theAble",
          false
        ],
        [
          "aquamarine_colors",
          "blue_colors",
          false
        ],
        [
          "aquamarine_colors",
          "hierarchyAble",
          false
        ],
        [
          "aquamarine_colors",
          "isEdee",
          false
        ],
        [
          "aquamarine_colors",
          "isEder",
          false
        ],
        [
          "aquamarine_colors",
          "object",
          false
        ],
        [
          "aquamarine_colors",
          "property",
          false
        ],
        [
          "aquamarine_colors",
          "queryable",
          false
        ],
        [
          "aquamarine_colors",
          "theAble",
          false
        ],
        [
          "articlePOS",
          "articlePOS",
          false
        ],
        [
          "ascending",
          "hierarchyAble",
          false
        ],
        [
          "ascending",
          "isEdee",
          false
        ],
        [
          "ascending",
          "isEder",
          false
        ],
        [
          "ascending",
          "object",
          false
        ],
        [
          "ascending",
          "property",
          false
        ],
        [
          "ascending",
          "queryable",
          false
        ],
        [
          "ascending",
          "sort_ordering",
          false
        ],
        [
          "ascending",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "hierarchyAble",
          false
        ],
        [
          "azure_colors",
          "isEdee",
          false
        ],
        [
          "azure_colors",
          "isEder",
          false
        ],
        [
          "azure_colors",
          "object",
          false
        ],
        [
          "azure_colors",
          "property",
          false
        ],
        [
          "azure_colors",
          "queryable",
          false
        ],
        [
          "azure_colors",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "white_colors",
          false
        ],
        [
          "beige_colors",
          "hierarchyAble",
          false
        ],
        [
          "beige_colors",
          "isEdee",
          false
        ],
        [
          "beige_colors",
          "isEder",
          false
        ],
        [
          "beige_colors",
          "object",
          false
        ],
        [
          "beige_colors",
          "property",
          false
        ],
        [
          "beige_colors",
          "queryable",
          false
        ],
        [
          "beige_colors",
          "theAble",
          false
        ],
        [
          "beige_colors",
          "white_colors",
          false
        ],
        [
          "between",
          "preposition",
          false
        ],
        [
          "black_colors",
          "gray_colors",
          false
        ],
        [
          "black_colors",
          "hierarchyAble",
          false
        ],
        [
          "black_colors",
          "isEdee",
          false
        ],
        [
          "black_colors",
          "isEder",
          false
        ],
        [
          "black_colors",
          "object",
          false
        ],
        [
          "black_colors",
          "property",
          false
        ],
        [
          "black_colors",
          "queryable",
          false
        ],
        [
          "black_colors",
          "theAble",
          false
        ],
        [
          "blue_colors",
          "color_colors",
          false
        ],
        [
          "blue_colors",
          "hierarchyAble",
          false
        ],
        [
          "blue_colors",
          "isEdee",
          false
        ],
        [
          "blue_colors",
          "isEder",
          false
        ],
        [
          "blue_colors",
          "object",
          false
        ],
        [
          "blue_colors",
          "property",
          false
        ],
        [
          "blue_colors",
          "queryable",
          false
        ],
        [
          "blue_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors",
          "color_colors_modifier",
          false
        ],
        [
          "brightness_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors",
          "object",
          false
        ],
        [
          "brightness_colors",
          "property",
          false
        ],
        [
          "brightness_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "adjective",
          true
        ],
        [
          "brightness_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "brightness_colors_color_colors",
          "concept",
          false
        ],
        [
          "brightness_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors_color_colors",
          "object",
          false
        ],
        [
          "brightness_colors_color_colors",
          "property",
          false
        ],
        [
          "brightness_colors_color_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors_color_colors",
          "theAble",
          false
        ],
        [
          "brown_colors",
          "color_colors",
          false
        ],
        [
          "brown_colors",
          "hierarchyAble",
          false
        ],
        [
          "brown_colors",
          "isEdee",
          false
        ],
        [
          "brown_colors",
          "isEder",
          false
        ],
        [
          "brown_colors",
          "object",
          false
        ],
        [
          "brown_colors",
          "property",
          false
        ],
        [
          "brown_colors",
          "queryable",
          false
        ],
        [
          "brown_colors",
          "theAble",
          false
        ],
        [
          "call",
          "verb",
          false
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion",
          false
        ],
        [
          "canBeQuestion",
          "canBeQuestion",
          false
        ],
        [
          "cancel",
          "verb",
          false
        ],
        [
          "chartruese_colors",
          "green_colors",
          false
        ],
        [
          "chartruese_colors",
          "hierarchyAble",
          false
        ],
        [
          "chartruese_colors",
          "isEdee",
          false
        ],
        [
          "chartruese_colors",
          "isEder",
          false
        ],
        [
          "chartruese_colors",
          "object",
          false
        ],
        [
          "chartruese_colors",
          "property",
          false
        ],
        [
          "chartruese_colors",
          "queryable",
          false
        ],
        [
          "chartruese_colors",
          "theAble",
          false
        ],
        [
          "color_colors",
          "concept",
          false
        ],
        [
          "color_colors",
          "hierarchyAble",
          false
        ],
        [
          "color_colors",
          "isEdee",
          false
        ],
        [
          "color_colors",
          "isEder",
          false
        ],
        [
          "color_colors",
          "object",
          false
        ],
        [
          "color_colors",
          "property",
          false
        ],
        [
          "color_colors",
          "queryable",
          false
        ],
        [
          "color_colors",
          "theAble",
          false
        ],
        [
          "color_colors_modifier",
          "color_colors_modifier",
          false
        ],
        [
          "concept",
          "queryable",
          false
        ],
        [
          "concept",
          "theAble",
          false
        ],
        [
          "condition",
          "condition",
          false
        ],
        [
          "countable",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "isEdee",
          false
        ],
        [
          "crimson_colors",
          "isEder",
          false
        ],
        [
          "crimson_colors",
          "object",
          false
        ],
        [
          "crimson_colors",
          "property",
          false
        ],
        [
          "crimson_colors",
          "queryable",
          false
        ],
        [
          "crimson_colors",
          "red_colors",
          false
        ],
        [
          "crimson_colors",
          "theAble",
          false
        ],
        [
          "cyan_colors",
          "blue_colors",
          false
        ],
        [
          "cyan_colors",
          "hierarchyAble",
          false
        ],
        [
          "cyan_colors",
          "isEdee",
          false
        ],
        [
          "cyan_colors",
          "isEder",
          false
        ],
        [
          "cyan_colors",
          "object",
          false
        ],
        [
          "cyan_colors",
          "property",
          false
        ],
        [
          "cyan_colors",
          "queryable",
          false
        ],
        [
          "cyan_colors",
          "theAble",
          false
        ],
        [
          "dark_colors",
          "brightness_colors",
          false
        ],
        [
          "dark_colors",
          "hierarchyAble",
          false
        ],
        [
          "dark_colors",
          "isEdee",
          false
        ],
        [
          "dark_colors",
          "isEder",
          false
        ],
        [
          "dark_colors",
          "object",
          false
        ],
        [
          "dark_colors",
          "property",
          false
        ],
        [
          "dark_colors",
          "queryable",
          false
        ],
        [
          "dark_colors",
          "theAble",
          false
        ],
        [
          "descending",
          "hierarchyAble",
          false
        ],
        [
          "descending",
          "isEdee",
          false
        ],
        [
          "descending",
          "isEder",
          false
        ],
        [
          "descending",
          "object",
          false
        ],
        [
          "descending",
          "property",
          false
        ],
        [
          "descending",
          "queryable",
          false
        ],
        [
          "descending",
          "sort_ordering",
          false
        ],
        [
          "descending",
          "theAble",
          false
        ],
        [
          "direction",
          "direction",
          false
        ],
        [
          "divideByExpression",
          "mathematicalExpression",
          false
        ],
        [
          "divideByOperator",
          "mathematical_operator",
          false
        ],
        [
          "doubleQuote",
          "queryable",
          false
        ],
        [
          "down",
          "direction",
          false
        ],
        [
          "evaluate",
          "verb",
          false
        ],
        [
          "gold_colors",
          "hierarchyAble",
          false
        ],
        [
          "gold_colors",
          "isEdee",
          false
        ],
        [
          "gold_colors",
          "isEder",
          false
        ],
        [
          "gold_colors",
          "object",
          false
        ],
        [
          "gold_colors",
          "property",
          false
        ],
        [
          "gold_colors",
          "queryable",
          false
        ],
        [
          "gold_colors",
          "theAble",
          false
        ],
        [
          "gold_colors",
          "yellow_colors",
          false
        ],
        [
          "gray_colors",
          "color_colors",
          false
        ],
        [
          "gray_colors",
          "hierarchyAble",
          false
        ],
        [
          "gray_colors",
          "isEdee",
          false
        ],
        [
          "gray_colors",
          "isEder",
          false
        ],
        [
          "gray_colors",
          "object",
          false
        ],
        [
          "gray_colors",
          "property",
          false
        ],
        [
          "gray_colors",
          "queryable",
          false
        ],
        [
          "gray_colors",
          "theAble",
          false
        ],
        [
          "green_colors",
          "color_colors",
          false
        ],
        [
          "green_colors",
          "hierarchyAble",
          false
        ],
        [
          "green_colors",
          "isEdee",
          false
        ],
        [
          "green_colors",
          "isEder",
          false
        ],
        [
          "green_colors",
          "object",
          false
        ],
        [
          "green_colors",
          "property",
          false
        ],
        [
          "green_colors",
          "queryable",
          false
        ],
        [
          "green_colors",
          "theAble",
          false
        ],
        [
          "hasCountOfPieces",
          "countable",
          false
        ],
        [
          "have",
          "canBeDoQuestion",
          false
        ],
        [
          "have",
          "canBeQuestion",
          false
        ],
        [
          "hex_colors",
          "color_colors_modifier",
          false
        ],
        [
          "hex_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors",
          "isEder",
          false
        ],
        [
          "hex_colors",
          "object",
          false
        ],
        [
          "hex_colors",
          "property",
          false
        ],
        [
          "hex_colors",
          "queryable",
          false
        ],
        [
          "hex_colors",
          "theAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "adjective",
          true
        ],
        [
          "hex_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "hex_colors_color_colors",
          "concept",
          false
        ],
        [
          "hex_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEder",
          false
        ],
        [
          "hex_colors_color_colors",
          "object",
          false
        ],
        [
          "hex_colors_color_colors",
          "property",
          false
        ],
        [
          "hex_colors_color_colors",
          "queryable",
          false
        ],
        [
          "hex_colors_color_colors",
          "theAble",
          false
        ],
        [
          "hierarchyAble",
          "queryable",
          false
        ],
        [
          "highest",
          "condition",
          false
        ],
        [
          "ifAble",
          "ifAble",
          false
        ],
        [
          "indigo_colors",
          "hierarchyAble",
          false
        ],
        [
          "indigo_colors",
          "isEdee",
          false
        ],
        [
          "indigo_colors",
          "isEder",
          false
        ],
        [
          "indigo_colors",
          "object",
          false
        ],
        [
          "indigo_colors",
          "property",
          false
        ],
        [
          "indigo_colors",
          "purple_colors",
          false
        ],
        [
          "indigo_colors",
          "queryable",
          false
        ],
        [
          "indigo_colors",
          "theAble",
          false
        ],
        [
          "is",
          "canBeQuestion",
          false
        ],
        [
          "is",
          "verb",
          false
        ],
        [
          "isEdee",
          "isEdee",
          false
        ],
        [
          "isEder",
          "isEder",
          false
        ],
        [
          "it",
          "pronoun",
          false
        ],
        [
          "it",
          "queryable",
          false
        ],
        [
          "it",
          "thisitthat",
          false
        ],
        [
          "it",
          "toAble",
          false
        ],
        [
          "ivory_colors",
          "hierarchyAble",
          false
        ],
        [
          "ivory_colors",
          "isEdee",
          false
        ],
        [
          "ivory_colors",
          "isEder",
          false
        ],
        [
          "ivory_colors",
          "object",
          false
        ],
        [
          "ivory_colors",
          "property",
          false
        ],
        [
          "ivory_colors",
          "queryable",
          false
        ],
        [
          "ivory_colors",
          "theAble",
          false
        ],
        [
          "ivory_colors",
          "white_colors",
          false
        ],
        [
          "khaki_colors",
          "hierarchyAble",
          false
        ],
        [
          "khaki_colors",
          "isEdee",
          false
        ],
        [
          "khaki_colors",
          "isEder",
          false
        ],
        [
          "khaki_colors",
          "object",
          false
        ],
        [
          "khaki_colors",
          "property",
          false
        ],
        [
          "khaki_colors",
          "queryable",
          false
        ],
        [
          "khaki_colors",
          "theAble",
          false
        ],
        [
          "khaki_colors",
          "yellow_colors",
          false
        ],
        [
          "lavender_colors",
          "hierarchyAble",
          false
        ],
        [
          "lavender_colors",
          "isEdee",
          false
        ],
        [
          "lavender_colors",
          "isEder",
          false
        ],
        [
          "lavender_colors",
          "object",
          false
        ],
        [
          "lavender_colors",
          "property",
          false
        ],
        [
          "lavender_colors",
          "purple_colors",
          false
        ],
        [
          "lavender_colors",
          "queryable",
          false
        ],
        [
          "lavender_colors",
          "theAble",
          false
        ],
        [
          "left",
          "direction",
          false
        ],
        [
          "light_colors",
          "brightness_colors",
          false
        ],
        [
          "light_colors",
          "hierarchyAble",
          false
        ],
        [
          "light_colors",
          "isEdee",
          false
        ],
        [
          "light_colors",
          "isEder",
          false
        ],
        [
          "light_colors",
          "object",
          false
        ],
        [
          "light_colors",
          "property",
          false
        ],
        [
          "light_colors",
          "queryable",
          false
        ],
        [
          "light_colors",
          "theAble",
          false
        ],
        [
          "lime_colors",
          "green_colors",
          false
        ],
        [
          "lime_colors",
          "hierarchyAble",
          false
        ],
        [
          "lime_colors",
          "isEdee",
          false
        ],
        [
          "lime_colors",
          "isEder",
          false
        ],
        [
          "lime_colors",
          "object",
          false
        ],
        [
          "lime_colors",
          "property",
          false
        ],
        [
          "lime_colors",
          "queryable",
          false
        ],
        [
          "lime_colors",
          "theAble",
          false
        ],
        [
          "listening",
          "action",
          false
        ],
        [
          "lowest",
          "condition",
          false
        ],
        [
          "magenta_colors",
          "hierarchyAble",
          false
        ],
        [
          "magenta_colors",
          "isEdee",
          false
        ],
        [
          "magenta_colors",
          "isEder",
          false
        ],
        [
          "magenta_colors",
          "object",
          false
        ],
        [
          "magenta_colors",
          "property",
          false
        ],
        [
          "magenta_colors",
          "purple_colors",
          false
        ],
        [
          "magenta_colors",
          "queryable",
          false
        ],
        [
          "magenta_colors",
          "theAble",
          false
        ],
        [
          "maroon_colors",
          "brown_colors",
          false
        ],
        [
          "maroon_colors",
          "hierarchyAble",
          false
        ],
        [
          "maroon_colors",
          "isEdee",
          false
        ],
        [
          "maroon_colors",
          "isEder",
          false
        ],
        [
          "maroon_colors",
          "object",
          false
        ],
        [
          "maroon_colors",
          "property",
          false
        ],
        [
          "maroon_colors",
          "queryable",
          false
        ],
        [
          "maroon_colors",
          "theAble",
          false
        ],
        [
          "mathematical",
          "hierarchyAble",
          false
        ],
        [
          "mathematical",
          "isEdee",
          false
        ],
        [
          "mathematical",
          "isEder",
          false
        ],
        [
          "mathematical",
          "object",
          false
        ],
        [
          "mathematical",
          "operator_modifier",
          false
        ],
        [
          "mathematical",
          "property",
          false
        ],
        [
          "mathematical",
          "queryable",
          false
        ],
        [
          "mathematical",
          "theAble",
          false
        ],
        [
          "mathematicalExpression",
          "concept",
          false
        ],
        [
          "mathematicalExpression",
          "number",
          false
        ],
        [
          "mathematical_operator",
          "adjective",
          true
        ],
        [
          "mathematical_operator",
          "concept",
          false
        ],
        [
          "mathematical_operator",
          "hierarchyAble",
          false
        ],
        [
          "mathematical_operator",
          "isEdee",
          false
        ],
        [
          "mathematical_operator",
          "isEder",
          false
        ],
        [
          "mathematical_operator",
          "object",
          false
        ],
        [
          "mathematical_operator",
          "operator",
          false
        ],
        [
          "mathematical_operator",
          "property",
          false
        ],
        [
          "mathematical_operator",
          "queryable",
          false
        ],
        [
          "mathematical_operator",
          "theAble",
          false
        ],
        [
          "memorable",
          "theAble",
          false
        ],
        [
          "minusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "minusOperator",
          "mathematical_operator",
          false
        ],
        [
          "modifies",
          "verb",
          false
        ],
        [
          "move",
          "verb",
          false
        ],
        [
          "moveAmount",
          "preposition",
          false
        ],
        [
          "navy_colors",
          "blue_colors",
          false
        ],
        [
          "navy_colors",
          "hierarchyAble",
          false
        ],
        [
          "navy_colors",
          "isEdee",
          false
        ],
        [
          "navy_colors",
          "isEder",
          false
        ],
        [
          "navy_colors",
          "object",
          false
        ],
        [
          "navy_colors",
          "property",
          false
        ],
        [
          "navy_colors",
          "queryable",
          false
        ],
        [
          "navy_colors",
          "theAble",
          false
        ],
        [
          "noun",
          "theAble",
          false
        ],
        [
          "number",
          "quantifier",
          false
        ],
        [
          "number",
          "queryable",
          false
        ],
        [
          "object",
          "queryable",
          false
        ],
        [
          "object",
          "theAble",
          false
        ],
        [
          "olive_colors",
          "green_colors",
          false
        ],
        [
          "olive_colors",
          "hierarchyAble",
          false
        ],
        [
          "olive_colors",
          "isEdee",
          false
        ],
        [
          "olive_colors",
          "isEder",
          false
        ],
        [
          "olive_colors",
          "object",
          false
        ],
        [
          "olive_colors",
          "property",
          false
        ],
        [
          "olive_colors",
          "queryable",
          false
        ],
        [
          "olive_colors",
          "theAble",
          false
        ],
        [
          "operator",
          "concept",
          false
        ],
        [
          "operator",
          "hierarchyAble",
          false
        ],
        [
          "operator",
          "isEdee",
          false
        ],
        [
          "operator",
          "isEder",
          false
        ],
        [
          "operator",
          "object",
          false
        ],
        [
          "operator",
          "property",
          false
        ],
        [
          "operator",
          "queryable",
          false
        ],
        [
          "operator",
          "theAble",
          false
        ],
        [
          "operator_modifier",
          "operator_modifier",
          false
        ],
        [
          "orAble",
          "ifAble",
          false
        ],
        [
          "orange_colors",
          "color_colors",
          false
        ],
        [
          "orange_colors",
          "hierarchyAble",
          false
        ],
        [
          "orange_colors",
          "isEdee",
          false
        ],
        [
          "orange_colors",
          "isEder",
          false
        ],
        [
          "orange_colors",
          "object",
          false
        ],
        [
          "orange_colors",
          "property",
          false
        ],
        [
          "orange_colors",
          "queryable",
          false
        ],
        [
          "orange_colors",
          "theAble",
          false
        ],
        [
          "ordering",
          "concept",
          false
        ],
        [
          "ordering",
          "hierarchyAble",
          false
        ],
        [
          "ordering",
          "isEdee",
          false
        ],
        [
          "ordering",
          "isEder",
          false
        ],
        [
          "ordering",
          "object",
          false
        ],
        [
          "ordering",
          "property",
          false
        ],
        [
          "ordering",
          "queryable",
          false
        ],
        [
          "ordering",
          "theAble",
          false
        ],
        [
          "ordering_modifier",
          "ordering_modifier",
          false
        ],
        [
          "ordinal",
          "number",
          false
        ],
        [
          "ordinalOnOrdered",
          "adjective",
          false
        ],
        [
          "pink_colors",
          "color_colors",
          false
        ],
        [
          "pink_colors",
          "hierarchyAble",
          false
        ],
        [
          "pink_colors",
          "isEdee",
          false
        ],
        [
          "pink_colors",
          "isEder",
          false
        ],
        [
          "pink_colors",
          "object",
          false
        ],
        [
          "pink_colors",
          "property",
          false
        ],
        [
          "pink_colors",
          "queryable",
          false
        ],
        [
          "pink_colors",
          "theAble",
          false
        ],
        [
          "plusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "plusOperator",
          "mathematical_operator",
          false
        ],
        [
          "preposition",
          "preposition",
          false
        ],
        [
          "pronoun",
          "pronoun",
          false
        ],
        [
          "property",
          "queryable",
          false
        ],
        [
          "property",
          "theAble",
          false
        ],
        [
          "punctuation",
          "punctuation",
          false
        ],
        [
          "purple_colors",
          "color_colors",
          false
        ],
        [
          "purple_colors",
          "hierarchyAble",
          false
        ],
        [
          "purple_colors",
          "isEdee",
          false
        ],
        [
          "purple_colors",
          "isEder",
          false
        ],
        [
          "purple_colors",
          "object",
          false
        ],
        [
          "purple_colors",
          "property",
          false
        ],
        [
          "purple_colors",
          "queryable",
          false
        ],
        [
          "purple_colors",
          "theAble",
          false
        ],
        [
          "quantifier",
          "quantifier",
          false
        ],
        [
          "queryable",
          "queryable",
          false
        ],
        [
          "questionMark",
          "punctuation",
          false
        ],
        [
          "readonly",
          "queryable",
          false
        ],
        [
          "reason",
          "queryable",
          false
        ],
        [
          "reason",
          "theAble",
          false
        ],
        [
          "red_colors",
          "color_colors",
          false
        ],
        [
          "red_colors",
          "hierarchyAble",
          false
        ],
        [
          "red_colors",
          "isEdee",
          false
        ],
        [
          "red_colors",
          "isEder",
          false
        ],
        [
          "red_colors",
          "object",
          false
        ],
        [
          "red_colors",
          "property",
          false
        ],
        [
          "red_colors",
          "queryable",
          false
        ],
        [
          "red_colors",
          "theAble",
          false
        ],
        [
          "remember",
          "verb",
          false
        ],
        [
          "reportable",
          "concept",
          false
        ],
        [
          "reportable",
          "hierarchyAble",
          false
        ],
        [
          "reportable",
          "isEdee",
          false
        ],
        [
          "reportable",
          "isEder",
          false
        ],
        [
          "reportable",
          "object",
          false
        ],
        [
          "reportable",
          "property",
          false
        ],
        [
          "reportable",
          "queryable",
          false
        ],
        [
          "reportable",
          "theAble",
          false
        ],
        [
          "right",
          "direction",
          false
        ],
        [
          "select",
          "verb",
          false
        ],
        [
          "sienna_colors",
          "brown_colors",
          false
        ],
        [
          "sienna_colors",
          "hierarchyAble",
          false
        ],
        [
          "sienna_colors",
          "isEdee",
          false
        ],
        [
          "sienna_colors",
          "isEder",
          false
        ],
        [
          "sienna_colors",
          "object",
          false
        ],
        [
          "sienna_colors",
          "property",
          false
        ],
        [
          "sienna_colors",
          "queryable",
          false
        ],
        [
          "sienna_colors",
          "theAble",
          false
        ],
        [
          "silver_colors",
          "gray_colors",
          false
        ],
        [
          "silver_colors",
          "hierarchyAble",
          false
        ],
        [
          "silver_colors",
          "isEdee",
          false
        ],
        [
          "silver_colors",
          "isEder",
          false
        ],
        [
          "silver_colors",
          "object",
          false
        ],
        [
          "silver_colors",
          "property",
          false
        ],
        [
          "silver_colors",
          "queryable",
          false
        ],
        [
          "silver_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "hierarchyAble",
          false
        ],
        [
          "snow_colors",
          "isEdee",
          false
        ],
        [
          "snow_colors",
          "isEder",
          false
        ],
        [
          "snow_colors",
          "object",
          false
        ],
        [
          "snow_colors",
          "property",
          false
        ],
        [
          "snow_colors",
          "queryable",
          false
        ],
        [
          "snow_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "white_colors",
          false
        ],
        [
          "sort",
          "hierarchyAble",
          false
        ],
        [
          "sort",
          "isEdee",
          false
        ],
        [
          "sort",
          "isEder",
          false
        ],
        [
          "sort",
          "object",
          false
        ],
        [
          "sort",
          "ordering_modifier",
          false
        ],
        [
          "sort",
          "property",
          false
        ],
        [
          "sort",
          "queryable",
          false
        ],
        [
          "sort",
          "theAble",
          false
        ],
        [
          "sortOrdering",
          "adjective",
          false
        ],
        [
          "sort_ordering",
          "adjective",
          true
        ],
        [
          "sort_ordering",
          "concept",
          false
        ],
        [
          "sort_ordering",
          "hierarchyAble",
          false
        ],
        [
          "sort_ordering",
          "isEdee",
          false
        ],
        [
          "sort_ordering",
          "isEder",
          false
        ],
        [
          "sort_ordering",
          "object",
          false
        ],
        [
          "sort_ordering",
          "ordering",
          false
        ],
        [
          "sort_ordering",
          "property",
          false
        ],
        [
          "sort_ordering",
          "queryable",
          false
        ],
        [
          "sort_ordering",
          "theAble",
          false
        ],
        [
          "stm_before",
          "adjective",
          false
        ],
        [
          "stop",
          "verb",
          false
        ],
        [
          "tan_colors",
          "brown_colors",
          false
        ],
        [
          "tan_colors",
          "hierarchyAble",
          false
        ],
        [
          "tan_colors",
          "isEdee",
          false
        ],
        [
          "tan_colors",
          "isEder",
          false
        ],
        [
          "tan_colors",
          "object",
          false
        ],
        [
          "tan_colors",
          "property",
          false
        ],
        [
          "tan_colors",
          "queryable",
          false
        ],
        [
          "tan_colors",
          "theAble",
          false
        ],
        [
          "teal_colors",
          "green_colors",
          false
        ],
        [
          "teal_colors",
          "hierarchyAble",
          false
        ],
        [
          "teal_colors",
          "isEdee",
          false
        ],
        [
          "teal_colors",
          "isEder",
          false
        ],
        [
          "teal_colors",
          "object",
          false
        ],
        [
          "teal_colors",
          "property",
          false
        ],
        [
          "teal_colors",
          "queryable",
          false
        ],
        [
          "teal_colors",
          "theAble",
          false
        ],
        [
          "that",
          "thisitthat",
          false
        ],
        [
          "the",
          "articlePOS",
          false
        ],
        [
          "theAble",
          "theAble",
          false
        ],
        [
          "this",
          "pronoun",
          false
        ],
        [
          "this",
          "queryable",
          false
        ],
        [
          "this",
          "thisitthat",
          false
        ],
        [
          "thisitthat",
          "queryable",
          false
        ],
        [
          "timesExpression",
          "mathematicalExpression",
          false
        ],
        [
          "timesOperator",
          "mathematical_operator",
          false
        ],
        [
          "to",
          "preposition",
          false
        ],
        [
          "toAble",
          "toAble",
          false
        ],
        [
          "turquoise_colors",
          "blue_colors",
          false
        ],
        [
          "turquoise_colors",
          "hierarchyAble",
          false
        ],
        [
          "turquoise_colors",
          "isEdee",
          false
        ],
        [
          "turquoise_colors",
          "isEder",
          false
        ],
        [
          "turquoise_colors",
          "object",
          false
        ],
        [
          "turquoise_colors",
          "property",
          false
        ],
        [
          "turquoise_colors",
          "queryable",
          false
        ],
        [
          "turquoise_colors",
          "theAble",
          false
        ],
        [
          "type",
          "property",
          false
        ],
        [
          "type",
          "whatAble",
          false
        ],
        [
          "unknown",
          "hierarchyAble",
          false
        ],
        [
          "unknown",
          "queryable",
          false
        ],
        [
          "unknown",
          "theAble",
          false
        ],
        [
          "unselect",
          "verb",
          false
        ],
        [
          "up",
          "direction",
          false
        ],
        [
          "verb",
          "verb",
          false
        ],
        [
          "violet_colors",
          "hierarchyAble",
          false
        ],
        [
          "violet_colors",
          "isEdee",
          false
        ],
        [
          "violet_colors",
          "isEder",
          false
        ],
        [
          "violet_colors",
          "object",
          false
        ],
        [
          "violet_colors",
          "property",
          false
        ],
        [
          "violet_colors",
          "purple_colors",
          false
        ],
        [
          "violet_colors",
          "queryable",
          false
        ],
        [
          "violet_colors",
          "theAble",
          false
        ],
        [
          "what",
          "object",
          false
        ],
        [
          "what",
          "queryable",
          false
        ],
        [
          "whatAble",
          "queryable",
          false
        ],
        [
          "white_colors",
          "color_colors",
          false
        ],
        [
          "white_colors",
          "hierarchyAble",
          false
        ],
        [
          "white_colors",
          "isEdee",
          false
        ],
        [
          "white_colors",
          "isEder",
          false
        ],
        [
          "white_colors",
          "object",
          false
        ],
        [
          "white_colors",
          "property",
          false
        ],
        [
          "white_colors",
          "queryable",
          false
        ],
        [
          "white_colors",
          "theAble",
          false
        ],
        [
          "whose",
          "object",
          false
        ],
        [
          "x",
          "number",
          false
        ],
        [
          "xfx",
          "queryable",
          false
        ],
        [
          "y",
          "number",
          false
        ],
        [
          "yellow_colors",
          "color_colors",
          false
        ],
        [
          "yellow_colors",
          "hierarchyAble",
          false
        ],
        [
          "yellow_colors",
          "isEdee",
          false
        ],
        [
          "yellow_colors",
          "isEder",
          false
        ],
        [
          "yellow_colors",
          "object",
          false
        ],
        [
          "yellow_colors",
          "property",
          false
        ],
        [
          "yellow_colors",
          "queryable",
          false
        ],
        [
          "yellow_colors",
          "theAble",
          false
        ]
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "comma",
                0
              ],
              [
                "list",
                0
              ],
              [
                "modifies",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 1
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "comma",
                0
              ],
              [
                "list",
                0
              ],
              [
                "modifies",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 2
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "comma",
                0
              ],
              [
                "list",
                0
              ],
              [
                "modifies",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 3
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "comma",
                0
              ],
              [
                "list",
                0
              ],
              [
                "modifies",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 4
          },
          {
            "op": [
              "list",
              0
            ],
            "ops": [
              [
                "comma",
                0
              ],
              [
                "list",
                0
              ],
              [
                "modifies",
                0
              ]
            ],
            "counter": 5
          },
          {
            "op": [
              "comma",
              0
            ],
            "ops": [
              [
                "comma",
                0
              ],
              [
                "modifies",
                0
              ]
            ],
            "counter": 6
          },
          {
            "op": [
              "list",
              1
            ],
            "ops": [
              [
                "list",
                1
              ],
              [
                "modifies",
                0
              ]
            ],
            "counter": 7
          },
          {
            "op": [
              "modifies",
              0
            ],
            "ops": [
              [
                "modifies",
                0
              ]
            ],
            "counter": 8
          }
        ]
      },
      "trace": "\n\n>>>>>>>>>>>>> Counter 1\n    0. unknown/0  (1, 0) - \"pie\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 0, 'end': 2}\n                                     text: \"pie\"\n                                     unknown: true\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. comma/0  (1, 1) - \",\"\n                                   {\n                                     depth: \"+\"\n                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 3, 'end': 3}\n                                     text: \",\"\n                                     value: \",\"\n                                     word: \",\"\n                                   }\n    2. unknown/0  (1, 3) - \"bar\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 5, 'end': 7}\n                                     text: \"bar\"\n                                     unknown: true\n                                     value: \"bar\"\n                                     word: \"bar\"\n                                   }\n    3. list/0  (1, 5) - \"and\"\n                                   {\n                                     default: true\n                                     marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({}) bridge(bridge))\n                                     range: {'start': 9, 'end': 11}\n                                     text: \"and\"\n                                     word: \"and\"\n                                   }\n    4. unknown/0  (1, 8) - \"line\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 13, 'end': 16}\n                                     text: \"line\"\n                                     unknown: true\n                                     value: \"line\"\n                                     word: \"line\"\n                                   }\n    5. modifies/0  (1, 11) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    6. unknown/0  (1, 13) - \"graph\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"graph\"\n                                     unknown: true\n                                     value: \"graph\"\n                                     word: \"graph\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=0) is Context({marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge)), range: {'start': 0, 'end': 2}, text: pie, unknown: True, value: pie, word: pie})\n\n>>>>>>>>>>>>> Counter 2\n   *0. unknown/1 (dead) (2, 0) - \"pie\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 0, 'end': 2}\n                                     text: \"pie\"\n                                     unknown: true\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. comma/0  (1, 1) - \",\"\n                                   {\n                                     depth: \"+\"\n                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 3, 'end': 3}\n                                     text: \",\"\n                                     value: \",\"\n                                     word: \",\"\n                                   }\n    2. unknown/0  (1, 3) - \"bar\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 5, 'end': 7}\n                                     text: \"bar\"\n                                     unknown: true\n                                     value: \"bar\"\n                                     word: \"bar\"\n                                   }\n    3. list/0  (1, 5) - \"and\"\n                                   {\n                                     default: true\n                                     marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({'type': ['hierarchyAble', 'unknown', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 9, 'end': 11}\n                                     text: \"and\"\n                                     types: [\n                                     ]\n                                     word: \"and\"\n                                   }\n    4. unknown/0  (1, 8) - \"line\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 13, 'end': 16}\n                                     text: \"line\"\n                                     unknown: true\n                                     value: \"line\"\n                                     word: \"line\"\n                                   }\n    5. modifies/0  (1, 11) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    6. unknown/0  (1, 13) - \"graph\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"graph\"\n                                     unknown: true\n                                     value: \"graph\"\n                                     word: \"graph\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=2) is Context({marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge)), range: {'start': 5, 'end': 7}, text: bar, unknown: True, value: bar, word: bar})\n\n>>>>>>>>>>>>> Counter 3\n    0. unknown/1 (dead) (2, 0) - \"pie\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 0, 'end': 2}\n                                     text: \"pie\"\n                                     unknown: true\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. comma/0  (1, 1) - \",\"\n                                   {\n                                     depth: \"+\"\n                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 3, 'end': 3}\n                                     text: \",\"\n                                     value: \",\"\n                                     word: \",\"\n                                   }\n   *2. unknown/1 (dead) (2, 1) - \"bar\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 5, 'end': 7}\n                                     text: \"bar\"\n                                     unknown: true\n                                     value: \"bar\"\n                                     word: \"bar\"\n                                   }\n    3. list/0  (1, 5) - \"and\"\n                                   {\n                                     default: true\n                                     marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({'type': ['hierarchyAble', 'unknown', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 9, 'end': 11}\n                                     text: \"and\"\n                                     types: [\n                                     ]\n                                     word: \"and\"\n                                   }\n    4. unknown/0  (1, 8) - \"line\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 13, 'end': 16}\n                                     text: \"line\"\n                                     unknown: true\n                                     value: \"line\"\n                                     word: \"line\"\n                                   }\n    5. modifies/0  (1, 11) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    6. unknown/0  (1, 13) - \"graph\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"graph\"\n                                     unknown: true\n                                     value: \"graph\"\n                                     word: \"graph\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=4) is Context({marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge)), range: {'start': 13, 'end': 16}, text: line, unknown: True, value: line, word: line})\n\n>>>>>>>>>>>>> Counter 4\n    0. unknown/1 (dead) (2, 0) - \"pie\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 0, 'end': 2}\n                                     text: \"pie\"\n                                     unknown: true\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. comma/0  (1, 1) - \",\"\n                                   {\n                                     depth: \"+\"\n                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 3, 'end': 3}\n                                     text: \",\"\n                                     value: \",\"\n                                     word: \",\"\n                                   }\n    2. unknown/1 (dead) (2, 1) - \"bar\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 5, 'end': 7}\n                                     text: \"bar\"\n                                     unknown: true\n                                     value: \"bar\"\n                                     word: \"bar\"\n                                   }\n    3. list/0  (1, 5) - \"and\"\n                                   {\n                                     default: true\n                                     marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({'type': ['hierarchyAble', 'unknown', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 9, 'end': 11}\n                                     text: \"and\"\n                                     types: [\n                                     ]\n                                     word: \"and\"\n                                   }\n   *4. unknown/1 (dead) (2, 2) - \"line\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 13, 'end': 16}\n                                     text: \"line\"\n                                     unknown: true\n                                     value: \"line\"\n                                     word: \"line\"\n                                   }\n    5. modifies/0  (1, 11) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    6. unknown/0  (1, 13) - \"graph\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"graph\"\n                                     unknown: true\n                                     value: \"graph\"\n                                     word: \"graph\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=6) is Context({marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge)), range: {'start': 25, 'end': 29}, text: graph, unknown: True, value: graph, word: graph})\n\n>>>>>>>>>>>>> Counter 5\n    0. unknown/1 (dead) (2, 0) - \"pie\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 0, 'end': 2}\n                                     text: \"pie\"\n                                     unknown: true\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. comma/0  (1, 1) - \",\"\n                                   {\n                                     depth: \"+\"\n                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 3, 'end': 3}\n                                     text: \",\"\n                                     value: \",\"\n                                     word: \",\"\n                                   }\n    2. unknown/1 (dead) (2, 1) - \"bar\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 5, 'end': 7}\n                                     text: \"bar\"\n                                     unknown: true\n                                     value: \"bar\"\n                                     word: \"bar\"\n                                   }\n    3. list/0  (1, 5) - \"and\"\n                                   {\n                                     default: true\n                                     marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({'type': ['hierarchyAble', 'unknown', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 9, 'end': 11}\n                                     text: \"and\"\n                                     types: [\n                                     ]\n                                     word: \"and\"\n                                   }\n    4. unknown/1 (dead) (2, 2) - \"line\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 13, 'end': 16}\n                                     text: \"line\"\n                                     unknown: true\n                                     value: \"line\"\n                                     word: \"line\"\n                                   }\n    5. modifies/0  (1, 11) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n   *6. unknown/1 (dead) (2, 3) - \"graph\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"graph\"\n                                     unknown: true\n                                     value: \"graph\"\n                                     word: \"graph\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=3) is Context({default: True, marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({'type': ['hierarchyAble', 'unknown', 'queryable', 'theAble']}) bridge(bridge)), range: {'start': 9, 'end': 11}, text: and, types: [], word: and})\n\n>>>>>>>>>>>>> Counter 6\n    0. unknown/1 (dead) (2, 0) - \"pie\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 0, 'end': 2}\n                                     text: \"pie\"\n                                     unknown: true\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. comma/0  (1, 1) - \",\"\n                                   {\n                                     depth: \"+\"\n                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 3, 'end': 3}\n                                     text: \",\"\n                                     value: \",\"\n                                     word: \",\"\n                                   }\n   *2. list/1  (3, 0) - \"bar and line\"\n                                   {\n                                     prioritized_by: [('list', 0)]\n                                     default: true\n                                     isList: true\n                                     listable: true\n                                     marker: Operator(list/1, PASS, ['Selector(Bridge(\\'{ ...operator, value: append(before, operator.value) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[], bridge(bridge), passthrough)'], evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['hierarchyAble', 'unknown', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 5, 'end': 16}\n                                     text: \"bar and line\"\n                                     types: [\n                                     ]\n                                     value: [\n                                       {\n                                         prioritized_by: [('unknown', 0)]\n                                         dead: true\n                                         marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                         range: {'start': 5, 'end': 7}\n                                         text: \"bar\"\n                                         unknown: true\n                                         value: \"bar\"\n                                         word: \"bar\"\n                                       }\n\n                                       {\n                                         prioritized_by: [('unknown', 0)]\n                                         dead: true\n                                         marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                         range: {'start': 13, 'end': 16}\n                                         text: \"line\"\n                                         unknown: true\n                                         value: \"line\"\n                                         word: \"line\"\n                                       }\n                                     ]\n                                     word: \"and\"\n                                   }\n    3. modifies/0  (1, 11) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    4. unknown/1 (dead) (2, 3) - \"graph\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"graph\"\n                                     unknown: true\n                                     value: \"graph\"\n                                     word: \"graph\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=1) is Context({depth: +, marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge)), range: {'start': 3, 'end': 3}, text: ,, value: ,, word: ,})\n\n>>>>>>>>>>>>> Counter 7\n   *0. unknown/1 (dead) (3, 1) - \"pie,\"\n                                   {\n                                     prioritized_by: [('comma', 0)]\n                                     dead: true\n                                     decorators:                                          {\n                                           after:                                                {\n                                                 depth: \"+\"\n                                                 marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                                 range: {'start': 3, 'end': 3}\n                                                 text: \",\"\n                                                 value: \",\"\n                                                 word: \",\"\n                                               }\n\n                                         }\n\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     no_convolutions: true\n                                     range: {'start': 0, 'end': 3}\n                                     text: \"pie,\"\n                                     unknown: true\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. list/1  (3, 0) - \"bar and line\"\n                                   {\n                                     prioritized_by: [('list', 0)]\n                                     default: true\n                                     isList: true\n                                     listable: true\n                                     marker: Operator(list/1, PASS, ['Selector(Bridge(\\'{ ...operator, value: append(before, operator.value) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[], bridge(bridge), passthrough)'], evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['hierarchyAble', 'unknown', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 5, 'end': 16}\n                                     text: \"bar and line\"\n                                     types: [\n                                     ]\n                                     value: [\n                                       {\n                                         prioritized_by: [('unknown', 0)]\n                                         dead: true\n                                         marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                         range: {'start': 5, 'end': 7}\n                                         text: \"bar\"\n                                         unknown: true\n                                         value: \"bar\"\n                                         word: \"bar\"\n                                       }\n\n                                       {\n                                         prioritized_by: [('unknown', 0)]\n                                         dead: true\n                                         marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                         range: {'start': 13, 'end': 16}\n                                         text: \"line\"\n                                         unknown: true\n                                         value: \"line\"\n                                         word: \"line\"\n                                       }\n                                     ]\n                                     word: \"and\"\n                                   }\n    2. modifies/0  (1, 11) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    3. unknown/1 (dead) (2, 3) - \"graph\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"graph\"\n                                     unknown: true\n                                     value: \"graph\"\n                                     word: \"graph\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=1) is Context({default: True, isList: True, listable: True, marker: Operator(list/1, PASS, ['Selector(Bridge(\\'{ ...operator, value: append(before, operator.value) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[], bridge(bridge), passthrough)'], evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['hierarchyAble', 'unknown', 'queryable', 'theAble']}) bridge(bridge)), range: {'start': 5, 'end': 16}, text: bar and line, types: [], value: [Context({dead: True, marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), range: {'start': 5, 'end': 7}, text: bar, unknown: True, value: bar, word: bar}), Context({dead: True, marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), range: {'start': 13, 'end': 16}, text: line, unknown: True, value: line, word: line})], word: and})\n\n>>>>>>>>>>>>> Counter 8\n   *0. list/1  (4, 0) - \"pie, bar and line\"\n                                   {\n                                     prioritized_by: [('list', 1)]\n                                     default: true\n                                     isList: true\n                                     listable: true\n                                     marker: Operator(list/1, PASS, ['Selector(Bridge(\\'{ ...operator, value: append(before, operator.value) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[], bridge(bridge), passthrough)'], evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['hierarchyAble', 'unknown', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 0, 'end': 16}\n                                     text: \"pie, bar and line\"\n                                     types: [\n                                     ]\n                                     value: [\n                                       {\n                                         prioritized_by: [('comma', 0)]\n                                         dead: true\n                                         decorators:                                              {\n                                               after:                                                    {\n                                                     depth: \"+\"\n                                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                                     range: {'start': 3, 'end': 3}\n                                                     text: \",\"\n                                                     value: \",\"\n                                                     word: \",\"\n                                                   }\n\n                                             }\n\n                                         marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                         no_convolutions: true\n                                         range: {'start': 0, 'end': 3}\n                                         text: \"pie,\"\n                                         unknown: true\n                                         value: \"pie\"\n                                         word: \"pie\"\n                                       }\n\n                                       {\n                                         prioritized_by: [('unknown', 0)]\n                                         dead: true\n                                         marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                         range: {'start': 5, 'end': 7}\n                                         text: \"bar\"\n                                         unknown: true\n                                         value: \"bar\"\n                                         word: \"bar\"\n                                       }\n\n                                       {\n                                         prioritized_by: [('unknown', 0)]\n                                         dead: true\n                                         marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                         range: {'start': 13, 'end': 16}\n                                         text: \"line\"\n                                         unknown: true\n                                         value: \"line\"\n                                         word: \"line\"\n                                       }\n                                     ]\n                                     word: \"and\"\n                                   }\n    1. modifies/0  (1, 11) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    2. unknown/1 (dead) (2, 3) - \"graph\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"graph\"\n                                     unknown: true\n                                     value: \"graph\"\n                                     word: \"graph\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=1) is Context({flatten: True, marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge)), number: many, range: {'start': 18, 'end': 23}, text: modify, word: modify})\n\n>>>>>>>>>>>>> Counter 9\n   *0. modifies/1 (dead) (5, 0) - \"pie, bar and line modify graph\"\n                                   {\n                                     prioritized_by: [('modifies', 0)]\n                                     concept:                                          {\n                                           prioritized_by: [('unknown', 0)]\n                                           dead: true\n                                           marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                           range: {'start': 25, 'end': 29}\n                                           text: \"graph\"\n                                           unknown: true\n                                           value: \"graph\"\n                                           word: \"graph\"\n                                         }\n\n                                     dead: true\n                                     flatten: true\n                                     marker: Operator(modifies/1, ['Selector(None, , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                     modifiers: [\n                                       {\n                                         prioritized_by: [('list', 1)]\n                                         default: true\n                                         isList: true\n                                         listable: true\n                                         marker: Operator(list/1, PASS, ['Selector(Bridge(\\'{ ...operator, value: append(before, operator.value) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[], bridge(bridge), passthrough)'], evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['hierarchyAble', 'unknown', 'queryable', 'theAble']}) bridge(bridge))\n                                         range: {'start': 0, 'end': 16}\n                                         text: \"pie, bar and line\"\n                                         types: [\n                                         ]\n                                         value: [\n                                           {\n                                             prioritized_by: [('comma', 0)]\n                                             dead: true\n                                             decorators:                                                  {\n                                                   after:                                                        {\n                                                         depth: \"+\"\n                                                         marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                                         range: {'start': 3, 'end': 3}\n                                                         text: \",\"\n                                                         value: \",\"\n                                                         word: \",\"\n                                                       }\n\n                                                 }\n\n                                             marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                             no_convolutions: true\n                                             range: {'start': 0, 'end': 3}\n                                             text: \"pie,\"\n                                             unknown: true\n                                             value: \"pie\"\n                                             word: \"pie\"\n                                           }\n\n                                           {\n                                             prioritized_by: [('unknown', 0)]\n                                             dead: true\n                                             marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                             range: {'start': 5, 'end': 7}\n                                             text: \"bar\"\n                                             unknown: true\n                                             value: \"bar\"\n                                             word: \"bar\"\n                                           }\n\n                                           {\n                                             prioritized_by: [('unknown', 0)]\n                                             dead: true\n                                             marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                             range: {'start': 13, 'end': 16}\n                                             text: \"line\"\n                                             unknown: true\n                                             value: \"line\"\n                                             word: \"line\"\n                                           }\n                                         ]\n                                         word: \"and\"\n                                       }\n                                     ]\n                                     number: \"many\"\n                                     range: {'start': 0, 'end': 29}\n                                     text: \"pie, bar and line modify graph\"\n                                     word: \"modify\"\n                                   }\n<<<<<<<<<<<<<\n",
      "contexts": [
        {
          "word": "modify",
          "number": "many",
          "flatten": true,
          "text": "pie, bar and line modify graph",
          "marker": "modifies",
          "range": {
            "start": 0,
            "end": 29
          },
          "dead": true,
          "modifiers": [
            {
              "marker": "list",
              "default": true,
              "word": "and",
              "text": "pie, bar and line",
              "range": {
                "start": 0,
                "end": 16
              },
              "types": [
                "list"
              ],
              "listable": true,
              "isList": true,
              "value": [
                {
                  "value": "pie",
                  "unknown": true,
                  "text": "pie,",
                  "marker": "unknown",
                  "word": "pie",
                  "range": {
                    "start": 0,
                    "end": 3
                  },
                  "dead": true,
                  "decorators": {
                    "after": {
                      "word": ",",
                      "value": ",",
                      "depth": "+",
                      "text": ",",
                      "marker": "comma",
                      "range": {
                        "start": 3,
                        "end": 3
                      },
                      "level": 0
                    }
                  },
                  "no_convolutions": true,
                  "level": 1
                },
                {
                  "value": "bar",
                  "unknown": true,
                  "text": "bar",
                  "marker": "unknown",
                  "word": "bar",
                  "range": {
                    "start": 5,
                    "end": 7
                  },
                  "dead": true,
                  "level": 1
                },
                {
                  "value": "line",
                  "unknown": true,
                  "text": "line",
                  "marker": "unknown",
                  "word": "line",
                  "range": {
                    "start": 13,
                    "end": 16
                  },
                  "dead": true,
                  "level": 1
                }
              ],
              "level": 1
            }
          ],
          "concept": {
            "value": "graph",
            "unknown": true,
            "text": "graph",
            "marker": "unknown",
            "word": "graph",
            "range": {
              "start": 25,
              "end": 29
            },
            "dead": true,
            "level": 1
          },
          "level": 1,
          "topLevel": true,
          "touchedBy": [
            "mongo#call2",
            "instance0#mongo#call2"
          ]
        }
      ],
      "generated": [
        ""
      ],
      "paraphrases": [
        "pie, bar and line modifies graph"
      ],
      "paraphrasesParenthesized": [],
      "generatedParenthesized": [],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "comma",
            0
          ],
          [
            "list",
            0
          ],
          [
            "modifies",
            0
          ],
          [
            "unknown",
            0
          ]
        ],
        [
          [
            "comma",
            0
          ],
          [
            "list",
            0
          ],
          [
            "modifies",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "comma",
            0
          ],
          [
            "list",
            0
          ],
          [
            "modifies",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "comma",
            0
          ],
          [
            "list",
            1
          ],
          [
            "modifies",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "list",
            1
          ],
          [
            "modifies",
            0
          ],
          [
            "unknown",
            1
          ]
        ]
      ],
      "learned_contextual_priorities": [],
      "query": "pie, bar and line modify graph",
      "key": {
        "query": "pie, bar and line modify graph"
      }
    },
    {
      "hierarchy": [
        [
          "a",
          "articlePOS",
          false
        ],
        [
          "action",
          "action",
          false
        ],
        [
          "adjective",
          "adjective",
          false
        ],
        [
          "all",
          "quantifier",
          false
        ],
        [
          "aqua_colors",
          "blue_colors",
          false
        ],
        [
          "aqua_colors",
          "hierarchyAble",
          false
        ],
        [
          "aqua_colors",
          "isEdee",
          false
        ],
        [
          "aqua_colors",
          "isEder",
          false
        ],
        [
          "aqua_colors",
          "object",
          false
        ],
        [
          "aqua_colors",
          "property",
          false
        ],
        [
          "aqua_colors",
          "queryable",
          false
        ],
        [
          "aqua_colors",
          "theAble",
          false
        ],
        [
          "aquamarine_colors",
          "blue_colors",
          false
        ],
        [
          "aquamarine_colors",
          "hierarchyAble",
          false
        ],
        [
          "aquamarine_colors",
          "isEdee",
          false
        ],
        [
          "aquamarine_colors",
          "isEder",
          false
        ],
        [
          "aquamarine_colors",
          "object",
          false
        ],
        [
          "aquamarine_colors",
          "property",
          false
        ],
        [
          "aquamarine_colors",
          "queryable",
          false
        ],
        [
          "aquamarine_colors",
          "theAble",
          false
        ],
        [
          "articlePOS",
          "articlePOS",
          false
        ],
        [
          "ascending",
          "hierarchyAble",
          false
        ],
        [
          "ascending",
          "isEdee",
          false
        ],
        [
          "ascending",
          "isEder",
          false
        ],
        [
          "ascending",
          "object",
          false
        ],
        [
          "ascending",
          "property",
          false
        ],
        [
          "ascending",
          "queryable",
          false
        ],
        [
          "ascending",
          "sort_ordering",
          false
        ],
        [
          "ascending",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "hierarchyAble",
          false
        ],
        [
          "azure_colors",
          "isEdee",
          false
        ],
        [
          "azure_colors",
          "isEder",
          false
        ],
        [
          "azure_colors",
          "object",
          false
        ],
        [
          "azure_colors",
          "property",
          false
        ],
        [
          "azure_colors",
          "queryable",
          false
        ],
        [
          "azure_colors",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "white_colors",
          false
        ],
        [
          "bar",
          "graph_modifier",
          false
        ],
        [
          "bar",
          "hierarchyAble",
          false
        ],
        [
          "bar",
          "isEdee",
          false
        ],
        [
          "bar",
          "isEder",
          false
        ],
        [
          "bar",
          "object",
          false
        ],
        [
          "bar",
          "property",
          false
        ],
        [
          "bar",
          "queryable",
          false
        ],
        [
          "bar",
          "theAble",
          false
        ],
        [
          "bar_graph",
          "adjective",
          true
        ],
        [
          "bar_graph",
          "concept",
          false
        ],
        [
          "bar_graph",
          "graph",
          false
        ],
        [
          "bar_graph",
          "hierarchyAble",
          false
        ],
        [
          "bar_graph",
          "isEdee",
          false
        ],
        [
          "bar_graph",
          "isEder",
          false
        ],
        [
          "bar_graph",
          "object",
          false
        ],
        [
          "bar_graph",
          "property",
          false
        ],
        [
          "bar_graph",
          "queryable",
          false
        ],
        [
          "bar_graph",
          "theAble",
          false
        ],
        [
          "beige_colors",
          "hierarchyAble",
          false
        ],
        [
          "beige_colors",
          "isEdee",
          false
        ],
        [
          "beige_colors",
          "isEder",
          false
        ],
        [
          "beige_colors",
          "object",
          false
        ],
        [
          "beige_colors",
          "property",
          false
        ],
        [
          "beige_colors",
          "queryable",
          false
        ],
        [
          "beige_colors",
          "theAble",
          false
        ],
        [
          "beige_colors",
          "white_colors",
          false
        ],
        [
          "between",
          "preposition",
          false
        ],
        [
          "black_colors",
          "gray_colors",
          false
        ],
        [
          "black_colors",
          "hierarchyAble",
          false
        ],
        [
          "black_colors",
          "isEdee",
          false
        ],
        [
          "black_colors",
          "isEder",
          false
        ],
        [
          "black_colors",
          "object",
          false
        ],
        [
          "black_colors",
          "property",
          false
        ],
        [
          "black_colors",
          "queryable",
          false
        ],
        [
          "black_colors",
          "theAble",
          false
        ],
        [
          "blue_colors",
          "color_colors",
          false
        ],
        [
          "blue_colors",
          "hierarchyAble",
          false
        ],
        [
          "blue_colors",
          "isEdee",
          false
        ],
        [
          "blue_colors",
          "isEder",
          false
        ],
        [
          "blue_colors",
          "object",
          false
        ],
        [
          "blue_colors",
          "property",
          false
        ],
        [
          "blue_colors",
          "queryable",
          false
        ],
        [
          "blue_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors",
          "color_colors_modifier",
          false
        ],
        [
          "brightness_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors",
          "object",
          false
        ],
        [
          "brightness_colors",
          "property",
          false
        ],
        [
          "brightness_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "adjective",
          true
        ],
        [
          "brightness_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "brightness_colors_color_colors",
          "concept",
          false
        ],
        [
          "brightness_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors_color_colors",
          "object",
          false
        ],
        [
          "brightness_colors_color_colors",
          "property",
          false
        ],
        [
          "brightness_colors_color_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors_color_colors",
          "theAble",
          false
        ],
        [
          "brown_colors",
          "color_colors",
          false
        ],
        [
          "brown_colors",
          "hierarchyAble",
          false
        ],
        [
          "brown_colors",
          "isEdee",
          false
        ],
        [
          "brown_colors",
          "isEder",
          false
        ],
        [
          "brown_colors",
          "object",
          false
        ],
        [
          "brown_colors",
          "property",
          false
        ],
        [
          "brown_colors",
          "queryable",
          false
        ],
        [
          "brown_colors",
          "theAble",
          false
        ],
        [
          "call",
          "verb",
          false
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion",
          false
        ],
        [
          "canBeQuestion",
          "canBeQuestion",
          false
        ],
        [
          "cancel",
          "verb",
          false
        ],
        [
          "chartruese_colors",
          "green_colors",
          false
        ],
        [
          "chartruese_colors",
          "hierarchyAble",
          false
        ],
        [
          "chartruese_colors",
          "isEdee",
          false
        ],
        [
          "chartruese_colors",
          "isEder",
          false
        ],
        [
          "chartruese_colors",
          "object",
          false
        ],
        [
          "chartruese_colors",
          "property",
          false
        ],
        [
          "chartruese_colors",
          "queryable",
          false
        ],
        [
          "chartruese_colors",
          "theAble",
          false
        ],
        [
          "color_colors",
          "concept",
          false
        ],
        [
          "color_colors",
          "hierarchyAble",
          false
        ],
        [
          "color_colors",
          "isEdee",
          false
        ],
        [
          "color_colors",
          "isEder",
          false
        ],
        [
          "color_colors",
          "object",
          false
        ],
        [
          "color_colors",
          "property",
          false
        ],
        [
          "color_colors",
          "queryable",
          false
        ],
        [
          "color_colors",
          "theAble",
          false
        ],
        [
          "color_colors_modifier",
          "color_colors_modifier",
          false
        ],
        [
          "concept",
          "queryable",
          false
        ],
        [
          "concept",
          "theAble",
          false
        ],
        [
          "condition",
          "condition",
          false
        ],
        [
          "countable",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "isEdee",
          false
        ],
        [
          "crimson_colors",
          "isEder",
          false
        ],
        [
          "crimson_colors",
          "object",
          false
        ],
        [
          "crimson_colors",
          "property",
          false
        ],
        [
          "crimson_colors",
          "queryable",
          false
        ],
        [
          "crimson_colors",
          "red_colors",
          false
        ],
        [
          "crimson_colors",
          "theAble",
          false
        ],
        [
          "cyan_colors",
          "blue_colors",
          false
        ],
        [
          "cyan_colors",
          "hierarchyAble",
          false
        ],
        [
          "cyan_colors",
          "isEdee",
          false
        ],
        [
          "cyan_colors",
          "isEder",
          false
        ],
        [
          "cyan_colors",
          "object",
          false
        ],
        [
          "cyan_colors",
          "property",
          false
        ],
        [
          "cyan_colors",
          "queryable",
          false
        ],
        [
          "cyan_colors",
          "theAble",
          false
        ],
        [
          "dark_colors",
          "brightness_colors",
          false
        ],
        [
          "dark_colors",
          "hierarchyAble",
          false
        ],
        [
          "dark_colors",
          "isEdee",
          false
        ],
        [
          "dark_colors",
          "isEder",
          false
        ],
        [
          "dark_colors",
          "object",
          false
        ],
        [
          "dark_colors",
          "property",
          false
        ],
        [
          "dark_colors",
          "queryable",
          false
        ],
        [
          "dark_colors",
          "theAble",
          false
        ],
        [
          "descending",
          "hierarchyAble",
          false
        ],
        [
          "descending",
          "isEdee",
          false
        ],
        [
          "descending",
          "isEder",
          false
        ],
        [
          "descending",
          "object",
          false
        ],
        [
          "descending",
          "property",
          false
        ],
        [
          "descending",
          "queryable",
          false
        ],
        [
          "descending",
          "sort_ordering",
          false
        ],
        [
          "descending",
          "theAble",
          false
        ],
        [
          "direction",
          "direction",
          false
        ],
        [
          "divideByExpression",
          "mathematicalExpression",
          false
        ],
        [
          "divideByOperator",
          "mathematical_operator",
          false
        ],
        [
          "doubleQuote",
          "queryable",
          false
        ],
        [
          "down",
          "direction",
          false
        ],
        [
          "evaluate",
          "verb",
          false
        ],
        [
          "gold_colors",
          "hierarchyAble",
          false
        ],
        [
          "gold_colors",
          "isEdee",
          false
        ],
        [
          "gold_colors",
          "isEder",
          false
        ],
        [
          "gold_colors",
          "object",
          false
        ],
        [
          "gold_colors",
          "property",
          false
        ],
        [
          "gold_colors",
          "queryable",
          false
        ],
        [
          "gold_colors",
          "theAble",
          false
        ],
        [
          "gold_colors",
          "yellow_colors",
          false
        ],
        [
          "graph",
          "concept",
          false
        ],
        [
          "graph",
          "hierarchyAble",
          false
        ],
        [
          "graph",
          "isEdee",
          false
        ],
        [
          "graph",
          "isEder",
          false
        ],
        [
          "graph",
          "object",
          false
        ],
        [
          "graph",
          "property",
          false
        ],
        [
          "graph",
          "queryable",
          false
        ],
        [
          "graph",
          "theAble",
          false
        ],
        [
          "graph_modifier",
          "graph_modifier",
          false
        ],
        [
          "gray_colors",
          "color_colors",
          false
        ],
        [
          "gray_colors",
          "hierarchyAble",
          false
        ],
        [
          "gray_colors",
          "isEdee",
          false
        ],
        [
          "gray_colors",
          "isEder",
          false
        ],
        [
          "gray_colors",
          "object",
          false
        ],
        [
          "gray_colors",
          "property",
          false
        ],
        [
          "gray_colors",
          "queryable",
          false
        ],
        [
          "gray_colors",
          "theAble",
          false
        ],
        [
          "green_colors",
          "color_colors",
          false
        ],
        [
          "green_colors",
          "hierarchyAble",
          false
        ],
        [
          "green_colors",
          "isEdee",
          false
        ],
        [
          "green_colors",
          "isEder",
          false
        ],
        [
          "green_colors",
          "object",
          false
        ],
        [
          "green_colors",
          "property",
          false
        ],
        [
          "green_colors",
          "queryable",
          false
        ],
        [
          "green_colors",
          "theAble",
          false
        ],
        [
          "hasCountOfPieces",
          "countable",
          false
        ],
        [
          "have",
          "canBeDoQuestion",
          false
        ],
        [
          "have",
          "canBeQuestion",
          false
        ],
        [
          "hex_colors",
          "color_colors_modifier",
          false
        ],
        [
          "hex_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors",
          "isEder",
          false
        ],
        [
          "hex_colors",
          "object",
          false
        ],
        [
          "hex_colors",
          "property",
          false
        ],
        [
          "hex_colors",
          "queryable",
          false
        ],
        [
          "hex_colors",
          "theAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "adjective",
          true
        ],
        [
          "hex_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "hex_colors_color_colors",
          "concept",
          false
        ],
        [
          "hex_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEder",
          false
        ],
        [
          "hex_colors_color_colors",
          "object",
          false
        ],
        [
          "hex_colors_color_colors",
          "property",
          false
        ],
        [
          "hex_colors_color_colors",
          "queryable",
          false
        ],
        [
          "hex_colors_color_colors",
          "theAble",
          false
        ],
        [
          "hierarchyAble",
          "queryable",
          false
        ],
        [
          "highest",
          "condition",
          false
        ],
        [
          "ifAble",
          "ifAble",
          false
        ],
        [
          "indigo_colors",
          "hierarchyAble",
          false
        ],
        [
          "indigo_colors",
          "isEdee",
          false
        ],
        [
          "indigo_colors",
          "isEder",
          false
        ],
        [
          "indigo_colors",
          "object",
          false
        ],
        [
          "indigo_colors",
          "property",
          false
        ],
        [
          "indigo_colors",
          "purple_colors",
          false
        ],
        [
          "indigo_colors",
          "queryable",
          false
        ],
        [
          "indigo_colors",
          "theAble",
          false
        ],
        [
          "is",
          "canBeQuestion",
          false
        ],
        [
          "is",
          "verb",
          false
        ],
        [
          "isEdee",
          "isEdee",
          false
        ],
        [
          "isEder",
          "isEder",
          false
        ],
        [
          "it",
          "pronoun",
          false
        ],
        [
          "it",
          "queryable",
          false
        ],
        [
          "it",
          "thisitthat",
          false
        ],
        [
          "it",
          "toAble",
          false
        ],
        [
          "ivory_colors",
          "hierarchyAble",
          false
        ],
        [
          "ivory_colors",
          "isEdee",
          false
        ],
        [
          "ivory_colors",
          "isEder",
          false
        ],
        [
          "ivory_colors",
          "object",
          false
        ],
        [
          "ivory_colors",
          "property",
          false
        ],
        [
          "ivory_colors",
          "queryable",
          false
        ],
        [
          "ivory_colors",
          "theAble",
          false
        ],
        [
          "ivory_colors",
          "white_colors",
          false
        ],
        [
          "khaki_colors",
          "hierarchyAble",
          false
        ],
        [
          "khaki_colors",
          "isEdee",
          false
        ],
        [
          "khaki_colors",
          "isEder",
          false
        ],
        [
          "khaki_colors",
          "object",
          false
        ],
        [
          "khaki_colors",
          "property",
          false
        ],
        [
          "khaki_colors",
          "queryable",
          false
        ],
        [
          "khaki_colors",
          "theAble",
          false
        ],
        [
          "khaki_colors",
          "yellow_colors",
          false
        ],
        [
          "lavender_colors",
          "hierarchyAble",
          false
        ],
        [
          "lavender_colors",
          "isEdee",
          false
        ],
        [
          "lavender_colors",
          "isEder",
          false
        ],
        [
          "lavender_colors",
          "object",
          false
        ],
        [
          "lavender_colors",
          "property",
          false
        ],
        [
          "lavender_colors",
          "purple_colors",
          false
        ],
        [
          "lavender_colors",
          "queryable",
          false
        ],
        [
          "lavender_colors",
          "theAble",
          false
        ],
        [
          "left",
          "direction",
          false
        ],
        [
          "light_colors",
          "brightness_colors",
          false
        ],
        [
          "light_colors",
          "hierarchyAble",
          false
        ],
        [
          "light_colors",
          "isEdee",
          false
        ],
        [
          "light_colors",
          "isEder",
          false
        ],
        [
          "light_colors",
          "object",
          false
        ],
        [
          "light_colors",
          "property",
          false
        ],
        [
          "light_colors",
          "queryable",
          false
        ],
        [
          "light_colors",
          "theAble",
          false
        ],
        [
          "lime_colors",
          "green_colors",
          false
        ],
        [
          "lime_colors",
          "hierarchyAble",
          false
        ],
        [
          "lime_colors",
          "isEdee",
          false
        ],
        [
          "lime_colors",
          "isEder",
          false
        ],
        [
          "lime_colors",
          "object",
          false
        ],
        [
          "lime_colors",
          "property",
          false
        ],
        [
          "lime_colors",
          "queryable",
          false
        ],
        [
          "lime_colors",
          "theAble",
          false
        ],
        [
          "line",
          "graph_modifier",
          false
        ],
        [
          "line",
          "hierarchyAble",
          false
        ],
        [
          "line",
          "isEdee",
          false
        ],
        [
          "line",
          "isEder",
          false
        ],
        [
          "line",
          "object",
          false
        ],
        [
          "line",
          "property",
          false
        ],
        [
          "line",
          "queryable",
          false
        ],
        [
          "line",
          "theAble",
          false
        ],
        [
          "line_graph",
          "adjective",
          true
        ],
        [
          "line_graph",
          "concept",
          false
        ],
        [
          "line_graph",
          "graph",
          false
        ],
        [
          "line_graph",
          "hierarchyAble",
          false
        ],
        [
          "line_graph",
          "isEdee",
          false
        ],
        [
          "line_graph",
          "isEder",
          false
        ],
        [
          "line_graph",
          "object",
          false
        ],
        [
          "line_graph",
          "property",
          false
        ],
        [
          "line_graph",
          "queryable",
          false
        ],
        [
          "line_graph",
          "theAble",
          false
        ],
        [
          "listening",
          "action",
          false
        ],
        [
          "lowest",
          "condition",
          false
        ],
        [
          "magenta_colors",
          "hierarchyAble",
          false
        ],
        [
          "magenta_colors",
          "isEdee",
          false
        ],
        [
          "magenta_colors",
          "isEder",
          false
        ],
        [
          "magenta_colors",
          "object",
          false
        ],
        [
          "magenta_colors",
          "property",
          false
        ],
        [
          "magenta_colors",
          "purple_colors",
          false
        ],
        [
          "magenta_colors",
          "queryable",
          false
        ],
        [
          "magenta_colors",
          "theAble",
          false
        ],
        [
          "maroon_colors",
          "brown_colors",
          false
        ],
        [
          "maroon_colors",
          "hierarchyAble",
          false
        ],
        [
          "maroon_colors",
          "isEdee",
          false
        ],
        [
          "maroon_colors",
          "isEder",
          false
        ],
        [
          "maroon_colors",
          "object",
          false
        ],
        [
          "maroon_colors",
          "property",
          false
        ],
        [
          "maroon_colors",
          "queryable",
          false
        ],
        [
          "maroon_colors",
          "theAble",
          false
        ],
        [
          "mathematical",
          "hierarchyAble",
          false
        ],
        [
          "mathematical",
          "isEdee",
          false
        ],
        [
          "mathematical",
          "isEder",
          false
        ],
        [
          "mathematical",
          "object",
          false
        ],
        [
          "mathematical",
          "operator_modifier",
          false
        ],
        [
          "mathematical",
          "property",
          false
        ],
        [
          "mathematical",
          "queryable",
          false
        ],
        [
          "mathematical",
          "theAble",
          false
        ],
        [
          "mathematicalExpression",
          "concept",
          false
        ],
        [
          "mathematicalExpression",
          "number",
          false
        ],
        [
          "mathematical_operator",
          "adjective",
          true
        ],
        [
          "mathematical_operator",
          "concept",
          false
        ],
        [
          "mathematical_operator",
          "hierarchyAble",
          false
        ],
        [
          "mathematical_operator",
          "isEdee",
          false
        ],
        [
          "mathematical_operator",
          "isEder",
          false
        ],
        [
          "mathematical_operator",
          "object",
          false
        ],
        [
          "mathematical_operator",
          "operator",
          false
        ],
        [
          "mathematical_operator",
          "property",
          false
        ],
        [
          "mathematical_operator",
          "queryable",
          false
        ],
        [
          "mathematical_operator",
          "theAble",
          false
        ],
        [
          "memorable",
          "theAble",
          false
        ],
        [
          "minusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "minusOperator",
          "mathematical_operator",
          false
        ],
        [
          "modifies",
          "verb",
          false
        ],
        [
          "move",
          "verb",
          false
        ],
        [
          "moveAmount",
          "preposition",
          false
        ],
        [
          "navy_colors",
          "blue_colors",
          false
        ],
        [
          "navy_colors",
          "hierarchyAble",
          false
        ],
        [
          "navy_colors",
          "isEdee",
          false
        ],
        [
          "navy_colors",
          "isEder",
          false
        ],
        [
          "navy_colors",
          "object",
          false
        ],
        [
          "navy_colors",
          "property",
          false
        ],
        [
          "navy_colors",
          "queryable",
          false
        ],
        [
          "navy_colors",
          "theAble",
          false
        ],
        [
          "noun",
          "theAble",
          false
        ],
        [
          "number",
          "quantifier",
          false
        ],
        [
          "number",
          "queryable",
          false
        ],
        [
          "object",
          "queryable",
          false
        ],
        [
          "object",
          "theAble",
          false
        ],
        [
          "olive_colors",
          "green_colors",
          false
        ],
        [
          "olive_colors",
          "hierarchyAble",
          false
        ],
        [
          "olive_colors",
          "isEdee",
          false
        ],
        [
          "olive_colors",
          "isEder",
          false
        ],
        [
          "olive_colors",
          "object",
          false
        ],
        [
          "olive_colors",
          "property",
          false
        ],
        [
          "olive_colors",
          "queryable",
          false
        ],
        [
          "olive_colors",
          "theAble",
          false
        ],
        [
          "operator",
          "concept",
          false
        ],
        [
          "operator",
          "hierarchyAble",
          false
        ],
        [
          "operator",
          "isEdee",
          false
        ],
        [
          "operator",
          "isEder",
          false
        ],
        [
          "operator",
          "object",
          false
        ],
        [
          "operator",
          "property",
          false
        ],
        [
          "operator",
          "queryable",
          false
        ],
        [
          "operator",
          "theAble",
          false
        ],
        [
          "operator_modifier",
          "operator_modifier",
          false
        ],
        [
          "orAble",
          "ifAble",
          false
        ],
        [
          "orange_colors",
          "color_colors",
          false
        ],
        [
          "orange_colors",
          "hierarchyAble",
          false
        ],
        [
          "orange_colors",
          "isEdee",
          false
        ],
        [
          "orange_colors",
          "isEder",
          false
        ],
        [
          "orange_colors",
          "object",
          false
        ],
        [
          "orange_colors",
          "property",
          false
        ],
        [
          "orange_colors",
          "queryable",
          false
        ],
        [
          "orange_colors",
          "theAble",
          false
        ],
        [
          "ordering",
          "concept",
          false
        ],
        [
          "ordering",
          "hierarchyAble",
          false
        ],
        [
          "ordering",
          "isEdee",
          false
        ],
        [
          "ordering",
          "isEder",
          false
        ],
        [
          "ordering",
          "object",
          false
        ],
        [
          "ordering",
          "property",
          false
        ],
        [
          "ordering",
          "queryable",
          false
        ],
        [
          "ordering",
          "theAble",
          false
        ],
        [
          "ordering_modifier",
          "ordering_modifier",
          false
        ],
        [
          "ordinal",
          "number",
          false
        ],
        [
          "ordinalOnOrdered",
          "adjective",
          false
        ],
        [
          "pie",
          "graph_modifier",
          false
        ],
        [
          "pie",
          "hierarchyAble",
          false
        ],
        [
          "pie",
          "isEdee",
          false
        ],
        [
          "pie",
          "isEder",
          false
        ],
        [
          "pie",
          "object",
          false
        ],
        [
          "pie",
          "property",
          false
        ],
        [
          "pie",
          "queryable",
          false
        ],
        [
          "pie",
          "theAble",
          false
        ],
        [
          "pie_graph",
          "adjective",
          true
        ],
        [
          "pie_graph",
          "concept",
          false
        ],
        [
          "pie_graph",
          "graph",
          false
        ],
        [
          "pie_graph",
          "hierarchyAble",
          false
        ],
        [
          "pie_graph",
          "isEdee",
          false
        ],
        [
          "pie_graph",
          "isEder",
          false
        ],
        [
          "pie_graph",
          "object",
          false
        ],
        [
          "pie_graph",
          "property",
          false
        ],
        [
          "pie_graph",
          "queryable",
          false
        ],
        [
          "pie_graph",
          "theAble",
          false
        ],
        [
          "pink_colors",
          "color_colors",
          false
        ],
        [
          "pink_colors",
          "hierarchyAble",
          false
        ],
        [
          "pink_colors",
          "isEdee",
          false
        ],
        [
          "pink_colors",
          "isEder",
          false
        ],
        [
          "pink_colors",
          "object",
          false
        ],
        [
          "pink_colors",
          "property",
          false
        ],
        [
          "pink_colors",
          "queryable",
          false
        ],
        [
          "pink_colors",
          "theAble",
          false
        ],
        [
          "plusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "plusOperator",
          "mathematical_operator",
          false
        ],
        [
          "preposition",
          "preposition",
          false
        ],
        [
          "pronoun",
          "pronoun",
          false
        ],
        [
          "property",
          "queryable",
          false
        ],
        [
          "property",
          "theAble",
          false
        ],
        [
          "punctuation",
          "punctuation",
          false
        ],
        [
          "purple_colors",
          "color_colors",
          false
        ],
        [
          "purple_colors",
          "hierarchyAble",
          false
        ],
        [
          "purple_colors",
          "isEdee",
          false
        ],
        [
          "purple_colors",
          "isEder",
          false
        ],
        [
          "purple_colors",
          "object",
          false
        ],
        [
          "purple_colors",
          "property",
          false
        ],
        [
          "purple_colors",
          "queryable",
          false
        ],
        [
          "purple_colors",
          "theAble",
          false
        ],
        [
          "quantifier",
          "quantifier",
          false
        ],
        [
          "queryable",
          "queryable",
          false
        ],
        [
          "questionMark",
          "punctuation",
          false
        ],
        [
          "readonly",
          "queryable",
          false
        ],
        [
          "reason",
          "queryable",
          false
        ],
        [
          "reason",
          "theAble",
          false
        ],
        [
          "red_colors",
          "color_colors",
          false
        ],
        [
          "red_colors",
          "hierarchyAble",
          false
        ],
        [
          "red_colors",
          "isEdee",
          false
        ],
        [
          "red_colors",
          "isEder",
          false
        ],
        [
          "red_colors",
          "object",
          false
        ],
        [
          "red_colors",
          "property",
          false
        ],
        [
          "red_colors",
          "queryable",
          false
        ],
        [
          "red_colors",
          "theAble",
          false
        ],
        [
          "remember",
          "verb",
          false
        ],
        [
          "reportable",
          "concept",
          false
        ],
        [
          "reportable",
          "hierarchyAble",
          false
        ],
        [
          "reportable",
          "isEdee",
          false
        ],
        [
          "reportable",
          "isEder",
          false
        ],
        [
          "reportable",
          "object",
          false
        ],
        [
          "reportable",
          "property",
          false
        ],
        [
          "reportable",
          "queryable",
          false
        ],
        [
          "reportable",
          "theAble",
          false
        ],
        [
          "right",
          "direction",
          false
        ],
        [
          "select",
          "verb",
          false
        ],
        [
          "sienna_colors",
          "brown_colors",
          false
        ],
        [
          "sienna_colors",
          "hierarchyAble",
          false
        ],
        [
          "sienna_colors",
          "isEdee",
          false
        ],
        [
          "sienna_colors",
          "isEder",
          false
        ],
        [
          "sienna_colors",
          "object",
          false
        ],
        [
          "sienna_colors",
          "property",
          false
        ],
        [
          "sienna_colors",
          "queryable",
          false
        ],
        [
          "sienna_colors",
          "theAble",
          false
        ],
        [
          "silver_colors",
          "gray_colors",
          false
        ],
        [
          "silver_colors",
          "hierarchyAble",
          false
        ],
        [
          "silver_colors",
          "isEdee",
          false
        ],
        [
          "silver_colors",
          "isEder",
          false
        ],
        [
          "silver_colors",
          "object",
          false
        ],
        [
          "silver_colors",
          "property",
          false
        ],
        [
          "silver_colors",
          "queryable",
          false
        ],
        [
          "silver_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "hierarchyAble",
          false
        ],
        [
          "snow_colors",
          "isEdee",
          false
        ],
        [
          "snow_colors",
          "isEder",
          false
        ],
        [
          "snow_colors",
          "object",
          false
        ],
        [
          "snow_colors",
          "property",
          false
        ],
        [
          "snow_colors",
          "queryable",
          false
        ],
        [
          "snow_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "white_colors",
          false
        ],
        [
          "sort",
          "hierarchyAble",
          false
        ],
        [
          "sort",
          "isEdee",
          false
        ],
        [
          "sort",
          "isEder",
          false
        ],
        [
          "sort",
          "object",
          false
        ],
        [
          "sort",
          "ordering_modifier",
          false
        ],
        [
          "sort",
          "property",
          false
        ],
        [
          "sort",
          "queryable",
          false
        ],
        [
          "sort",
          "theAble",
          false
        ],
        [
          "sortOrdering",
          "adjective",
          false
        ],
        [
          "sort_ordering",
          "adjective",
          true
        ],
        [
          "sort_ordering",
          "concept",
          false
        ],
        [
          "sort_ordering",
          "hierarchyAble",
          false
        ],
        [
          "sort_ordering",
          "isEdee",
          false
        ],
        [
          "sort_ordering",
          "isEder",
          false
        ],
        [
          "sort_ordering",
          "object",
          false
        ],
        [
          "sort_ordering",
          "ordering",
          false
        ],
        [
          "sort_ordering",
          "property",
          false
        ],
        [
          "sort_ordering",
          "queryable",
          false
        ],
        [
          "sort_ordering",
          "theAble",
          false
        ],
        [
          "stm_before",
          "adjective",
          false
        ],
        [
          "stop",
          "verb",
          false
        ],
        [
          "tan_colors",
          "brown_colors",
          false
        ],
        [
          "tan_colors",
          "hierarchyAble",
          false
        ],
        [
          "tan_colors",
          "isEdee",
          false
        ],
        [
          "tan_colors",
          "isEder",
          false
        ],
        [
          "tan_colors",
          "object",
          false
        ],
        [
          "tan_colors",
          "property",
          false
        ],
        [
          "tan_colors",
          "queryable",
          false
        ],
        [
          "tan_colors",
          "theAble",
          false
        ],
        [
          "teal_colors",
          "green_colors",
          false
        ],
        [
          "teal_colors",
          "hierarchyAble",
          false
        ],
        [
          "teal_colors",
          "isEdee",
          false
        ],
        [
          "teal_colors",
          "isEder",
          false
        ],
        [
          "teal_colors",
          "object",
          false
        ],
        [
          "teal_colors",
          "property",
          false
        ],
        [
          "teal_colors",
          "queryable",
          false
        ],
        [
          "teal_colors",
          "theAble",
          false
        ],
        [
          "that",
          "thisitthat",
          false
        ],
        [
          "the",
          "articlePOS",
          false
        ],
        [
          "theAble",
          "theAble",
          false
        ],
        [
          "this",
          "pronoun",
          false
        ],
        [
          "this",
          "queryable",
          false
        ],
        [
          "this",
          "thisitthat",
          false
        ],
        [
          "thisitthat",
          "queryable",
          false
        ],
        [
          "timesExpression",
          "mathematicalExpression",
          false
        ],
        [
          "timesOperator",
          "mathematical_operator",
          false
        ],
        [
          "to",
          "preposition",
          false
        ],
        [
          "toAble",
          "toAble",
          false
        ],
        [
          "turquoise_colors",
          "blue_colors",
          false
        ],
        [
          "turquoise_colors",
          "hierarchyAble",
          false
        ],
        [
          "turquoise_colors",
          "isEdee",
          false
        ],
        [
          "turquoise_colors",
          "isEder",
          false
        ],
        [
          "turquoise_colors",
          "object",
          false
        ],
        [
          "turquoise_colors",
          "property",
          false
        ],
        [
          "turquoise_colors",
          "queryable",
          false
        ],
        [
          "turquoise_colors",
          "theAble",
          false
        ],
        [
          "type",
          "property",
          false
        ],
        [
          "type",
          "whatAble",
          false
        ],
        [
          "unknown",
          "hierarchyAble",
          false
        ],
        [
          "unknown",
          "queryable",
          false
        ],
        [
          "unknown",
          "theAble",
          false
        ],
        [
          "unselect",
          "verb",
          false
        ],
        [
          "up",
          "direction",
          false
        ],
        [
          "verb",
          "verb",
          false
        ],
        [
          "violet_colors",
          "hierarchyAble",
          false
        ],
        [
          "violet_colors",
          "isEdee",
          false
        ],
        [
          "violet_colors",
          "isEder",
          false
        ],
        [
          "violet_colors",
          "object",
          false
        ],
        [
          "violet_colors",
          "property",
          false
        ],
        [
          "violet_colors",
          "purple_colors",
          false
        ],
        [
          "violet_colors",
          "queryable",
          false
        ],
        [
          "violet_colors",
          "theAble",
          false
        ],
        [
          "what",
          "object",
          false
        ],
        [
          "what",
          "queryable",
          false
        ],
        [
          "whatAble",
          "queryable",
          false
        ],
        [
          "white_colors",
          "color_colors",
          false
        ],
        [
          "white_colors",
          "hierarchyAble",
          false
        ],
        [
          "white_colors",
          "isEdee",
          false
        ],
        [
          "white_colors",
          "isEder",
          false
        ],
        [
          "white_colors",
          "object",
          false
        ],
        [
          "white_colors",
          "property",
          false
        ],
        [
          "white_colors",
          "queryable",
          false
        ],
        [
          "white_colors",
          "theAble",
          false
        ],
        [
          "whose",
          "object",
          false
        ],
        [
          "x",
          "number",
          false
        ],
        [
          "xfx",
          "queryable",
          false
        ],
        [
          "y",
          "number",
          false
        ],
        [
          "yellow_colors",
          "color_colors",
          false
        ],
        [
          "yellow_colors",
          "hierarchyAble",
          false
        ],
        [
          "yellow_colors",
          "isEdee",
          false
        ],
        [
          "yellow_colors",
          "isEder",
          false
        ],
        [
          "yellow_colors",
          "object",
          false
        ],
        [
          "yellow_colors",
          "property",
          false
        ],
        [
          "yellow_colors",
          "queryable",
          false
        ],
        [
          "yellow_colors",
          "theAble",
          false
        ]
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "bar",
                0
              ],
              [
                "comma",
                0
              ],
              [
                "line",
                0
              ],
              [
                "list",
                0
              ],
              [
                "modifies",
                0
              ],
              [
                "pie",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 1
          },
          {
            "op": [
              "pie",
              0
            ],
            "ops": [
              [
                "bar",
                0
              ],
              [
                "comma",
                0
              ],
              [
                "line",
                0
              ],
              [
                "list",
                0
              ],
              [
                "modifies",
                0
              ],
              [
                "pie",
                0
              ]
            ],
            "counter": 2
          },
          {
            "op": [
              "comma",
              0
            ],
            "ops": [
              [
                "bar",
                0
              ],
              [
                "comma",
                0
              ],
              [
                "line",
                0
              ],
              [
                "list",
                0
              ],
              [
                "modifies",
                0
              ]
            ],
            "counter": 3
          },
          {
            "op": [
              "bar",
              0
            ],
            "ops": [
              [
                "bar",
                0
              ],
              [
                "line",
                0
              ],
              [
                "list",
                0
              ],
              [
                "modifies",
                0
              ]
            ],
            "counter": 4
          },
          {
            "op": [
              "list",
              0
            ],
            "ops": [
              [
                "line",
                0
              ],
              [
                "list",
                0
              ],
              [
                "modifies",
                0
              ]
            ],
            "counter": 5
          },
          {
            "op": [
              "list",
              1
            ],
            "ops": [
              [
                "list",
                1
              ],
              [
                "modifies",
                0
              ]
            ],
            "counter": 6
          },
          {
            "op": [
              "modifies",
              0
            ],
            "ops": [
              [
                "modifies",
                0
              ]
            ],
            "counter": 7
          }
        ]
      },
      "trace": "\n\n>>>>>>>>>>>>> Counter 1\n    0. pie/0  (1, 1) - \"pie\"\n                                   {\n                                     marker: Operator(pie/0, [\"Selector(Bridge('{ ...next(operator), value: 'pie' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'pie' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 0, 'end': 2}\n                                     text: \"pie\"\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. comma/0  (1, 2) - \",\"\n                                   {\n                                     depth: \"+\"\n                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 3, 'end': 3}\n                                     text: \",\"\n                                     value: \",\"\n                                     word: \",\"\n                                   }\n    2. bar/0  (1, 5) - \"bar\"\n                                   {\n                                     marker: Operator(bar/0, [\"Selector(Bridge('{ ...next(operator), value: 'bar' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'bar' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 5, 'end': 7}\n                                     text: \"bar\"\n                                     value: \"bar\"\n                                     word: \"bar\"\n                                   }\n    3. list/0  (1, 7) - \"and\"\n                                   {\n                                     default: true\n                                     marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({}) bridge(bridge))\n                                     range: {'start': 9, 'end': 11}\n                                     text: \"and\"\n                                     word: \"and\"\n                                   }\n    4. line/0  (1, 11) - \"line\"\n                                   {\n                                     marker: Operator(line/0, [\"Selector(Bridge('{ ...next(operator), value: 'line' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'line' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 13, 'end': 16}\n                                     text: \"line\"\n                                     value: \"line\"\n                                     word: \"line\"\n                                   }\n    5. modifies/0  (1, 14) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    6. unknown/0  (1, 16) - \"chart\"\n                                   {\n                                     marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"chart\"\n                                     unknown: true\n                                     value: \"chart\"\n                                     word: \"chart\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=6) is Context({marker: Operator(unknown/0, [\"Selector(Bridge('{ ...next(operator), unknown: true, dead: true }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), unknown: true, dead: true }')), variables({}) bridge(bridge)), range: {'start': 25, 'end': 29}, text: chart, unknown: True, value: chart, word: chart})\n\n>>>>>>>>>>>>> Counter 2\n    0. pie/0  (1, 1) - \"pie\"\n                                   {\n                                     marker: Operator(pie/0, [\"Selector(Bridge('{ ...next(operator), value: 'pie' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'pie' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 0, 'end': 2}\n                                     text: \"pie\"\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. comma/0  (1, 2) - \",\"\n                                   {\n                                     depth: \"+\"\n                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 3, 'end': 3}\n                                     text: \",\"\n                                     value: \",\"\n                                     word: \",\"\n                                   }\n    2. bar/0  (1, 5) - \"bar\"\n                                   {\n                                     marker: Operator(bar/0, [\"Selector(Bridge('{ ...next(operator), value: 'bar' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'bar' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 5, 'end': 7}\n                                     text: \"bar\"\n                                     value: \"bar\"\n                                     word: \"bar\"\n                                   }\n    3. list/0  (1, 7) - \"and\"\n                                   {\n                                     default: true\n                                     marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({'type': ['isEder', 'hierarchyAble', 'line', 'property', 'graph_modifier', 'object', 'isEdee', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 9, 'end': 11}\n                                     text: \"and\"\n                                     types: [\n                                     ]\n                                     word: \"and\"\n                                   }\n    4. line/0  (1, 11) - \"line\"\n                                   {\n                                     marker: Operator(line/0, [\"Selector(Bridge('{ ...next(operator), value: 'line' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'line' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 13, 'end': 16}\n                                     text: \"line\"\n                                     value: \"line\"\n                                     word: \"line\"\n                                   }\n    5. modifies/0  (1, 14) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n   *6. unknown/1 (dead) (2, 0) - \"chart\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"chart\"\n                                     unknown: true\n                                     value: \"chart\"\n                                     word: \"chart\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=0) is Context({marker: Operator(pie/0, [\"Selector(Bridge('{ ...next(operator), value: 'pie' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'pie' }')), variables({}) bridge(bridge)), number: one, range: {'start': 0, 'end': 2}, text: pie, value: pie, word: pie})\n\n>>>>>>>>>>>>> Counter 3\n   *0. pie/1 (dead) (2, 1) - \"pie\"\n                                   {\n                                     prioritized_by: [('pie', 0)]\n                                     dead: true\n                                     marker: Operator(pie/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 0, 'end': 2}\n                                     text: \"pie\"\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. comma/0  (1, 2) - \",\"\n                                   {\n                                     depth: \"+\"\n                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                     range: {'start': 3, 'end': 3}\n                                     text: \",\"\n                                     value: \",\"\n                                     word: \",\"\n                                   }\n    2. bar/0  (1, 5) - \"bar\"\n                                   {\n                                     marker: Operator(bar/0, [\"Selector(Bridge('{ ...next(operator), value: 'bar' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'bar' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 5, 'end': 7}\n                                     text: \"bar\"\n                                     value: \"bar\"\n                                     word: \"bar\"\n                                   }\n    3. list/0  (1, 7) - \"and\"\n                                   {\n                                     default: true\n                                     marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({'type': ['isEder', 'hierarchyAble', 'line', 'property', 'graph_modifier', 'object', 'isEdee', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 9, 'end': 11}\n                                     text: \"and\"\n                                     types: [\n                                     ]\n                                     word: \"and\"\n                                   }\n    4. line/0  (1, 11) - \"line\"\n                                   {\n                                     marker: Operator(line/0, [\"Selector(Bridge('{ ...next(operator), value: 'line' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'line' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 13, 'end': 16}\n                                     text: \"line\"\n                                     value: \"line\"\n                                     word: \"line\"\n                                   }\n    5. modifies/0  (1, 14) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    6. unknown/1 (dead) (2, 0) - \"chart\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"chart\"\n                                     unknown: true\n                                     value: \"chart\"\n                                     word: \"chart\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=1) is Context({depth: +, marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge)), range: {'start': 3, 'end': 3}, text: ,, value: ,, word: ,})\n\n>>>>>>>>>>>>> Counter 4\n   *0. pie/1 (dead) (3, 0) - \"pie,\"\n                                   {\n                                     prioritized_by: [('comma', 0)]\n                                     dead: true\n                                     decorators:                                          {\n                                           after:                                                {\n                                                 depth: \"+\"\n                                                 marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                                 range: {'start': 3, 'end': 3}\n                                                 text: \",\"\n                                                 value: \",\"\n                                                 word: \",\"\n                                               }\n\n                                         }\n\n                                     marker: Operator(pie/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                     no_convolutions: true\n                                     number: \"one\"\n                                     range: {'start': 0, 'end': 3}\n                                     text: \"pie,\"\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n    1. bar/0  (1, 5) - \"bar\"\n                                   {\n                                     marker: Operator(bar/0, [\"Selector(Bridge('{ ...next(operator), value: 'bar' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'bar' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 5, 'end': 7}\n                                     text: \"bar\"\n                                     value: \"bar\"\n                                     word: \"bar\"\n                                   }\n    2. list/0  (1, 7) - \"and\"\n                                   {\n                                     default: true\n                                     marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({'type': ['isEder', 'hierarchyAble', 'line', 'property', 'graph_modifier', 'object', 'isEdee', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 9, 'end': 11}\n                                     text: \"and\"\n                                     types: [\n                                     ]\n                                     word: \"and\"\n                                   }\n    3. line/0  (1, 11) - \"line\"\n                                   {\n                                     marker: Operator(line/0, [\"Selector(Bridge('{ ...next(operator), value: 'line' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'line' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 13, 'end': 16}\n                                     text: \"line\"\n                                     value: \"line\"\n                                     word: \"line\"\n                                   }\n    4. modifies/0  (1, 14) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    5. unknown/1 (dead) (2, 0) - \"chart\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"chart\"\n                                     unknown: true\n                                     value: \"chart\"\n                                     word: \"chart\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=1) is Context({marker: Operator(bar/0, [\"Selector(Bridge('{ ...next(operator), value: 'bar' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'bar' }')), variables({}) bridge(bridge)), number: one, range: {'start': 5, 'end': 7}, text: bar, value: bar, word: bar})\n\n>>>>>>>>>>>>> Counter 5\n    0. pie/1 (dead) (3, 0) - \"pie,\"\n                                   {\n                                     prioritized_by: [('comma', 0)]\n                                     dead: true\n                                     decorators:                                          {\n                                           after:                                                {\n                                                 depth: \"+\"\n                                                 marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                                 range: {'start': 3, 'end': 3}\n                                                 text: \",\"\n                                                 value: \",\"\n                                                 word: \",\"\n                                               }\n\n                                         }\n\n                                     marker: Operator(pie/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                     no_convolutions: true\n                                     number: \"one\"\n                                     range: {'start': 0, 'end': 3}\n                                     text: \"pie,\"\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n   *1. bar/1 (dead) (2, 2) - \"bar\"\n                                   {\n                                     prioritized_by: [('bar', 0)]\n                                     dead: true\n                                     marker: Operator(bar/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 5, 'end': 7}\n                                     text: \"bar\"\n                                     value: \"bar\"\n                                     word: \"bar\"\n                                   }\n    2. list/0  (1, 7) - \"and\"\n                                   {\n                                     default: true\n                                     marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({'type': ['isEder', 'hierarchyAble', 'line', 'property', 'graph_modifier', 'object', 'isEdee', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 9, 'end': 11}\n                                     text: \"and\"\n                                     types: [\n                                     ]\n                                     word: \"and\"\n                                   }\n    3. line/0  (1, 11) - \"line\"\n                                   {\n                                     marker: Operator(line/0, [\"Selector(Bridge('{ ...next(operator), value: 'line' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'line' }')), variables({}) bridge(bridge))\n                                     number: \"one\"\n                                     range: {'start': 13, 'end': 16}\n                                     text: \"line\"\n                                     value: \"line\"\n                                     word: \"line\"\n                                   }\n    4. modifies/0  (1, 14) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    5. unknown/1 (dead) (2, 0) - \"chart\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"chart\"\n                                     unknown: true\n                                     value: \"chart\"\n                                     word: \"chart\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=2) is Context({default: True, marker: Operator(list/0, PASS, ['Selector(Bridge(\\'{ ...next(operator), listable: true, isList: true, value: append(before, after) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), listable: true, isList: true, value: append(before, after) }')), variables({'type': ['isEder', 'hierarchyAble', 'line', 'property', 'graph_modifier', 'object', 'isEdee', 'queryable', 'theAble']}) bridge(bridge)), range: {'start': 9, 'end': 11}, text: and, types: [], word: and})\n\n>>>>>>>>>>>>> Counter 6\n    0. pie/1 (dead) (3, 0) - \"pie,\"\n                                   {\n                                     prioritized_by: [('comma', 0)]\n                                     dead: true\n                                     decorators:                                          {\n                                           after:                                                {\n                                                 depth: \"+\"\n                                                 marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                                 range: {'start': 3, 'end': 3}\n                                                 text: \",\"\n                                                 value: \",\"\n                                                 word: \",\"\n                                               }\n\n                                         }\n\n                                     marker: Operator(pie/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                     no_convolutions: true\n                                     number: \"one\"\n                                     range: {'start': 0, 'end': 3}\n                                     text: \"pie,\"\n                                     value: \"pie\"\n                                     word: \"pie\"\n                                   }\n   *1. list/1  (3, 1) - \"bar and line\"\n                                   {\n                                     prioritized_by: [('list', 0)]\n                                     default: true\n                                     isList: true\n                                     listable: true\n                                     marker: Operator(list/1, PASS, ['Selector(Bridge(\\'{ ...operator, value: append(before, operator.value) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[], bridge(bridge), passthrough)'], evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['isEder', 'hierarchyAble', 'line', 'property', 'graph_modifier', 'object', 'isEdee', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 5, 'end': 16}\n                                     text: \"bar and line\"\n                                     types: [\n                                     ]\n                                     value: [\n                                       {\n                                         prioritized_by: [('bar', 0)]\n                                         dead: true\n                                         marker: Operator(bar/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                         number: \"one\"\n                                         range: {'start': 5, 'end': 7}\n                                         text: \"bar\"\n                                         value: \"bar\"\n                                         word: \"bar\"\n                                       }\n\n                                       {\n                                         marker: Operator(line/0, [\"Selector(Bridge('{ ...next(operator), value: 'line' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'line' }')), variables({}) bridge(bridge))\n                                         number: \"one\"\n                                         range: {'start': 13, 'end': 16}\n                                         text: \"line\"\n                                         value: \"line\"\n                                         word: \"line\"\n                                       }\n                                     ]\n                                     word: \"and\"\n                                   }\n    2. modifies/0  (1, 14) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    3. unknown/1 (dead) (2, 0) - \"chart\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"chart\"\n                                     unknown: true\n                                     value: \"chart\"\n                                     word: \"chart\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=1) is Context({default: True, isList: True, listable: True, marker: Operator(list/1, PASS, ['Selector(Bridge(\\'{ ...operator, value: append(before, operator.value) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[], bridge(bridge), passthrough)'], evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['isEder', 'hierarchyAble', 'line', 'property', 'graph_modifier', 'object', 'isEdee', 'queryable', 'theAble']}) bridge(bridge)), range: {'start': 5, 'end': 16}, text: bar and line, types: [], value: [Context({dead: True, marker: Operator(bar/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge)), number: one, range: {'start': 5, 'end': 7}, text: bar, value: bar, word: bar}), Context({marker: Operator(line/0, [\"Selector(Bridge('{ ...next(operator), value: 'line' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'line' }')), variables({}) bridge(bridge)), number: one, range: {'start': 13, 'end': 16}, text: line, value: line, word: line})], word: and})\n\n>>>>>>>>>>>>> Counter 7\n   *0. list/1  (4, 0) - \"pie, bar and line\"\n                                   {\n                                     prioritized_by: [('list', 1)]\n                                     default: true\n                                     isList: true\n                                     listable: true\n                                     marker: Operator(list/1, PASS, ['Selector(Bridge(\\'{ ...operator, value: append(before, operator.value) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[], bridge(bridge), passthrough)'], evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['isEder', 'hierarchyAble', 'line', 'property', 'graph_modifier', 'object', 'isEdee', 'queryable', 'theAble']}) bridge(bridge))\n                                     range: {'start': 0, 'end': 16}\n                                     text: \"pie, bar and line\"\n                                     types: [\n                                     ]\n                                     value: [\n                                       {\n                                         prioritized_by: [('comma', 0)]\n                                         dead: true\n                                         decorators:                                              {\n                                               after:                                                    {\n                                                     depth: \"+\"\n                                                     marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                                     range: {'start': 3, 'end': 3}\n                                                     text: \",\"\n                                                     value: \",\"\n                                                     word: \",\"\n                                                   }\n\n                                             }\n\n                                         marker: Operator(pie/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                         no_convolutions: true\n                                         number: \"one\"\n                                         range: {'start': 0, 'end': 3}\n                                         text: \"pie,\"\n                                         value: \"pie\"\n                                         word: \"pie\"\n                                       }\n\n                                       {\n                                         prioritized_by: [('bar', 0)]\n                                         dead: true\n                                         marker: Operator(bar/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                         number: \"one\"\n                                         range: {'start': 5, 'end': 7}\n                                         text: \"bar\"\n                                         value: \"bar\"\n                                         word: \"bar\"\n                                       }\n\n                                       {\n                                         marker: Operator(line/0, [\"Selector(Bridge('{ ...next(operator), value: 'line' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'line' }')), variables({}) bridge(bridge))\n                                         number: \"one\"\n                                         range: {'start': 13, 'end': 16}\n                                         text: \"line\"\n                                         value: \"line\"\n                                         word: \"line\"\n                                       }\n                                     ]\n                                     word: \"and\"\n                                   }\n    1. modifies/0  (1, 14) - \"modify\"\n                                   {\n                                     flatten: true\n                                     marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge))\n                                     number: \"many\"\n                                     range: {'start': 18, 'end': 23}\n                                     text: \"modify\"\n                                     word: \"modify\"\n                                   }\n    2. unknown/1 (dead) (2, 0) - \"chart\"\n                                   {\n                                     prioritized_by: [('unknown', 0)]\n                                     dead: true\n                                     marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                     range: {'start': 25, 'end': 29}\n                                     text: \"chart\"\n                                     unknown: true\n                                     value: \"chart\"\n                                     word: \"chart\"\n                                   }\n<<<<<<<<<<<<<\nNext Op (index=1) is Context({flatten: True, marker: Operator(modifies/0, ['Selector(Bridge(\\'{ ...next(operator), modifiers: before, concept: after[0] }\\'), , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(Bridge('{ ...next(operator), modifiers: before, concept: after[0] }')), variables({}) bridge(bridge)), number: many, range: {'start': 18, 'end': 23}, text: modify, word: modify})\n\n>>>>>>>>>>>>> Counter 8\n   *0. modifies/1 (dead) (5, 0) - \"pie, bar and line modify chart\"\n                                   {\n                                     prioritized_by: [('modifies', 0)]\n                                     concept:                                          {\n                                           prioritized_by: [('unknown', 0)]\n                                           dead: true\n                                           marker: Operator(unknown/1, [\"Selector(Bridge('{ ...next(operator) }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                           range: {'start': 25, 'end': 29}\n                                           text: \"chart\"\n                                           unknown: true\n                                           value: \"chart\"\n                                           word: \"chart\"\n                                         }\n\n                                     dead: true\n                                     flatten: true\n                                     marker: Operator(modifies/1, ['Selector(None, , [Repeated(Listable(Not([\"Properties({(\\'context\\', \\'punctuation\\'): Matcher_Variable(\\'true\\')})\"])), 0)]<==>[Any], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                     modifiers: [\n                                       {\n                                         prioritized_by: [('list', 1)]\n                                         default: true\n                                         isList: true\n                                         listable: true\n                                         marker: Operator(list/1, PASS, ['Selector(Bridge(\\'{ ...operator, value: append(before, operator.value) }\\'), , same/(), [And([\"Type(variable: \\'type\\')\", \"Listable(Unify(Property((\\'context\\', \\'instance\\')), Property((\\'variables\\', \\'instance\\'))))\"])]<==>[], bridge(bridge), passthrough)'], evaluator(Bridge('{ ...operator, value: append(before, operator.value) }')), variables({'type': ['isEder', 'hierarchyAble', 'line', 'property', 'graph_modifier', 'object', 'isEdee', 'queryable', 'theAble']}) bridge(bridge))\n                                         range: {'start': 0, 'end': 16}\n                                         text: \"pie, bar and line\"\n                                         types: [\n                                         ]\n                                         value: [\n                                           {\n                                             prioritized_by: [('comma', 0)]\n                                             dead: true\n                                             decorators:                                                  {\n                                                   after:                                                        {\n                                                         depth: \"+\"\n                                                         marker: Operator(comma/0, [\"Selector(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }'), , [Any]<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...before[0], decorators.after: operator, no_convolutions: true }')), variables({}) bridge(bridge))\n                                                         range: {'start': 3, 'end': 3}\n                                                         text: \",\"\n                                                         value: \",\"\n                                                         word: \",\"\n                                                       }\n\n                                                 }\n\n                                             marker: Operator(pie/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                             no_convolutions: true\n                                             number: \"one\"\n                                             range: {'start': 0, 'end': 3}\n                                             text: \"pie,\"\n                                             value: \"pie\"\n                                             word: \"pie\"\n                                           }\n\n                                           {\n                                             prioritized_by: [('bar', 0)]\n                                             dead: true\n                                             marker: Operator(bar/1, ['Selector(None, , []<==>[], bridge(bridge))'], evaluator(None), variables({}) bridge(bridge))\n                                             number: \"one\"\n                                             range: {'start': 5, 'end': 7}\n                                             text: \"bar\"\n                                             value: \"bar\"\n                                             word: \"bar\"\n                                           }\n\n                                           {\n                                             marker: Operator(line/0, [\"Selector(Bridge('{ ...next(operator), value: 'line' }'), , []<==>[], bridge(bridge))\"], evaluator(Bridge('{ ...next(operator), value: 'line' }')), variables({}) bridge(bridge))\n                                             number: \"one\"\n                                             range: {'start': 13, 'end': 16}\n                                             text: \"line\"\n                                             value: \"line\"\n                                             word: \"line\"\n                                           }\n                                         ]\n                                         word: \"and\"\n                                       }\n                                     ]\n                                     number: \"many\"\n                                     range: {'start': 0, 'end': 29}\n                                     text: \"pie, bar and line modify chart\"\n                                     word: \"modify\"\n                                   }\n<<<<<<<<<<<<<\n",
      "contexts": [
        {
          "word": "modify",
          "number": "many",
          "flatten": true,
          "text": "pie, bar and line modify chart",
          "marker": "modifies",
          "range": {
            "start": 0,
            "end": 29
          },
          "dead": true,
          "modifiers": [
            {
              "marker": "list",
              "default": true,
              "word": "and",
              "text": "pie, bar and line",
              "range": {
                "start": 0,
                "end": 16
              },
              "types": [
                "list"
              ],
              "listable": true,
              "isList": true,
              "value": [
                {
                  "value": "pie",
                  "number": "one",
                  "text": "pie,",
                  "marker": "pie",
                  "word": "pie",
                  "range": {
                    "start": 0,
                    "end": 3
                  },
                  "dead": true,
                  "decorators": {
                    "after": {
                      "word": ",",
                      "value": ",",
                      "depth": "+",
                      "text": ",",
                      "marker": "comma",
                      "range": {
                        "start": 3,
                        "end": 3
                      },
                      "level": 0
                    }
                  },
                  "no_convolutions": true,
                  "level": 1
                },
                {
                  "value": "bar",
                  "number": "one",
                  "text": "bar",
                  "marker": "bar",
                  "word": "bar",
                  "range": {
                    "start": 5,
                    "end": 7
                  },
                  "dead": true,
                  "level": 1
                },
                {
                  "value": "line",
                  "number": "one",
                  "text": "line",
                  "marker": "line",
                  "word": "line",
                  "range": {
                    "start": 13,
                    "end": 16
                  },
                  "level": 0
                }
              ],
              "level": 1
            }
          ],
          "concept": {
            "value": "chart",
            "unknown": true,
            "text": "chart",
            "marker": "unknown",
            "word": "chart",
            "range": {
              "start": 25,
              "end": 29
            },
            "dead": true,
            "level": 1
          },
          "level": 1,
          "topLevel": true,
          "touchedBy": [
            "mongo#call2",
            "instance0#mongo#call2"
          ]
        }
      ],
      "generated": [
        ""
      ],
      "paraphrases": [
        "pie, bar and line modifies chart"
      ],
      "paraphrasesParenthesized": [],
      "generatedParenthesized": [],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "bar",
            0
          ],
          [
            "comma",
            0
          ],
          [
            "line",
            0
          ],
          [
            "list",
            0
          ],
          [
            "modifies",
            0
          ],
          [
            "pie",
            0
          ],
          [
            "unknown",
            0
          ]
        ],
        [
          [
            "bar",
            0
          ],
          [
            "comma",
            0
          ],
          [
            "line",
            0
          ],
          [
            "list",
            0
          ],
          [
            "modifies",
            0
          ],
          [
            "pie",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "bar",
            0
          ],
          [
            "comma",
            0
          ],
          [
            "line",
            0
          ],
          [
            "list",
            0
          ],
          [
            "modifies",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "bar",
            0
          ],
          [
            "line",
            0
          ],
          [
            "list",
            0
          ],
          [
            "modifies",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "line",
            0
          ],
          [
            "list",
            0
          ],
          [
            "modifies",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "list",
            1
          ],
          [
            "modifies",
            0
          ],
          [
            "unknown",
            1
          ]
        ]
      ],
      "learned_contextual_priorities": [],
      "query": "pie, bar and line modify chart",
      "key": {
        "query": "pie, bar and line modify chart"
      }
    },
    {
      "extraConfig": true,
      "name": "mongo",
      "operators": [
        "([graphAction|graph] (column/*))",
        "([clear|clear,reset,restart])",
        "([reportable])",
        "([forTable|for] (table/*))",
        "([sortByColumns|sort,order] (table/*)? ([sortBy|by] ([column])))",
        "([groupByColumns|group,grouped] ([groupBy|by] ([column])))",
        "(([recordCount|number,count]) [ofDbProperty|of] (reportable/* || column/*))",
        "([make] ([report]))",
        "([makeGraph|make] (graph/* || chart/*) ([makeGraphOf|of]) (column/*))",
        "([state])",
        "([changeState|make] ([reportElement]) (table/*)? (state/*))",
        "([collection])",
        "([reportElementProperty])",
        "([reportElementContext])",
        "((reportElement/*) [contextOfReportElement|of] (reportElementContext/*))",
        "((reportElement/* && !@<color_colors && !@<case) [compoundReportElement] (reportElement/* && !@<color_colors && !@<case))",
        "([background])",
        "([header])",
        "([table])",
        "([column])",
        "([case])",
        "([uppercase])",
        "([lowercase])",
        "([show] (reportable/*))",
        "([showCollection|show] (collection/*))",
        "([showReport|show] (report/*))",
        "([showColumn|show,add,include,change,update,select] (column/*) ([columnAddedTo|to,on] (collection/* || table/*))?)",
        "([capitalize] ([reportElement]))",
        "([sales|])",
        "([thisReportElement|this] (reportElement/*))"
      ],
      "hierarchy": [
        [
          "color_colors",
          "state"
        ],
        [
          "case",
          "state"
        ],
        [
          "color_colors",
          "reportElement"
        ],
        [
          "case",
          "reportElement"
        ],
        [
          "graph",
          "moveable"
        ],
        [
          "graph",
          "orderable"
        ],
        [
          "chart",
          "moveable"
        ],
        [
          "chart",
          "orderable"
        ]
      ],
      "semantics": [
        {},
        {},
        {
          "where": "/home/dev/code/entodicton/mongo/server/mongo.js:566"
        },
        {}
      ],
      "bridges": [
        {
          "id": "collection"
        },
        {
          "id": "reportElementContext"
        },
        {
          "id": "contextOfReportElement",
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...before[0], root: before[0], of: operator, frameOfReference: after[0], generate: ['root', 'of', 'frameOfReference'] }"
        },
        {
          "id": "makeGraphOf",
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...next(operator) }"
        },
        {
          "id": "makeGraph",
          "isA": [
            "verb"
          ],
          "bridge": "{ ...next(operator), type: after[0], of: after[1], columns: after[2], operator: operator, generate: ['operator', 'type', 'of', 'columns'] }"
        },
        {
          "id": "forTable",
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...next(operator), table: after[0], postModifiers: ['table'] }"
        },
        {
          "id": "graphAction",
          "isA": [
            "verb"
          ],
          "bridge": "{ ...next(operator), columns: after[0] }"
        },
        {
          "id": "clear",
          "isA": [
            "verb"
          ],
          "bridge": "{ ...next(operator) }"
        },
        {
          "id": "recordCount",
          "isA": [
            "column",
            "theAble"
          ],
          "bridge": "{ ...next(operator) }"
        },
        {
          "id": "ofDbProperty",
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...next(before[0]), of: operator, count: true, field: after[0], number: after[0].number, postModifiers: ['of', 'field'] }"
        },
        {
          "id": "sortBy",
          "localHierarchy": [
            [
              "column",
              "unknown"
            ]
          ],
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...next(operator), field: after[0], postModifiers: ['field'] }"
        },
        {
          "id": "groupBy",
          "localHierarchy": [
            [
              "column",
              "unknown"
            ]
          ],
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...next(operator), field: after[0] }"
        },
        {
          "id": "sortByColumns",
          "optional": {
            "1": "{ marker: 'table', pullFromContext: true }"
          },
          "isA": [
            "verb"
          ],
          "bridge": "{ ...next(operator), table: after[0], field: after[1], postModifiers: ['field'] }"
        },
        {
          "id": "groupByColumns",
          "isA": [
            "verb"
          ],
          "bridge": "{ ...next(operator), field: after[0], postModifiers: ['field'] }"
        },
        {
          "id": "column",
          "isA": [
            "countable",
            "comparable"
          ],
          "words": [
            {
              "word": "column",
              "number": "one"
            },
            {
              "word": "columns",
              "number": "many"
            },
            {
              "word": "field",
              "number": "one"
            },
            {
              "word": "fields",
              "number": "many"
            },
            {
              "word": "property",
              "number": "one"
            },
            {
              "word": "properties",
              "number": "many"
            }
          ]
        },
        {
          "id": "case",
          "words": [
            {
              "word": "case",
              "number": "one"
            },
            {
              "word": "cases",
              "number": "many"
            }
          ],
          "isA": [
            "reportElementProperty"
          ]
        },
        {
          "id": "uppercase",
          "words": [
            {
              "word": "upper",
              "number": "one",
              "value": "uppercase"
            },
            {
              "word": "uppers",
              "number": "many",
              "value": "uppercase"
            }
          ],
          "isA": [
            "case"
          ]
        },
        {
          "id": "lowercase",
          "words": [
            {
              "word": "lower",
              "number": "one",
              "value": "lowercase"
            },
            {
              "word": "lowers",
              "number": "many",
              "value": "lowercase"
            }
          ],
          "isA": [
            "case"
          ]
        },
        {
          "id": "reportElementProperty"
        },
        {
          "id": "compoundReportElement",
          "convolution": true,
          "isA": [
            "reportElement",
            "theAble"
          ],
          "bridge": "{ ...next(operator), reportElements: append(default(before[0].reportElements, [before[0]]), default(after[0].reportElements, [after[0]])) }"
        },
        {
          "id": "make",
          "bridge": "{ ...next(operator), report: after[0] }",
          "parents": [
            "verb"
          ]
        },
        {
          "id": "state",
          "bridge": "{ ...next(operator) }"
        },
        {
          "id": "thisReportElement",
          "parents": [
            "articlePOS"
          ],
          "bridge": "{ ...next(after[0]), modifiers: append(['this'], after[0].modifiers), this: operator }"
        },
        {
          "id": "changeState",
          "bridge": "{ ...next(operator), reportElement: after[0], table: after[1], newState: after[2] }",
          "optional": {
            "2": "{ marker: 'table', pullFromContext: true }"
          },
          "parents": [
            "verb"
          ]
        },
        {
          "id": "capitalize",
          "parents": [
            "verb"
          ],
          "bridge": "{ ...next(operator), element: after[0] }"
        },
        {
          "id": "this",
          "parents": [
            "reportElement"
          ]
        },
        {
          "id": "reportElement"
        },
        {
          "id": "header",
          "words": [
            {
              "word": "header",
              "number": "one"
            },
            {
              "word": "headers",
              "number": "many"
            }
          ],
          "parents": [
            "theAble",
            "reportElement"
          ]
        },
        {
          "id": "background",
          "words": [
            {
              "word": "background",
              "number": "one"
            },
            {
              "word": "backgrounds",
              "number": "many"
            }
          ],
          "parents": [
            "theAble",
            "reportElement",
            "reportElementProperty"
          ]
        },
        {
          "id": "table",
          "words": [
            {
              "word": "table",
              "number": "one"
            },
            {
              "word": "tables",
              "number": "many"
            }
          ],
          "isA": [
            "orderable",
            "reportElementContext",
            "moveable"
          ],
          "parents": [
            "theAble",
            "reportElement",
            "nameable"
          ]
        },
        {
          "id": "report",
          "parents": [
            "theAble",
            "nameable"
          ]
        },
        {
          "id": "columnAddedTo",
          "isA": [
            "preposition"
          ],
          "bridge": "{ ...next(operator), postModifiers: ['destination'], destination: after[0] }"
        },
        {
          "id": "showColumn",
          "optional": {
            "2": "{ marker: 'undefined' }"
          },
          "bridge": "{ ...next(operator), show: after[0], to: after[1] }",
          "parents": [
            "verb"
          ]
        },
        {
          "id": "showReport",
          "bridge": "{ ...next(operator), show: after[0] }",
          "parents": [
            "verb"
          ]
        },
        {
          "id": "showCollection",
          "bridge": "{ ...next(operator), show: after[0] }",
          "parents": [
            "verb"
          ]
        },
        {
          "id": "show",
          "bridge": "{ ...next(operator), show: after[0] }",
          "parents": [
            "verb"
          ]
        },
        {
          "id": "sales",
          "parents": [
            "reportable",
            "theAble"
          ],
          "words": [
            {
              "word": "sales",
              "database": "mongo_test_database",
              "collection": "sales",
              "path": [
                "sales"
              ]
            }
          ]
        }
      ],
      "priorities": [
        {
          "context": [
            [
              "column",
              1
            ],
            [
              "list",
              0
            ],
            [
              "recordCount",
              0
            ]
          ],
          "choose": [
            2
          ]
        },
        {
          "context": [
            [
              "column",
              1
            ],
            [
              "list",
              0
            ],
            [
              "recordCount",
              1
            ],
            [
              "ofDbProperty",
              0
            ]
          ],
          "ordered": true,
          "choose": [
            3
          ]
        },
        {
          "context": [
            [
              "sortOrdering",
              0
            ],
            [
              "list",
              0
            ]
          ],
          "choose": [
            0
          ]
        },
        {
          "context": [
            [
              "show",
              0
            ],
            [
              "list",
              0
            ]
          ],
          "choose": [
            1
          ]
        },
        {
          "context": [
            [
              "sortBy",
              0
            ],
            [
              "column",
              0
            ],
            [
              "list",
              0
            ],
            [
              "column",
              0
            ],
            [
              "ascending",
              0
            ]
          ],
          "ordered": true,
          "choose": [
            4
          ]
        }
      ]
    },
    {
      "hierarchy": [
        [
          "a",
          "articlePOS",
          false
        ],
        [
          "action",
          "action",
          false
        ],
        [
          "adjective",
          "adjective",
          false
        ],
        [
          "all",
          "quantifier",
          false
        ],
        [
          "aqua_colors",
          "blue_colors",
          false
        ],
        [
          "aqua_colors",
          "hierarchyAble",
          false
        ],
        [
          "aqua_colors",
          "isEdee",
          false
        ],
        [
          "aqua_colors",
          "isEder",
          false
        ],
        [
          "aqua_colors",
          "object",
          false
        ],
        [
          "aqua_colors",
          "property",
          false
        ],
        [
          "aqua_colors",
          "queryable",
          false
        ],
        [
          "aqua_colors",
          "theAble",
          false
        ],
        [
          "aquamarine_colors",
          "blue_colors",
          false
        ],
        [
          "aquamarine_colors",
          "hierarchyAble",
          false
        ],
        [
          "aquamarine_colors",
          "isEdee",
          false
        ],
        [
          "aquamarine_colors",
          "isEder",
          false
        ],
        [
          "aquamarine_colors",
          "object",
          false
        ],
        [
          "aquamarine_colors",
          "property",
          false
        ],
        [
          "aquamarine_colors",
          "queryable",
          false
        ],
        [
          "aquamarine_colors",
          "theAble",
          false
        ],
        [
          "articlePOS",
          "articlePOS",
          false
        ],
        [
          "ascending",
          "hierarchyAble",
          false
        ],
        [
          "ascending",
          "isEdee",
          false
        ],
        [
          "ascending",
          "isEder",
          false
        ],
        [
          "ascending",
          "object",
          false
        ],
        [
          "ascending",
          "property",
          false
        ],
        [
          "ascending",
          "queryable",
          false
        ],
        [
          "ascending",
          "sort_ordering",
          false
        ],
        [
          "ascending",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "hierarchyAble",
          false
        ],
        [
          "azure_colors",
          "isEdee",
          false
        ],
        [
          "azure_colors",
          "isEder",
          false
        ],
        [
          "azure_colors",
          "object",
          false
        ],
        [
          "azure_colors",
          "property",
          false
        ],
        [
          "azure_colors",
          "queryable",
          false
        ],
        [
          "azure_colors",
          "theAble",
          false
        ],
        [
          "azure_colors",
          "white_colors",
          false
        ],
        [
          "background",
          "reportElement",
          false
        ],
        [
          "background",
          "reportElementProperty",
          false
        ],
        [
          "background",
          "theAble",
          false
        ],
        [
          "bar",
          "chart_modifier",
          false
        ],
        [
          "bar",
          "graph_modifier",
          false
        ],
        [
          "bar",
          "hierarchyAble",
          false
        ],
        [
          "bar",
          "isEdee",
          false
        ],
        [
          "bar",
          "isEder",
          false
        ],
        [
          "bar",
          "object",
          false
        ],
        [
          "bar",
          "property",
          false
        ],
        [
          "bar",
          "queryable",
          false
        ],
        [
          "bar",
          "theAble",
          false
        ],
        [
          "bar_chart",
          "adjective",
          true
        ],
        [
          "bar_chart",
          "chart",
          false
        ],
        [
          "bar_chart",
          "concept",
          false
        ],
        [
          "bar_chart",
          "hierarchyAble",
          false
        ],
        [
          "bar_chart",
          "isEdee",
          false
        ],
        [
          "bar_chart",
          "isEder",
          false
        ],
        [
          "bar_chart",
          "object",
          false
        ],
        [
          "bar_chart",
          "property",
          false
        ],
        [
          "bar_chart",
          "queryable",
          false
        ],
        [
          "bar_chart",
          "theAble",
          false
        ],
        [
          "bar_graph",
          "adjective",
          true
        ],
        [
          "bar_graph",
          "concept",
          false
        ],
        [
          "bar_graph",
          "graph",
          false
        ],
        [
          "bar_graph",
          "hierarchyAble",
          false
        ],
        [
          "bar_graph",
          "isEdee",
          false
        ],
        [
          "bar_graph",
          "isEder",
          false
        ],
        [
          "bar_graph",
          "object",
          false
        ],
        [
          "bar_graph",
          "property",
          false
        ],
        [
          "bar_graph",
          "queryable",
          false
        ],
        [
          "bar_graph",
          "theAble",
          false
        ],
        [
          "beige_colors",
          "hierarchyAble",
          false
        ],
        [
          "beige_colors",
          "isEdee",
          false
        ],
        [
          "beige_colors",
          "isEder",
          false
        ],
        [
          "beige_colors",
          "object",
          false
        ],
        [
          "beige_colors",
          "property",
          false
        ],
        [
          "beige_colors",
          "queryable",
          false
        ],
        [
          "beige_colors",
          "theAble",
          false
        ],
        [
          "beige_colors",
          "white_colors",
          false
        ],
        [
          "between",
          "preposition",
          false
        ],
        [
          "black_colors",
          "gray_colors",
          false
        ],
        [
          "black_colors",
          "hierarchyAble",
          false
        ],
        [
          "black_colors",
          "isEdee",
          false
        ],
        [
          "black_colors",
          "isEder",
          false
        ],
        [
          "black_colors",
          "object",
          false
        ],
        [
          "black_colors",
          "property",
          false
        ],
        [
          "black_colors",
          "queryable",
          false
        ],
        [
          "black_colors",
          "theAble",
          false
        ],
        [
          "blue_colors",
          "color_colors",
          false
        ],
        [
          "blue_colors",
          "hierarchyAble",
          false
        ],
        [
          "blue_colors",
          "isEdee",
          false
        ],
        [
          "blue_colors",
          "isEder",
          false
        ],
        [
          "blue_colors",
          "object",
          false
        ],
        [
          "blue_colors",
          "property",
          false
        ],
        [
          "blue_colors",
          "queryable",
          false
        ],
        [
          "blue_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors",
          "color_colors_modifier",
          false
        ],
        [
          "brightness_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors",
          "object",
          false
        ],
        [
          "brightness_colors",
          "property",
          false
        ],
        [
          "brightness_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors",
          "theAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "adjective",
          true
        ],
        [
          "brightness_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "brightness_colors_color_colors",
          "concept",
          false
        ],
        [
          "brightness_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "brightness_colors_color_colors",
          "isEder",
          false
        ],
        [
          "brightness_colors_color_colors",
          "object",
          false
        ],
        [
          "brightness_colors_color_colors",
          "property",
          false
        ],
        [
          "brightness_colors_color_colors",
          "queryable",
          false
        ],
        [
          "brightness_colors_color_colors",
          "theAble",
          false
        ],
        [
          "brown_colors",
          "color_colors",
          false
        ],
        [
          "brown_colors",
          "hierarchyAble",
          false
        ],
        [
          "brown_colors",
          "isEdee",
          false
        ],
        [
          "brown_colors",
          "isEder",
          false
        ],
        [
          "brown_colors",
          "object",
          false
        ],
        [
          "brown_colors",
          "property",
          false
        ],
        [
          "brown_colors",
          "queryable",
          false
        ],
        [
          "brown_colors",
          "theAble",
          false
        ],
        [
          "call",
          "verb",
          false
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion",
          false
        ],
        [
          "canBeQuestion",
          "canBeQuestion",
          false
        ],
        [
          "cancel",
          "verb",
          false
        ],
        [
          "capitalize",
          "verb",
          false
        ],
        [
          "case",
          "reportElement",
          false
        ],
        [
          "case",
          "reportElementProperty",
          false
        ],
        [
          "case",
          "state",
          false
        ],
        [
          "changeState",
          "verb",
          false
        ],
        [
          "chart",
          "concept",
          false
        ],
        [
          "chart",
          "hierarchyAble",
          false
        ],
        [
          "chart",
          "isEdee",
          false
        ],
        [
          "chart",
          "isEder",
          false
        ],
        [
          "chart",
          "moveable",
          false
        ],
        [
          "chart",
          "object",
          false
        ],
        [
          "chart",
          "orderable",
          false
        ],
        [
          "chart",
          "property",
          false
        ],
        [
          "chart",
          "queryable",
          false
        ],
        [
          "chart",
          "theAble",
          false
        ],
        [
          "chart_modifier",
          "chart_modifier",
          false
        ],
        [
          "chartruese_colors",
          "green_colors",
          false
        ],
        [
          "chartruese_colors",
          "hierarchyAble",
          false
        ],
        [
          "chartruese_colors",
          "isEdee",
          false
        ],
        [
          "chartruese_colors",
          "isEder",
          false
        ],
        [
          "chartruese_colors",
          "object",
          false
        ],
        [
          "chartruese_colors",
          "property",
          false
        ],
        [
          "chartruese_colors",
          "queryable",
          false
        ],
        [
          "chartruese_colors",
          "theAble",
          false
        ],
        [
          "clear",
          "verb",
          false
        ],
        [
          "color_colors",
          "concept",
          false
        ],
        [
          "color_colors",
          "hierarchyAble",
          false
        ],
        [
          "color_colors",
          "isEdee",
          false
        ],
        [
          "color_colors",
          "isEder",
          false
        ],
        [
          "color_colors",
          "object",
          false
        ],
        [
          "color_colors",
          "property",
          false
        ],
        [
          "color_colors",
          "queryable",
          false
        ],
        [
          "color_colors",
          "reportElement",
          false
        ],
        [
          "color_colors",
          "state",
          false
        ],
        [
          "color_colors",
          "theAble",
          false
        ],
        [
          "color_colors_modifier",
          "color_colors_modifier",
          false
        ],
        [
          "column",
          "comparable",
          false
        ],
        [
          "column",
          "countable",
          false
        ],
        [
          "columnAddedTo",
          "preposition",
          false
        ],
        [
          "comparable",
          "comparable",
          false
        ],
        [
          "compoundReportElement",
          "reportElement",
          false
        ],
        [
          "compoundReportElement",
          "theAble",
          false
        ],
        [
          "concept",
          "queryable",
          false
        ],
        [
          "concept",
          "theAble",
          false
        ],
        [
          "condition",
          "condition",
          false
        ],
        [
          "contextOfReportElement",
          "preposition",
          false
        ],
        [
          "countable",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "hierarchyAble",
          false
        ],
        [
          "crimson_colors",
          "isEdee",
          false
        ],
        [
          "crimson_colors",
          "isEder",
          false
        ],
        [
          "crimson_colors",
          "object",
          false
        ],
        [
          "crimson_colors",
          "property",
          false
        ],
        [
          "crimson_colors",
          "queryable",
          false
        ],
        [
          "crimson_colors",
          "red_colors",
          false
        ],
        [
          "crimson_colors",
          "theAble",
          false
        ],
        [
          "cyan_colors",
          "blue_colors",
          false
        ],
        [
          "cyan_colors",
          "hierarchyAble",
          false
        ],
        [
          "cyan_colors",
          "isEdee",
          false
        ],
        [
          "cyan_colors",
          "isEder",
          false
        ],
        [
          "cyan_colors",
          "object",
          false
        ],
        [
          "cyan_colors",
          "property",
          false
        ],
        [
          "cyan_colors",
          "queryable",
          false
        ],
        [
          "cyan_colors",
          "theAble",
          false
        ],
        [
          "dark_colors",
          "brightness_colors",
          false
        ],
        [
          "dark_colors",
          "hierarchyAble",
          false
        ],
        [
          "dark_colors",
          "isEdee",
          false
        ],
        [
          "dark_colors",
          "isEder",
          false
        ],
        [
          "dark_colors",
          "object",
          false
        ],
        [
          "dark_colors",
          "property",
          false
        ],
        [
          "dark_colors",
          "queryable",
          false
        ],
        [
          "dark_colors",
          "theAble",
          false
        ],
        [
          "descending",
          "hierarchyAble",
          false
        ],
        [
          "descending",
          "isEdee",
          false
        ],
        [
          "descending",
          "isEder",
          false
        ],
        [
          "descending",
          "object",
          false
        ],
        [
          "descending",
          "property",
          false
        ],
        [
          "descending",
          "queryable",
          false
        ],
        [
          "descending",
          "sort_ordering",
          false
        ],
        [
          "descending",
          "theAble",
          false
        ],
        [
          "direction",
          "direction",
          false
        ],
        [
          "divideByExpression",
          "mathematicalExpression",
          false
        ],
        [
          "divideByOperator",
          "mathematical_operator",
          false
        ],
        [
          "doubleQuote",
          "queryable",
          false
        ],
        [
          "down",
          "direction",
          false
        ],
        [
          "evaluate",
          "verb",
          false
        ],
        [
          "forTable",
          "preposition",
          false
        ],
        [
          "gold_colors",
          "hierarchyAble",
          false
        ],
        [
          "gold_colors",
          "isEdee",
          false
        ],
        [
          "gold_colors",
          "isEder",
          false
        ],
        [
          "gold_colors",
          "object",
          false
        ],
        [
          "gold_colors",
          "property",
          false
        ],
        [
          "gold_colors",
          "queryable",
          false
        ],
        [
          "gold_colors",
          "theAble",
          false
        ],
        [
          "gold_colors",
          "yellow_colors",
          false
        ],
        [
          "graph",
          "concept",
          false
        ],
        [
          "graph",
          "hierarchyAble",
          false
        ],
        [
          "graph",
          "isEdee",
          false
        ],
        [
          "graph",
          "isEder",
          false
        ],
        [
          "graph",
          "moveable",
          false
        ],
        [
          "graph",
          "object",
          false
        ],
        [
          "graph",
          "orderable",
          false
        ],
        [
          "graph",
          "property",
          false
        ],
        [
          "graph",
          "queryable",
          false
        ],
        [
          "graph",
          "theAble",
          false
        ],
        [
          "graphAction",
          "verb",
          false
        ],
        [
          "graph_modifier",
          "graph_modifier",
          false
        ],
        [
          "gray_colors",
          "color_colors",
          false
        ],
        [
          "gray_colors",
          "hierarchyAble",
          false
        ],
        [
          "gray_colors",
          "isEdee",
          false
        ],
        [
          "gray_colors",
          "isEder",
          false
        ],
        [
          "gray_colors",
          "object",
          false
        ],
        [
          "gray_colors",
          "property",
          false
        ],
        [
          "gray_colors",
          "queryable",
          false
        ],
        [
          "gray_colors",
          "theAble",
          false
        ],
        [
          "green_colors",
          "color_colors",
          false
        ],
        [
          "green_colors",
          "hierarchyAble",
          false
        ],
        [
          "green_colors",
          "isEdee",
          false
        ],
        [
          "green_colors",
          "isEder",
          false
        ],
        [
          "green_colors",
          "object",
          false
        ],
        [
          "green_colors",
          "property",
          false
        ],
        [
          "green_colors",
          "queryable",
          false
        ],
        [
          "green_colors",
          "theAble",
          false
        ],
        [
          "groupBy",
          "preposition",
          false
        ],
        [
          "groupByColumns",
          "verb",
          false
        ],
        [
          "hasCountOfPieces",
          "countable",
          false
        ],
        [
          "have",
          "canBeDoQuestion",
          false
        ],
        [
          "have",
          "canBeQuestion",
          false
        ],
        [
          "header",
          "reportElement",
          false
        ],
        [
          "header",
          "theAble",
          false
        ],
        [
          "hex_colors",
          "color_colors_modifier",
          false
        ],
        [
          "hex_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors",
          "isEder",
          false
        ],
        [
          "hex_colors",
          "object",
          false
        ],
        [
          "hex_colors",
          "property",
          false
        ],
        [
          "hex_colors",
          "queryable",
          false
        ],
        [
          "hex_colors",
          "theAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "adjective",
          true
        ],
        [
          "hex_colors_color_colors",
          "color_colors",
          false
        ],
        [
          "hex_colors_color_colors",
          "concept",
          false
        ],
        [
          "hex_colors_color_colors",
          "hierarchyAble",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEdee",
          false
        ],
        [
          "hex_colors_color_colors",
          "isEder",
          false
        ],
        [
          "hex_colors_color_colors",
          "object",
          false
        ],
        [
          "hex_colors_color_colors",
          "property",
          false
        ],
        [
          "hex_colors_color_colors",
          "queryable",
          false
        ],
        [
          "hex_colors_color_colors",
          "theAble",
          false
        ],
        [
          "hierarchyAble",
          "queryable",
          false
        ],
        [
          "highest",
          "condition",
          false
        ],
        [
          "ifAble",
          "ifAble",
          false
        ],
        [
          "indigo_colors",
          "hierarchyAble",
          false
        ],
        [
          "indigo_colors",
          "isEdee",
          false
        ],
        [
          "indigo_colors",
          "isEder",
          false
        ],
        [
          "indigo_colors",
          "object",
          false
        ],
        [
          "indigo_colors",
          "property",
          false
        ],
        [
          "indigo_colors",
          "purple_colors",
          false
        ],
        [
          "indigo_colors",
          "queryable",
          false
        ],
        [
          "indigo_colors",
          "theAble",
          false
        ],
        [
          "is",
          "canBeQuestion",
          false
        ],
        [
          "is",
          "verb",
          false
        ],
        [
          "isEdee",
          "isEdee",
          false
        ],
        [
          "isEder",
          "isEder",
          false
        ],
        [
          "it",
          "pronoun",
          false
        ],
        [
          "it",
          "queryable",
          false
        ],
        [
          "it",
          "thisitthat",
          false
        ],
        [
          "it",
          "toAble",
          false
        ],
        [
          "ivory_colors",
          "hierarchyAble",
          false
        ],
        [
          "ivory_colors",
          "isEdee",
          false
        ],
        [
          "ivory_colors",
          "isEder",
          false
        ],
        [
          "ivory_colors",
          "object",
          false
        ],
        [
          "ivory_colors",
          "property",
          false
        ],
        [
          "ivory_colors",
          "queryable",
          false
        ],
        [
          "ivory_colors",
          "theAble",
          false
        ],
        [
          "ivory_colors",
          "white_colors",
          false
        ],
        [
          "khaki_colors",
          "hierarchyAble",
          false
        ],
        [
          "khaki_colors",
          "isEdee",
          false
        ],
        [
          "khaki_colors",
          "isEder",
          false
        ],
        [
          "khaki_colors",
          "object",
          false
        ],
        [
          "khaki_colors",
          "property",
          false
        ],
        [
          "khaki_colors",
          "queryable",
          false
        ],
        [
          "khaki_colors",
          "theAble",
          false
        ],
        [
          "khaki_colors",
          "yellow_colors",
          false
        ],
        [
          "lavender_colors",
          "hierarchyAble",
          false
        ],
        [
          "lavender_colors",
          "isEdee",
          false
        ],
        [
          "lavender_colors",
          "isEder",
          false
        ],
        [
          "lavender_colors",
          "object",
          false
        ],
        [
          "lavender_colors",
          "property",
          false
        ],
        [
          "lavender_colors",
          "purple_colors",
          false
        ],
        [
          "lavender_colors",
          "queryable",
          false
        ],
        [
          "lavender_colors",
          "theAble",
          false
        ],
        [
          "left",
          "direction",
          false
        ],
        [
          "light_colors",
          "brightness_colors",
          false
        ],
        [
          "light_colors",
          "hierarchyAble",
          false
        ],
        [
          "light_colors",
          "isEdee",
          false
        ],
        [
          "light_colors",
          "isEder",
          false
        ],
        [
          "light_colors",
          "object",
          false
        ],
        [
          "light_colors",
          "property",
          false
        ],
        [
          "light_colors",
          "queryable",
          false
        ],
        [
          "light_colors",
          "theAble",
          false
        ],
        [
          "lime_colors",
          "green_colors",
          false
        ],
        [
          "lime_colors",
          "hierarchyAble",
          false
        ],
        [
          "lime_colors",
          "isEdee",
          false
        ],
        [
          "lime_colors",
          "isEder",
          false
        ],
        [
          "lime_colors",
          "object",
          false
        ],
        [
          "lime_colors",
          "property",
          false
        ],
        [
          "lime_colors",
          "queryable",
          false
        ],
        [
          "lime_colors",
          "theAble",
          false
        ],
        [
          "line",
          "chart_modifier",
          false
        ],
        [
          "line",
          "graph_modifier",
          false
        ],
        [
          "line",
          "hierarchyAble",
          false
        ],
        [
          "line",
          "isEdee",
          false
        ],
        [
          "line",
          "isEder",
          false
        ],
        [
          "line",
          "object",
          false
        ],
        [
          "line",
          "property",
          false
        ],
        [
          "line",
          "queryable",
          false
        ],
        [
          "line",
          "theAble",
          false
        ],
        [
          "line_chart",
          "adjective",
          true
        ],
        [
          "line_chart",
          "chart",
          false
        ],
        [
          "line_chart",
          "concept",
          false
        ],
        [
          "line_chart",
          "hierarchyAble",
          false
        ],
        [
          "line_chart",
          "isEdee",
          false
        ],
        [
          "line_chart",
          "isEder",
          false
        ],
        [
          "line_chart",
          "object",
          false
        ],
        [
          "line_chart",
          "property",
          false
        ],
        [
          "line_chart",
          "queryable",
          false
        ],
        [
          "line_chart",
          "theAble",
          false
        ],
        [
          "line_graph",
          "adjective",
          true
        ],
        [
          "line_graph",
          "concept",
          false
        ],
        [
          "line_graph",
          "graph",
          false
        ],
        [
          "line_graph",
          "hierarchyAble",
          false
        ],
        [
          "line_graph",
          "isEdee",
          false
        ],
        [
          "line_graph",
          "isEder",
          false
        ],
        [
          "line_graph",
          "object",
          false
        ],
        [
          "line_graph",
          "property",
          false
        ],
        [
          "line_graph",
          "queryable",
          false
        ],
        [
          "line_graph",
          "theAble",
          false
        ],
        [
          "listening",
          "action",
          false
        ],
        [
          "lowercase",
          "case",
          false
        ],
        [
          "lowest",
          "condition",
          false
        ],
        [
          "magenta_colors",
          "hierarchyAble",
          false
        ],
        [
          "magenta_colors",
          "isEdee",
          false
        ],
        [
          "magenta_colors",
          "isEder",
          false
        ],
        [
          "magenta_colors",
          "object",
          false
        ],
        [
          "magenta_colors",
          "property",
          false
        ],
        [
          "magenta_colors",
          "purple_colors",
          false
        ],
        [
          "magenta_colors",
          "queryable",
          false
        ],
        [
          "magenta_colors",
          "theAble",
          false
        ],
        [
          "make",
          "verb",
          false
        ],
        [
          "makeGraph",
          "verb",
          false
        ],
        [
          "makeGraphOf",
          "preposition",
          false
        ],
        [
          "maroon_colors",
          "brown_colors",
          false
        ],
        [
          "maroon_colors",
          "hierarchyAble",
          false
        ],
        [
          "maroon_colors",
          "isEdee",
          false
        ],
        [
          "maroon_colors",
          "isEder",
          false
        ],
        [
          "maroon_colors",
          "object",
          false
        ],
        [
          "maroon_colors",
          "property",
          false
        ],
        [
          "maroon_colors",
          "queryable",
          false
        ],
        [
          "maroon_colors",
          "theAble",
          false
        ],
        [
          "mathematical",
          "hierarchyAble",
          false
        ],
        [
          "mathematical",
          "isEdee",
          false
        ],
        [
          "mathematical",
          "isEder",
          false
        ],
        [
          "mathematical",
          "object",
          false
        ],
        [
          "mathematical",
          "operator_modifier",
          false
        ],
        [
          "mathematical",
          "property",
          false
        ],
        [
          "mathematical",
          "queryable",
          false
        ],
        [
          "mathematical",
          "theAble",
          false
        ],
        [
          "mathematicalExpression",
          "concept",
          false
        ],
        [
          "mathematicalExpression",
          "number",
          false
        ],
        [
          "mathematical_operator",
          "adjective",
          true
        ],
        [
          "mathematical_operator",
          "concept",
          false
        ],
        [
          "mathematical_operator",
          "hierarchyAble",
          false
        ],
        [
          "mathematical_operator",
          "isEdee",
          false
        ],
        [
          "mathematical_operator",
          "isEder",
          false
        ],
        [
          "mathematical_operator",
          "object",
          false
        ],
        [
          "mathematical_operator",
          "operator",
          false
        ],
        [
          "mathematical_operator",
          "property",
          false
        ],
        [
          "mathematical_operator",
          "queryable",
          false
        ],
        [
          "mathematical_operator",
          "theAble",
          false
        ],
        [
          "memorable",
          "theAble",
          false
        ],
        [
          "minusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "minusOperator",
          "mathematical_operator",
          false
        ],
        [
          "modifies",
          "verb",
          false
        ],
        [
          "move",
          "verb",
          false
        ],
        [
          "moveAmount",
          "preposition",
          false
        ],
        [
          "moveable",
          "moveable",
          false
        ],
        [
          "nameable",
          "nameable",
          false
        ],
        [
          "navy_colors",
          "blue_colors",
          false
        ],
        [
          "navy_colors",
          "hierarchyAble",
          false
        ],
        [
          "navy_colors",
          "isEdee",
          false
        ],
        [
          "navy_colors",
          "isEder",
          false
        ],
        [
          "navy_colors",
          "object",
          false
        ],
        [
          "navy_colors",
          "property",
          false
        ],
        [
          "navy_colors",
          "queryable",
          false
        ],
        [
          "navy_colors",
          "theAble",
          false
        ],
        [
          "noun",
          "theAble",
          false
        ],
        [
          "number",
          "quantifier",
          false
        ],
        [
          "number",
          "queryable",
          false
        ],
        [
          "object",
          "queryable",
          false
        ],
        [
          "object",
          "theAble",
          false
        ],
        [
          "ofDbProperty",
          "preposition",
          false
        ],
        [
          "olive_colors",
          "green_colors",
          false
        ],
        [
          "olive_colors",
          "hierarchyAble",
          false
        ],
        [
          "olive_colors",
          "isEdee",
          false
        ],
        [
          "olive_colors",
          "isEder",
          false
        ],
        [
          "olive_colors",
          "object",
          false
        ],
        [
          "olive_colors",
          "property",
          false
        ],
        [
          "olive_colors",
          "queryable",
          false
        ],
        [
          "olive_colors",
          "theAble",
          false
        ],
        [
          "operator",
          "concept",
          false
        ],
        [
          "operator",
          "hierarchyAble",
          false
        ],
        [
          "operator",
          "isEdee",
          false
        ],
        [
          "operator",
          "isEder",
          false
        ],
        [
          "operator",
          "object",
          false
        ],
        [
          "operator",
          "property",
          false
        ],
        [
          "operator",
          "queryable",
          false
        ],
        [
          "operator",
          "theAble",
          false
        ],
        [
          "operator_modifier",
          "operator_modifier",
          false
        ],
        [
          "orAble",
          "ifAble",
          false
        ],
        [
          "orange_colors",
          "color_colors",
          false
        ],
        [
          "orange_colors",
          "hierarchyAble",
          false
        ],
        [
          "orange_colors",
          "isEdee",
          false
        ],
        [
          "orange_colors",
          "isEder",
          false
        ],
        [
          "orange_colors",
          "object",
          false
        ],
        [
          "orange_colors",
          "property",
          false
        ],
        [
          "orange_colors",
          "queryable",
          false
        ],
        [
          "orange_colors",
          "theAble",
          false
        ],
        [
          "orderable",
          "orderable",
          false
        ],
        [
          "ordering",
          "concept",
          false
        ],
        [
          "ordering",
          "hierarchyAble",
          false
        ],
        [
          "ordering",
          "isEdee",
          false
        ],
        [
          "ordering",
          "isEder",
          false
        ],
        [
          "ordering",
          "object",
          false
        ],
        [
          "ordering",
          "property",
          false
        ],
        [
          "ordering",
          "queryable",
          false
        ],
        [
          "ordering",
          "theAble",
          false
        ],
        [
          "ordering_modifier",
          "ordering_modifier",
          false
        ],
        [
          "ordinal",
          "number",
          false
        ],
        [
          "ordinalOnOrdered",
          "adjective",
          false
        ],
        [
          "pie",
          "chart_modifier",
          false
        ],
        [
          "pie",
          "graph_modifier",
          false
        ],
        [
          "pie",
          "hierarchyAble",
          false
        ],
        [
          "pie",
          "isEdee",
          false
        ],
        [
          "pie",
          "isEder",
          false
        ],
        [
          "pie",
          "object",
          false
        ],
        [
          "pie",
          "property",
          false
        ],
        [
          "pie",
          "queryable",
          false
        ],
        [
          "pie",
          "theAble",
          false
        ],
        [
          "pie_chart",
          "adjective",
          true
        ],
        [
          "pie_chart",
          "chart",
          false
        ],
        [
          "pie_chart",
          "concept",
          false
        ],
        [
          "pie_chart",
          "hierarchyAble",
          false
        ],
        [
          "pie_chart",
          "isEdee",
          false
        ],
        [
          "pie_chart",
          "isEder",
          false
        ],
        [
          "pie_chart",
          "object",
          false
        ],
        [
          "pie_chart",
          "property",
          false
        ],
        [
          "pie_chart",
          "queryable",
          false
        ],
        [
          "pie_chart",
          "theAble",
          false
        ],
        [
          "pie_graph",
          "adjective",
          true
        ],
        [
          "pie_graph",
          "concept",
          false
        ],
        [
          "pie_graph",
          "graph",
          false
        ],
        [
          "pie_graph",
          "hierarchyAble",
          false
        ],
        [
          "pie_graph",
          "isEdee",
          false
        ],
        [
          "pie_graph",
          "isEder",
          false
        ],
        [
          "pie_graph",
          "object",
          false
        ],
        [
          "pie_graph",
          "property",
          false
        ],
        [
          "pie_graph",
          "queryable",
          false
        ],
        [
          "pie_graph",
          "theAble",
          false
        ],
        [
          "pink_colors",
          "color_colors",
          false
        ],
        [
          "pink_colors",
          "hierarchyAble",
          false
        ],
        [
          "pink_colors",
          "isEdee",
          false
        ],
        [
          "pink_colors",
          "isEder",
          false
        ],
        [
          "pink_colors",
          "object",
          false
        ],
        [
          "pink_colors",
          "property",
          false
        ],
        [
          "pink_colors",
          "queryable",
          false
        ],
        [
          "pink_colors",
          "theAble",
          false
        ],
        [
          "plusExpression",
          "mathematicalExpression",
          false
        ],
        [
          "plusOperator",
          "mathematical_operator",
          false
        ],
        [
          "preposition",
          "preposition",
          false
        ],
        [
          "pronoun",
          "pronoun",
          false
        ],
        [
          "property",
          "queryable",
          false
        ],
        [
          "property",
          "theAble",
          false
        ],
        [
          "punctuation",
          "punctuation",
          false
        ],
        [
          "purple_colors",
          "color_colors",
          false
        ],
        [
          "purple_colors",
          "hierarchyAble",
          false
        ],
        [
          "purple_colors",
          "isEdee",
          false
        ],
        [
          "purple_colors",
          "isEder",
          false
        ],
        [
          "purple_colors",
          "object",
          false
        ],
        [
          "purple_colors",
          "property",
          false
        ],
        [
          "purple_colors",
          "queryable",
          false
        ],
        [
          "purple_colors",
          "theAble",
          false
        ],
        [
          "quantifier",
          "quantifier",
          false
        ],
        [
          "queryable",
          "queryable",
          false
        ],
        [
          "questionMark",
          "punctuation",
          false
        ],
        [
          "readonly",
          "queryable",
          false
        ],
        [
          "reason",
          "queryable",
          false
        ],
        [
          "reason",
          "theAble",
          false
        ],
        [
          "recordCount",
          "column",
          false
        ],
        [
          "recordCount",
          "theAble",
          false
        ],
        [
          "red_colors",
          "color_colors",
          false
        ],
        [
          "red_colors",
          "hierarchyAble",
          false
        ],
        [
          "red_colors",
          "isEdee",
          false
        ],
        [
          "red_colors",
          "isEder",
          false
        ],
        [
          "red_colors",
          "object",
          false
        ],
        [
          "red_colors",
          "property",
          false
        ],
        [
          "red_colors",
          "queryable",
          false
        ],
        [
          "red_colors",
          "theAble",
          false
        ],
        [
          "remember",
          "verb",
          false
        ],
        [
          "report",
          "nameable",
          false
        ],
        [
          "report",
          "theAble",
          false
        ],
        [
          "reportElement",
          "reportElement",
          false
        ],
        [
          "reportElementContext",
          "reportElementContext",
          false
        ],
        [
          "reportElementProperty",
          "reportElementProperty",
          false
        ],
        [
          "reportable",
          "concept",
          false
        ],
        [
          "reportable",
          "hierarchyAble",
          false
        ],
        [
          "reportable",
          "isEdee",
          false
        ],
        [
          "reportable",
          "isEder",
          false
        ],
        [
          "reportable",
          "object",
          false
        ],
        [
          "reportable",
          "property",
          false
        ],
        [
          "reportable",
          "queryable",
          false
        ],
        [
          "reportable",
          "theAble",
          false
        ],
        [
          "right",
          "direction",
          false
        ],
        [
          "sales",
          "reportable",
          false
        ],
        [
          "sales",
          "theAble",
          false
        ],
        [
          "select",
          "verb",
          false
        ],
        [
          "show",
          "verb",
          false
        ],
        [
          "showCollection",
          "verb",
          false
        ],
        [
          "showColumn",
          "verb",
          false
        ],
        [
          "showReport",
          "verb",
          false
        ],
        [
          "sienna_colors",
          "brown_colors",
          false
        ],
        [
          "sienna_colors",
          "hierarchyAble",
          false
        ],
        [
          "sienna_colors",
          "isEdee",
          false
        ],
        [
          "sienna_colors",
          "isEder",
          false
        ],
        [
          "sienna_colors",
          "object",
          false
        ],
        [
          "sienna_colors",
          "property",
          false
        ],
        [
          "sienna_colors",
          "queryable",
          false
        ],
        [
          "sienna_colors",
          "theAble",
          false
        ],
        [
          "silver_colors",
          "gray_colors",
          false
        ],
        [
          "silver_colors",
          "hierarchyAble",
          false
        ],
        [
          "silver_colors",
          "isEdee",
          false
        ],
        [
          "silver_colors",
          "isEder",
          false
        ],
        [
          "silver_colors",
          "object",
          false
        ],
        [
          "silver_colors",
          "property",
          false
        ],
        [
          "silver_colors",
          "queryable",
          false
        ],
        [
          "silver_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "hierarchyAble",
          false
        ],
        [
          "snow_colors",
          "isEdee",
          false
        ],
        [
          "snow_colors",
          "isEder",
          false
        ],
        [
          "snow_colors",
          "object",
          false
        ],
        [
          "snow_colors",
          "property",
          false
        ],
        [
          "snow_colors",
          "queryable",
          false
        ],
        [
          "snow_colors",
          "theAble",
          false
        ],
        [
          "snow_colors",
          "white_colors",
          false
        ],
        [
          "sort",
          "hierarchyAble",
          false
        ],
        [
          "sort",
          "isEdee",
          false
        ],
        [
          "sort",
          "isEder",
          false
        ],
        [
          "sort",
          "object",
          false
        ],
        [
          "sort",
          "ordering_modifier",
          false
        ],
        [
          "sort",
          "property",
          false
        ],
        [
          "sort",
          "queryable",
          false
        ],
        [
          "sort",
          "theAble",
          false
        ],
        [
          "sortBy",
          "preposition",
          false
        ],
        [
          "sortByColumns",
          "verb",
          false
        ],
        [
          "sortOrdering",
          "adjective",
          false
        ],
        [
          "sort_ordering",
          "adjective",
          true
        ],
        [
          "sort_ordering",
          "concept",
          false
        ],
        [
          "sort_ordering",
          "hierarchyAble",
          false
        ],
        [
          "sort_ordering",
          "isEdee",
          false
        ],
        [
          "sort_ordering",
          "isEder",
          false
        ],
        [
          "sort_ordering",
          "object",
          false
        ],
        [
          "sort_ordering",
          "ordering",
          false
        ],
        [
          "sort_ordering",
          "property",
          false
        ],
        [
          "sort_ordering",
          "queryable",
          false
        ],
        [
          "sort_ordering",
          "theAble",
          false
        ],
        [
          "state",
          "state",
          false
        ],
        [
          "stm_before",
          "adjective",
          false
        ],
        [
          "stop",
          "verb",
          false
        ],
        [
          "table",
          "moveable",
          false
        ],
        [
          "table",
          "nameable",
          false
        ],
        [
          "table",
          "orderable",
          false
        ],
        [
          "table",
          "reportElement",
          false
        ],
        [
          "table",
          "reportElementContext",
          false
        ],
        [
          "table",
          "theAble",
          false
        ],
        [
          "tan_colors",
          "brown_colors",
          false
        ],
        [
          "tan_colors",
          "hierarchyAble",
          false
        ],
        [
          "tan_colors",
          "isEdee",
          false
        ],
        [
          "tan_colors",
          "isEder",
          false
        ],
        [
          "tan_colors",
          "object",
          false
        ],
        [
          "tan_colors",
          "property",
          false
        ],
        [
          "tan_colors",
          "queryable",
          false
        ],
        [
          "tan_colors",
          "theAble",
          false
        ],
        [
          "teal_colors",
          "green_colors",
          false
        ],
        [
          "teal_colors",
          "hierarchyAble",
          false
        ],
        [
          "teal_colors",
          "isEdee",
          false
        ],
        [
          "teal_colors",
          "isEder",
          false
        ],
        [
          "teal_colors",
          "object",
          false
        ],
        [
          "teal_colors",
          "property",
          false
        ],
        [
          "teal_colors",
          "queryable",
          false
        ],
        [
          "teal_colors",
          "theAble",
          false
        ],
        [
          "that",
          "thisitthat",
          false
        ],
        [
          "the",
          "articlePOS",
          false
        ],
        [
          "theAble",
          "theAble",
          false
        ],
        [
          "this",
          "pronoun",
          false
        ],
        [
          "this",
          "queryable",
          false
        ],
        [
          "this",
          "reportElement",
          false
        ],
        [
          "this",
          "thisitthat",
          false
        ],
        [
          "thisReportElement",
          "articlePOS",
          false
        ],
        [
          "thisitthat",
          "queryable",
          false
        ],
        [
          "timesExpression",
          "mathematicalExpression",
          false
        ],
        [
          "timesOperator",
          "mathematical_operator",
          false
        ],
        [
          "to",
          "preposition",
          false
        ],
        [
          "toAble",
          "toAble",
          false
        ],
        [
          "turquoise_colors",
          "blue_colors",
          false
        ],
        [
          "turquoise_colors",
          "hierarchyAble",
          false
        ],
        [
          "turquoise_colors",
          "isEdee",
          false
        ],
        [
          "turquoise_colors",
          "isEder",
          false
        ],
        [
          "turquoise_colors",
          "object",
          false
        ],
        [
          "turquoise_colors",
          "property",
          false
        ],
        [
          "turquoise_colors",
          "queryable",
          false
        ],
        [
          "turquoise_colors",
          "theAble",
          false
        ],
        [
          "type",
          "property",
          false
        ],
        [
          "type",
          "whatAble",
          false
        ],
        [
          "unknown",
          "hierarchyAble",
          false
        ],
        [
          "unknown",
          "queryable",
          false
        ],
        [
          "unknown",
          "theAble",
          false
        ],
        [
          "unselect",
          "verb",
          false
        ],
        [
          "up",
          "direction",
          false
        ],
        [
          "uppercase",
          "case",
          false
        ],
        [
          "verb",
          "verb",
          false
        ],
        [
          "violet_colors",
          "hierarchyAble",
          false
        ],
        [
          "violet_colors",
          "isEdee",
          false
        ],
        [
          "violet_colors",
          "isEder",
          false
        ],
        [
          "violet_colors",
          "object",
          false
        ],
        [
          "violet_colors",
          "property",
          false
        ],
        [
          "violet_colors",
          "purple_colors",
          false
        ],
        [
          "violet_colors",
          "queryable",
          false
        ],
        [
          "violet_colors",
          "theAble",
          false
        ],
        [
          "what",
          "object",
          false
        ],
        [
          "what",
          "queryable",
          false
        ],
        [
          "whatAble",
          "queryable",
          false
        ],
        [
          "white_colors",
          "color_colors",
          false
        ],
        [
          "white_colors",
          "hierarchyAble",
          false
        ],
        [
          "white_colors",
          "isEdee",
          false
        ],
        [
          "white_colors",
          "isEder",
          false
        ],
        [
          "white_colors",
          "object",
          false
        ],
        [
          "white_colors",
          "property",
          false
        ],
        [
          "white_colors",
          "queryable",
          false
        ],
        [
          "white_colors",
          "theAble",
          false
        ],
        [
          "whose",
          "object",
          false
        ],
        [
          "x",
          "number",
          false
        ],
        [
          "xfx",
          "queryable",
          false
        ],
        [
          "y",
          "number",
          false
        ],
        [
          "yellow_colors",
          "color_colors",
          false
        ],
        [
          "yellow_colors",
          "hierarchyAble",
          false
        ],
        [
          "yellow_colors",
          "isEdee",
          false
        ],
        [
          "yellow_colors",
          "isEder",
          false
        ],
        [
          "yellow_colors",
          "object",
          false
        ],
        [
          "yellow_colors",
          "property",
          false
        ],
        [
          "yellow_colors",
          "queryable",
          false
        ],
        [
          "yellow_colors",
          "theAble",
          false
        ]
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "modifies",
                0
              ],
              [
                "reportElement",
                0
              ],
              [
                "unknown",
                0
              ]
            ],
            "counter": 1
          },
          {
            "op": [
              "modifies",
              0
            ],
            "ops": [
              [
                "modifies",
                0
              ],
              [
                "reportElement",
                0
              ]
            ],
            "counter": 2
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "word": "modifies",
          "number": "one",
          "flatten": false,
          "text": "selected modifies reportelement",
          "marker": "modifies",
          "range": {
            "start": 0,
            "end": 30
          },
          "dead": true,
          "modifiers": [
            {
              "value": "selected",
              "unknown": true,
              "text": "selected",
              "marker": "unknown",
              "word": "selected",
              "range": {
                "start": 0,
                "end": 7
              },
              "dead": true,
              "level": 1
            }
          ],
          "concept": {
            "marker": "reportElement",
            "value": "reportElement",
            "default": true,
            "text": "reportelement",
            "word": "reportelement",
            "range": {
              "start": 18,
              "end": 30
            },
            "level": 0
          },
          "level": 1,
          "topLevel": true,
          "touchedBy": [
            "mongo#call2"
          ]
        }
      ],
      "generated": [
        ""
      ],
      "paraphrases": [
        "selected modifies reportelement"
      ],
      "paraphrasesParenthesized": [],
      "generatedParenthesized": [],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "modifies",
            0
          ],
          [
            "reportElement",
            0
          ],
          [
            "unknown",
            0
          ]
        ],
        [
          [
            "modifies",
            0
          ],
          [
            "reportElement",
            0
          ],
          [
            "unknown",
            1
          ]
        ]
      ],
      "learned_contextual_priorities": [],
      "query": "selected modifies reportElement",
      "key": {
        "query": "selected modifies reportElement"
      }
    },
    {
      "apply": "async ({objects, addWords, config, s, fragments}) => {\n      const fragment = fragments(\"modifier23 modifies collection\")\n      const id = 'airbnb'\n      const word = 'airbnb'\n      const database = 'sample_airbnb'\n      const collection = 'listingsAndReviews'\n      const field = 'name'\n      const collections = [\n        { id: 'airbnb', word: 'airbnb', database: 'sample_airbnb', collection: 'listingsAndReviews', field: 'name', },\n\n        { id: 'comment', word: 'comment', database: 'sample_mflix', collection: 'comments', field: 'name', },\n        { id: 'user', word: 'user', database: 'sample_mflix', collection: 'users', field: 'name', },\n        { id: 'movie', word: 'movie', database: 'sample_mflix', collection: 'movies', field: 'title', },\n        // { id: 'customers', word: 'customers', database: 'sample_customers', collection: 'listingsAndReviews', field: 'name', },\n      ]\n\n      const addCollection = async ({ id, word, database, collection, field }) => {\n        config.addOperator(`([${id}])`)\n        config.addBridge(\n          { \n            id,\n            parents: ['theAble', 'reportable'], \n            words: helpers.words(word, { database, collection, path: [field] }),\n          },\n        )\n\n        const wordDef = {\n          collection,\n          database,\n          marker: id,\n          number: \"one\",\n          path: [ field ],\n          text: word,\n          word,\n        }\n\n        const mappings = [{\n          where: where(),\n          match: ({context}) => context.value == 'modifier23',\n          apply: ({context, cleanAssign}) => cleanAssign(context, wordDef),\n        }]\n        const instantiation = await fragment.instantiate(mappings)\n        await s(instantiation)\n        for (const { name } of await getFields(database, collection)) {\n          const word = name.replace(/_/g, \" \")\n          if (!objects.columnToCollection[name]) {\n            objects.columnToCollection[name] = []\n          }\n          objects.columnToCollection[name].push({ database, collection })\n\n          addWords('column', word, { id: 'column', path: [name] })\n          // config.addWord(word, { id: 'column', path: ['${f}'] })\n        }\n      }\n      objects.columnToCollection = {}\n      for (const collection of collections) {\n        await addCollection(collection)\n      }\n    }"
    }
  ],
  "fragments": [],
  "semantics": [],
  "associations": [
    [
      [
        "a",
        0
      ],
      [
        "concept",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        0
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "concept",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        0
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "bar",
        0
      ],
      [
        "comma",
        0
      ],
      [
        "line",
        0
      ],
      [
        "list",
        0
      ],
      [
        "modifies",
        0
      ],
      [
        "pie",
        0
      ],
      [
        "unknown",
        0
      ]
    ],
    [
      [
        "bar",
        0
      ],
      [
        "comma",
        0
      ],
      [
        "line",
        0
      ],
      [
        "list",
        0
      ],
      [
        "modifies",
        0
      ],
      [
        "pie",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "bar",
        0
      ],
      [
        "comma",
        0
      ],
      [
        "line",
        0
      ],
      [
        "list",
        0
      ],
      [
        "modifies",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "bar",
        0
      ],
      [
        "line",
        0
      ],
      [
        "list",
        0
      ],
      [
        "modifies",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "be",
        0
      ],
      [
        "briefOrWordy",
        0
      ]
    ],
    [
      [
        "comma",
        0
      ],
      [
        "list",
        0
      ],
      [
        "modifies",
        0
      ],
      [
        "unknown",
        0
      ]
    ],
    [
      [
        "comma",
        0
      ],
      [
        "list",
        0
      ],
      [
        "modifies",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "comma",
        0
      ],
      [
        "list",
        0
      ],
      [
        "modifies",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "comma",
        0
      ],
      [
        "list",
        1
      ],
      [
        "modifies",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "is",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "is",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "line",
        0
      ],
      [
        "list",
        0
      ],
      [
        "modifies",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "list",
        1
      ],
      [
        "modifies",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "list",
        1
      ],
      [
        "modifies",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "modifies",
        0
      ],
      [
        "reportElement",
        0
      ],
      [
        "unknown",
        0
      ]
    ],
    [
      [
        "modifies",
        0
      ],
      [
        "reportElement",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "modifies",
        0
      ],
      [
        "unknown",
        0
      ]
    ],
    [
      [
        "modifies",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "modifies",
        0
      ],
      [
        "unknown",
        1
      ]
    ]
  ],
  "learned_contextual_priorities": []
}